<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Mobius</title>
        <link>https://mobius.cool/</link>
        <description>我喜欢拿了橘子跑啊，因为knowledge is power！</description>
        <lastBuildDate>Sun, 14 Sep 2025 13:40:23 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <image>
            <title>Mobius</title>
            <url>https://mobius.cool/mobius.svg</url>
            <link>https://mobius.cool/</link>
        </image>
        <copyright>Copyright (c) 2022-present, Mobius contributors</copyright>
        <item>
            <title><![CDATA[工作一年半，做 UP 主一年，练习时长... ]]></title>
            <link>https://mobius.cool/2022.html</link>
            <guid>https://mobius.cool/2022.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="工作一年半-做-up-主一年-练习时长" tabindex="-1">工作一年半，做 UP 主一年，练习时长... <a class="header-anchor" href="#工作一年半-做-up-主一年-练习时长" aria-label="Permalink to &quot;工作一年半，做 UP 主一年，练习时长...&quot;">&ZeroWidthSpace;</a></h1>
<VideoLink bvId="BV1NA41197L9">23岁，工作一年半，做UP主一年 | 2022年终总结 B 站视频传送门</VideoLink><p>大家好，我是 Chocolate，一名前端开发程序员。</p>
<p>这篇文章算是和大家唠唠嗑了，总结一下今年的所见所想吧。</p>
<p>我会从技术角度，生活方面，以及大家可能会比较感兴趣的程序员做副业的话题，最后，也和大家说点我今年心态上的一些转变吧，咱们直接进入正文，不要忘了给我一个<strong>点赞</strong>，传统美德不能丢哈。</p>
<h2 id="技术角度" tabindex="-1">技术角度 <a class="header-anchor" href="#技术角度" aria-label="Permalink to &quot;技术角度&quot;">&ZeroWidthSpace;</a></h2>
<p>去年 7 月正式入职，有了这半年的摸索的时间，今年相对来说成长了很多，也算是对于自己组内所要做的事情都理清楚了，遇到一些跨部门协作这块的事情也能出面对接了，很明显感觉得到自己渐渐地能承担一些事情了。</p>
<p>当然，工作就是工作，具体内容也没啥好说的，不过今年我学了一手 Next.js 和 TailwindCSS，看过我往期 B 站视频的朋友们应该知道，下半年对于 Next.js 这块我更新的还是比较多的。</p>
<p>学习完了之后，立即就在下半年的工作中落地实践了，完成了我们新官网的开发，当然，这一定离不开设计师的功劳，我其实可以算是搬砖的，不过其中的一些交互，在往期视频中我分开有讲解过，在这里就放一张首页图片吧。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161904102.png?imageMogr2/format/webp" alt=""></p>
<p>当然，今年也杂七杂八的学了一些技术，大部分情况还是为了解决需求而使用，而对于 Next.js 这块，今年还出了 13 版本，当时我还出了介绍视频，要学习的东西还是挺多的，咱们明年视频继续保持更新。</p>
<h2 id="生活方面" tabindex="-1">生活方面 <a class="header-anchor" href="#生活方面" aria-label="Permalink to &quot;生活方面&quot;">&ZeroWidthSpace;</a></h2>
<p>2 月 11 日，家里面又新添加了一位毛孩子，与时间对应，所以就取名叫做十一了。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161903834.png?imageMogr2/format/webp" alt=""></p>
<p>另外一只是母美短猫，又是去年立秋加入，所以我们取名叫做秋咪，平常我写代码的时候，她就喜欢待在我旁边的沙发处睡觉。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161903356.png?imageMogr2/format/webp" alt=""></p>
<p>这也是工作之后发现的，许多家庭里面都会养一些猫猫狗狗，经过一天的工作之后，下班回来撸一撸他们，对我来说也是一种解压的方式，尤其是看着他们干饭的样子，给他们罐头吃，他们就会开心的打起呼噜来，他们也给我们的生活增添了许多乐趣。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161903270.png?imageMogr2/format/webp" alt=""></p>
<p>其它方面我就不一一介绍了，大部分阶段性所见所想在往期推文中也可以看到，就不重复了。</p>
<h2 id="关于副业的话题" tabindex="-1">关于副业的话题 <a class="header-anchor" href="#关于副业的话题" aria-label="Permalink to &quot;关于副业的话题&quot;">&ZeroWidthSpace;</a></h2>
<p>今年对于副业这一块我也进行了尝试，用简单几句话总结一下就是：过度在意反而会让人更加焦虑，而热爱可抵岁月漫长。</p>
<p>和我同届的毕业生也有许多写公众号的，当初咱们一开始都会写，但你会发现做着做着就会有人不做了，我对这块也思考了一下，其实大多数时候会与你的时间付出不成一个正向的比例的，就像咱们做 b 站一样，也许很长时间数据量都是很惨淡的，也许你需要至少 6 个月的时间才会看到数据的增长，或许更长，1 年，2 年等等，因此前期的投入会比较多，如果过度的在意这些数据的话，确实很容易让自己焦虑起来。</p>
<p>今年上半年我其实就是这样的，如果我真正把这件事情当做副业来看的话，我可能真的就做不下去，好像我做的还是工作，我在工作中做了一遍的东西我可能还要再做一遍。</p>
<p>因此，对于上半年我可能一直都处于焦虑与迷茫当中，而选择躲在自己的舒适区，在此期间读了几本对我影响还是比较大的书籍，如果要我推荐两本的话，我会推荐《认知觉醒》和《人间值得》。</p>
<p>也算是心理这一类的书籍了，对于我心态上的转变还是比较大的，在与作者进行心灵上的交流之后，我算是醒悟了。因此大家可以看到我的 B 站账号下半年渐渐开始更新了，粉丝数目还越来越多了。</p>
<p>我们再回到副业这个话题，现在我想明白了，因为我算是知识类的博主，我更应该去把<strong>免费</strong>这一块的东西给做好，至于它能给我带来多少反馈其实不是很重要了，我做的视频内容方向其实就是我平常所学的东西，当我分享出来之后，对我自己而言其实也是有很大收获的，讲出来和自己看一遍还是有蛮大差距的。</p>
<p>当然，这一块无论说多少意义也不大，咱们 23 年一起来见证好吧。</p>
<h2 id="做一件事情" tabindex="-1">做一件事情 <a class="header-anchor" href="#做一件事情" aria-label="Permalink to &quot;做一件事情&quot;">&ZeroWidthSpace;</a></h2>
<p>说完了这个副业的话题，我还是想和大家分享下对于做 UP 主这一年，到底能有多少收入呢，从最开始我只是一个搬运工，这前期都是转载，所以也不算是自己做，收益为 0 。</p>
<p>今年才陆陆续续的更新，这一段时间来呢，我大概看了下后台，有 420 元左右，主要还是 B 站这个平台的创作激励以及个人连续打卡的奖励，单个视频一般 1 块钱的收益都不到，毕竟播放量和点赞数不是很多，视频推广一般。</p>
<p>正好到年底了嘛，又很感谢 B 站这个平台，因此我将今年的全部收益进行公益捐赠，给到流浪小动物吧。</p>
<details class="details custom-block"><summary>截图</summary>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161904042.png?imageMogr2/format/webp" alt=""></p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161904293.png?imageMogr2/format/webp" alt=""></p>
</details>
<p>明年这个时间段的年终总结视频我依旧还是会捐出全部的收益，虽然这一块的收益不是很多，但至少也能捐献一袋猫粮了吧。</p>
<p>多余的话就不说了，一件小事，咱们接着下一个内容。</p>
<h2 id="一年之约" tabindex="-1">一年之约 <a class="header-anchor" href="#一年之约" aria-label="Permalink to &quot;一年之约&quot;">&ZeroWidthSpace;</a></h2>
<p>在副业这个话题下，我提到了我个人作为知识类的博主，我更应该去把<strong>免费</strong>这一块的东西给做好。而在今年的 7 月份我开通了我的知识星球，不过这个是属于知识付费类的产品，作为用户来说没有好的口碑也不会加入，因此在这里定下一年之约。</p>
<p>因为星球每个季度会有 <strong>100</strong> 个免费体验名额（这与我的网名「一百个Chocolate」又有点相关了），有效期为 1 年，因此在今年年底我决定发放给我的粉丝们，一年之内所有内容如果觉得内容不好、做的不好，随时也可以退，反正是白嫖很香。</p>
<p>明年我的打算是会开启模拟面试环节，对所有粉丝都有一次免费面试环节，不过前提是要配合我拍摄视频，当然我会对内容进行脱敏，这点放心，具体情况咱们 b 站视频列表见！</p>
<p>这次我也就不放图片在这了，如果大家想要<strong>免费加入</strong>，可以在<strong>公众号后台添加我为好友</strong>，我会邀请你来加入。</p>
<blockquote>
<p>但如果只是划划水那就还是算了，因为名额有限，下一次免费名额也许还要等很久，所以将免费的名额让给更需要的小伙伴会比较好。</p>
</blockquote>
<p>许多加我的小伙伴问我有没有粉丝群，有的还会问没有粉丝群我怕你就忘了我了，这倒不会，我个人认为我的记忆力还算不错的，所以忘事的情况还比较少。</p>
<p>其实之前有微信群也有 qq 群，但管理不方便，消息也是一刷而过。在这个星球里，对于每个问题都会认真仔细回答，还会拓展。</p>
<p>星球内已经写好了相关介绍与内容，其他的在这里就不罗列出来了，目标就是<strong>做前端界最活跃的星球！</strong></p>
<p>其次，很感谢从 7 月份我建立星球就选择付费的小伙伴，个个都是我的铁粉，这也许就是做一个编程类博主的快乐，因此对于今年已经加入过的小伙伴，明年可以免费再续一年，咱们都是一年之约。</p>
<p>希望 2023 年在星球内和大家一起成长，用时间来证明。</p>
<h2 id="未来的方向" tabindex="-1">未来的方向 <a class="header-anchor" href="#未来的方向" aria-label="Permalink to &quot;未来的方向&quot;">&ZeroWidthSpace;</a></h2>
<p>最后，和大家唠嗑下未来的方向，在有一期视频当中，我就提到自己未来一定要做一款属于自己的产品，当然，这个产品从想法到完成开发肯定不是我一个人就能完成的，一群人才能走的更远。</p>
<p>做自媒体这块的另外一个好处就是能够认识一些优秀的人，也许就在明年，我会结交一些志同道合的朋友们，然后大家一起可以做点东西，这个时间也许很快，也许需要长时间的积累，但我会向这条路前进。</p>
<p>到这里不妨就给个<strong>关注</strong>吧，到时候各位粉丝们还能优先体验我的产品。</p>
<p>至于为什么呢？来和大家聊一聊。</p>
<p>今年下半年看到了苗然这位 UP 主的离职视频，末尾的内容我也是比较有感触的，就是当我们工作之后，你会发现身边许多人不会再谈及梦想这个词了，有一次吃饭了问了玩得好的同事，就说到买房买车啊，然后就没有后续了。</p>
<p>这又让我想到戴建业老师对于人活了几十年，发现自己是 NPC 这件事的讨论了，工作之后真发现大多数人就是按照一个特定的方向去做，毕业找工作，存钱买房子。</p>
<p>这里我想说明一下，并不是想说这条道路不好怎样，而是我在接受自己普通的情况下，我也想在自己年轻的这个阶段做一点自己热爱的事情，朝着自己梦想出发，至少现在我的眼里还是有光的对吧哈哈。</p>
<p>最后，很感谢你能看到这里听我唠嗑了这么久，疫情也快过去了，不过现阶段还是多多注意防护，2023 年我相信又会是更加美好的一年，预祝大家新年快乐，加油~</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="工作一年半-做-up-主一年-练习时长" tabindex="-1">工作一年半，做 UP 主一年，练习时长... <a class="header-anchor" href="#工作一年半-做-up-主一年-练习时长" aria-label="Permalink to &quot;工作一年半，做 UP 主一年，练习时长...&quot;">&ZeroWidthSpace;</a></h1>
<VideoLink bvId="BV1NA41197L9">23岁，工作一年半，做UP主一年 | 2022年终总结 B 站视频传送门</VideoLink><p>大家好，我是 Chocolate，一名前端开发程序员。</p>
<p>这篇文章算是和大家唠唠嗑了，总结一下今年的所见所想吧。</p>
<p>我会从技术角度，生活方面，以及大家可能会比较感兴趣的程序员做副业的话题，最后，也和大家说点我今年心态上的一些转变吧，咱们直接进入正文，不要忘了给我一个<strong>点赞</strong>，传统美德不能丢哈。</p>
<h2 id="技术角度" tabindex="-1">技术角度 <a class="header-anchor" href="#技术角度" aria-label="Permalink to &quot;技术角度&quot;">&ZeroWidthSpace;</a></h2>
<p>去年 7 月正式入职，有了这半年的摸索的时间，今年相对来说成长了很多，也算是对于自己组内所要做的事情都理清楚了，遇到一些跨部门协作这块的事情也能出面对接了，很明显感觉得到自己渐渐地能承担一些事情了。</p>
<p>当然，工作就是工作，具体内容也没啥好说的，不过今年我学了一手 Next.js 和 TailwindCSS，看过我往期 B 站视频的朋友们应该知道，下半年对于 Next.js 这块我更新的还是比较多的。</p>
<p>学习完了之后，立即就在下半年的工作中落地实践了，完成了我们新官网的开发，当然，这一定离不开设计师的功劳，我其实可以算是搬砖的，不过其中的一些交互，在往期视频中我分开有讲解过，在这里就放一张首页图片吧。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161904102.png?imageMogr2/format/webp" alt=""></p>
<p>当然，今年也杂七杂八的学了一些技术，大部分情况还是为了解决需求而使用，而对于 Next.js 这块，今年还出了 13 版本，当时我还出了介绍视频，要学习的东西还是挺多的，咱们明年视频继续保持更新。</p>
<h2 id="生活方面" tabindex="-1">生活方面 <a class="header-anchor" href="#生活方面" aria-label="Permalink to &quot;生活方面&quot;">&ZeroWidthSpace;</a></h2>
<p>2 月 11 日，家里面又新添加了一位毛孩子，与时间对应，所以就取名叫做十一了。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161903834.png?imageMogr2/format/webp" alt=""></p>
<p>另外一只是母美短猫，又是去年立秋加入，所以我们取名叫做秋咪，平常我写代码的时候，她就喜欢待在我旁边的沙发处睡觉。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161903356.png?imageMogr2/format/webp" alt=""></p>
<p>这也是工作之后发现的，许多家庭里面都会养一些猫猫狗狗，经过一天的工作之后，下班回来撸一撸他们，对我来说也是一种解压的方式，尤其是看着他们干饭的样子，给他们罐头吃，他们就会开心的打起呼噜来，他们也给我们的生活增添了许多乐趣。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161903270.png?imageMogr2/format/webp" alt=""></p>
<p>其它方面我就不一一介绍了，大部分阶段性所见所想在往期推文中也可以看到，就不重复了。</p>
<h2 id="关于副业的话题" tabindex="-1">关于副业的话题 <a class="header-anchor" href="#关于副业的话题" aria-label="Permalink to &quot;关于副业的话题&quot;">&ZeroWidthSpace;</a></h2>
<p>今年对于副业这一块我也进行了尝试，用简单几句话总结一下就是：过度在意反而会让人更加焦虑，而热爱可抵岁月漫长。</p>
<p>和我同届的毕业生也有许多写公众号的，当初咱们一开始都会写，但你会发现做着做着就会有人不做了，我对这块也思考了一下，其实大多数时候会与你的时间付出不成一个正向的比例的，就像咱们做 b 站一样，也许很长时间数据量都是很惨淡的，也许你需要至少 6 个月的时间才会看到数据的增长，或许更长，1 年，2 年等等，因此前期的投入会比较多，如果过度的在意这些数据的话，确实很容易让自己焦虑起来。</p>
<p>今年上半年我其实就是这样的，如果我真正把这件事情当做副业来看的话，我可能真的就做不下去，好像我做的还是工作，我在工作中做了一遍的东西我可能还要再做一遍。</p>
<p>因此，对于上半年我可能一直都处于焦虑与迷茫当中，而选择躲在自己的舒适区，在此期间读了几本对我影响还是比较大的书籍，如果要我推荐两本的话，我会推荐《认知觉醒》和《人间值得》。</p>
<p>也算是心理这一类的书籍了，对于我心态上的转变还是比较大的，在与作者进行心灵上的交流之后，我算是醒悟了。因此大家可以看到我的 B 站账号下半年渐渐开始更新了，粉丝数目还越来越多了。</p>
<p>我们再回到副业这个话题，现在我想明白了，因为我算是知识类的博主，我更应该去把<strong>免费</strong>这一块的东西给做好，至于它能给我带来多少反馈其实不是很重要了，我做的视频内容方向其实就是我平常所学的东西，当我分享出来之后，对我自己而言其实也是有很大收获的，讲出来和自己看一遍还是有蛮大差距的。</p>
<p>当然，这一块无论说多少意义也不大，咱们 23 年一起来见证好吧。</p>
<h2 id="做一件事情" tabindex="-1">做一件事情 <a class="header-anchor" href="#做一件事情" aria-label="Permalink to &quot;做一件事情&quot;">&ZeroWidthSpace;</a></h2>
<p>说完了这个副业的话题，我还是想和大家分享下对于做 UP 主这一年，到底能有多少收入呢，从最开始我只是一个搬运工，这前期都是转载，所以也不算是自己做，收益为 0 。</p>
<p>今年才陆陆续续的更新，这一段时间来呢，我大概看了下后台，有 420 元左右，主要还是 B 站这个平台的创作激励以及个人连续打卡的奖励，单个视频一般 1 块钱的收益都不到，毕竟播放量和点赞数不是很多，视频推广一般。</p>
<p>正好到年底了嘛，又很感谢 B 站这个平台，因此我将今年的全部收益进行公益捐赠，给到流浪小动物吧。</p>
<details class="details custom-block"><summary>截图</summary>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161904042.png?imageMogr2/format/webp" alt=""></p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161904293.png?imageMogr2/format/webp" alt=""></p>
</details>
<p>明年这个时间段的年终总结视频我依旧还是会捐出全部的收益，虽然这一块的收益不是很多，但至少也能捐献一袋猫粮了吧。</p>
<p>多余的话就不说了，一件小事，咱们接着下一个内容。</p>
<h2 id="一年之约" tabindex="-1">一年之约 <a class="header-anchor" href="#一年之约" aria-label="Permalink to &quot;一年之约&quot;">&ZeroWidthSpace;</a></h2>
<p>在副业这个话题下，我提到了我个人作为知识类的博主，我更应该去把<strong>免费</strong>这一块的东西给做好。而在今年的 7 月份我开通了我的知识星球，不过这个是属于知识付费类的产品，作为用户来说没有好的口碑也不会加入，因此在这里定下一年之约。</p>
<p>因为星球每个季度会有 <strong>100</strong> 个免费体验名额（这与我的网名「一百个Chocolate」又有点相关了），有效期为 1 年，因此在今年年底我决定发放给我的粉丝们，一年之内所有内容如果觉得内容不好、做的不好，随时也可以退，反正是白嫖很香。</p>
<p>明年我的打算是会开启模拟面试环节，对所有粉丝都有一次免费面试环节，不过前提是要配合我拍摄视频，当然我会对内容进行脱敏，这点放心，具体情况咱们 b 站视频列表见！</p>
<p>这次我也就不放图片在这了，如果大家想要<strong>免费加入</strong>，可以在<strong>公众号后台添加我为好友</strong>，我会邀请你来加入。</p>
<blockquote>
<p>但如果只是划划水那就还是算了，因为名额有限，下一次免费名额也许还要等很久，所以将免费的名额让给更需要的小伙伴会比较好。</p>
</blockquote>
<p>许多加我的小伙伴问我有没有粉丝群，有的还会问没有粉丝群我怕你就忘了我了，这倒不会，我个人认为我的记忆力还算不错的，所以忘事的情况还比较少。</p>
<p>其实之前有微信群也有 qq 群，但管理不方便，消息也是一刷而过。在这个星球里，对于每个问题都会认真仔细回答，还会拓展。</p>
<p>星球内已经写好了相关介绍与内容，其他的在这里就不罗列出来了，目标就是<strong>做前端界最活跃的星球！</strong></p>
<p>其次，很感谢从 7 月份我建立星球就选择付费的小伙伴，个个都是我的铁粉，这也许就是做一个编程类博主的快乐，因此对于今年已经加入过的小伙伴，明年可以免费再续一年，咱们都是一年之约。</p>
<p>希望 2023 年在星球内和大家一起成长，用时间来证明。</p>
<h2 id="未来的方向" tabindex="-1">未来的方向 <a class="header-anchor" href="#未来的方向" aria-label="Permalink to &quot;未来的方向&quot;">&ZeroWidthSpace;</a></h2>
<p>最后，和大家唠嗑下未来的方向，在有一期视频当中，我就提到自己未来一定要做一款属于自己的产品，当然，这个产品从想法到完成开发肯定不是我一个人就能完成的，一群人才能走的更远。</p>
<p>做自媒体这块的另外一个好处就是能够认识一些优秀的人，也许就在明年，我会结交一些志同道合的朋友们，然后大家一起可以做点东西，这个时间也许很快，也许需要长时间的积累，但我会向这条路前进。</p>
<p>到这里不妨就给个<strong>关注</strong>吧，到时候各位粉丝们还能优先体验我的产品。</p>
<p>至于为什么呢？来和大家聊一聊。</p>
<p>今年下半年看到了苗然这位 UP 主的离职视频，末尾的内容我也是比较有感触的，就是当我们工作之后，你会发现身边许多人不会再谈及梦想这个词了，有一次吃饭了问了玩得好的同事，就说到买房买车啊，然后就没有后续了。</p>
<p>这又让我想到戴建业老师对于人活了几十年，发现自己是 NPC 这件事的讨论了，工作之后真发现大多数人就是按照一个特定的方向去做，毕业找工作，存钱买房子。</p>
<p>这里我想说明一下，并不是想说这条道路不好怎样，而是我在接受自己普通的情况下，我也想在自己年轻的这个阶段做一点自己热爱的事情，朝着自己梦想出发，至少现在我的眼里还是有光的对吧哈哈。</p>
<p>最后，很感谢你能看到这里听我唠嗑了这么久，疫情也快过去了，不过现阶段还是多多注意防护，2023 年我相信又会是更加美好的一年，预祝大家新年快乐，加油~</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/aigc/</link>
            <guid>https://mobius.cool/aigc/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>aigc</p>
]]></description>
            <content:encoded><![CDATA[<p>aigc</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/aigc/it/coding.html</link>
            <guid>https://mobius.cool/aigc/it/coding.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//Arrays.fill(dp,0);</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[][]A</span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">},</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">7</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">},</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">7</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">9</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #E1E4E8">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> a </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> b </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] tmp </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{a, b};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//        public static &lt;T&gt; T[] copyOfRange(T[] original,</span></span>
<span class="line"><span style="color: #6A737D">//        int from,</span></span>
<span class="line"><span style="color: #6A737D">//        int to)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.arraycopy(T[] source, int sourcePos,T[] dest_arr, int destPos, int len)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.out.println(Arrays.toString(arr));</span></span>
<span class="line"><span style="color: #6A737D">//这里要注意：不能直接 arr.toString()</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> length </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> arr.length;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] y</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intA</span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">}};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intC</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">][</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][]intB</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">][];</span></span>
<span class="line"><span style="color: #E1E4E8">intB[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">];  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #E1E4E8">intB[</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">]</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">};  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #E1E4E8">intB[</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">]</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">];  </span><span style="color: #6A737D">//2</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(intB[</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">]);</span><span style="color: #6A737D">//[I@156643d4</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(intB[</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">][</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">]);</span><span style="color: #6A737D">//2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//二维数组</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [] intD[] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">}};</span></span>
<span class="line"><span style="color: #6A737D">//(1)普通for循环</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;i</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">intD.length;i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){ </span><span style="color: #6A737D">//0,1,2</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> j</span><span style="color: #F97583">=</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;j</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">intD[i].length;j</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){ </span><span style="color: #6A737D">//每一个一维数组的长度</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(intD[i][j]</span><span style="color: #F97583">+</span><span style="color: #9ECBFF">&quot;</span><span style="color: #79B8FF">\t</span><span style="color: #9ECBFF">&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">//(2)加强for循环</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;</span><span style="color: #79B8FF">\n</span><span style="color: #9ECBFF">=========================&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr1</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">intA){  </span><span style="color: #6A737D">//int[]二维数组中元素的类型, arr迭代变量, intA二维组的名称</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">arr1){ </span><span style="color: #6A737D">//int，一维数组中元素的类型，i,迭代变量,arr，一维数组的名称</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(i</span><span style="color: #F97583">+</span><span style="color: #9ECBFF">&quot;</span><span style="color: #79B8FF">\t</span><span style="color: #9ECBFF">&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//Arrays.fill(dp,0);</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[][]A</span><span style="color: #D73A49">=</span><span style="color: #24292E">{</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">},</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">7</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">8</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">},</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">7</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">8</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">9</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #24292E">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{a, b};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//        public static &lt;T&gt; T[] copyOfRange(T[] original,</span></span>
<span class="line"><span style="color: #6A737D">//        int from,</span></span>
<span class="line"><span style="color: #6A737D">//        int to)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.arraycopy(T[] source, int sourcePos,T[] dest_arr, int destPos, int len)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.out.println(Arrays.toString(arr));</span></span>
<span class="line"><span style="color: #6A737D">//这里要注意：不能直接 arr.toString()</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">6</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> length </span><span style="color: #D73A49">=</span><span style="color: #24292E"> arr.length;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] y</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intA</span><span style="color: #D73A49">=</span><span style="color: #24292E">{{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},{</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">},{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">}};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intC</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">][</span><span style="color: #005CC5">5</span><span style="color: #24292E">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][]intB</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">][];</span></span>
<span class="line"><span style="color: #24292E">intB[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">];  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #24292E">intB[</span><span style="color: #005CC5">1</span><span style="color: #24292E">]</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">};  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #24292E">intB[</span><span style="color: #005CC5">2</span><span style="color: #24292E">]</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">2</span><span style="color: #24292E">];  </span><span style="color: #6A737D">//2</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(intB[</span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span><span style="color: #6A737D">//[I@156643d4</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(intB[</span><span style="color: #005CC5">1</span><span style="color: #24292E">][</span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span><span style="color: #6A737D">//2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//二维数组</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [] intD[] </span><span style="color: #D73A49">=</span><span style="color: #24292E">{{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},{</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">},{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">}};</span></span>
<span class="line"><span style="color: #6A737D">//(1)普通for循环</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #005CC5">0</span><span style="color: #24292E">;i</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">intD.length;i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){ </span><span style="color: #6A737D">//0,1,2</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j</span><span style="color: #D73A49">=</span><span style="color: #005CC5">0</span><span style="color: #24292E">;j</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">intD[i].length;j</span><span style="color: #D73A49">++</span><span style="color: #24292E">){ </span><span style="color: #6A737D">//每一个一维数组的长度</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(intD[i][j]</span><span style="color: #D73A49">+</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">\t</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">//(2)加强for循环</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">=========================&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr1</span><span style="color: #D73A49">:</span><span style="color: #24292E">intA){  </span><span style="color: #6A737D">//int[]二维数组中元素的类型, arr迭代变量, intA二维组的名称</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">:</span><span style="color: #24292E">arr1){ </span><span style="color: #6A737D">//int，一维数组中元素的类型，i,迭代变量,arr，一维数组的名称</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(i</span><span style="color: #D73A49">+</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">\t</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h4 id="数组转换" tabindex="-1">数组转换 <a class="header-anchor" href="#数组转换" aria-label="Permalink to &quot;数组转换&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] array </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] {</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]&gt; intArray </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(array);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">intArray) {</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(arr));</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">// 二维数组</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> length </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> arr.length;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] y</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intA</span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">}};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intC</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">][</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Integer.MAX_VALUE);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Integer.MIN_VALUE);</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] a </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; list1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">boxed</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">collect</span><span style="color: #E1E4E8">(Collectors.</span><span style="color: #B392F0">toList</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(a);</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 Integer[]</span></span>
<span class="line"><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[] integers1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">boxed</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[]</span><span style="color: #F97583">::new</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(integers1));</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 Integer[]</span></span>
<span class="line"><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[] integers2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> list1.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #6A737D">//  调用toArray。传入参数T[] a。这种用法是目前推荐的。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt;转String[]也同理。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 int[]</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> list1.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">mapToInt</span><span style="color: #E1E4E8">(Integer</span><span style="color: #F97583">::</span><span style="color: #E1E4E8">valueOf).</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #6A737D">// 想要转换成int[]类型，就得先转成IntStream。</span></span>
<span class="line"><span style="color: #6A737D">// 这里就通过mapToInt()把Stream&lt;Integer&gt;调用Integer::valueOf来转成IntStream</span></span>
<span class="line"><span style="color: #6A737D">// 而IntStream中默认toArray()转成int[]。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 int[]</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(integers1).</span><span style="color: #B392F0">mapToInt</span><span style="color: #E1E4E8">(Integer</span><span style="color: #F97583">::</span><span style="color: #E1E4E8">valueOf).</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #6A737D">// 思路同上。先将Integer[]转成Stream&lt;Integer&gt;，再转成IntStream。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; list2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(integers1);</span></span>
<span class="line"><span style="color: #6A737D">// 最简单的方式。String[]转List&lt;String&gt;也同理。</span></span>
<span class="line"><span style="color: #6A737D">// 同理</span></span>
<span class="line"><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] strings1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> {</span><span style="color: #9ECBFF">&quot;a&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;b&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;c&quot;</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #6A737D">// String[] 转 List&lt;String&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; list3 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(strings1);</span></span>
<span class="line"><span style="color: #9ECBFF">&quot;注意这里list3里面的元素直接是strings1里面的元素( list backed by the specified array)，换句话就是说：对strings1的修改，直接影响list3。&quot;</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt; 转 String[]</span></span>
<span class="line"><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] strings2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> list3.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #9ECBFF">&quot;注意这里的strings2里面的元素不是list3里面的元素，换句话就是说：对list3中关于元素的修改，不会影响strings2。&quot;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] array </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[] {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">[]&gt; intArray </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(array);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">:</span><span style="color: #24292E">intArray) {</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(arr));</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">// 二维数组</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">6</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> length </span><span style="color: #D73A49">=</span><span style="color: #24292E"> arr.length;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] y</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intA</span><span style="color: #D73A49">=</span><span style="color: #24292E">{{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},{</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">},{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">}};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intC</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">][</span><span style="color: #005CC5">5</span><span style="color: #24292E">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Integer.MAX_VALUE);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Integer.MIN_VALUE);</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">8</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; list1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">boxed</span><span style="color: #24292E">().</span><span style="color: #6F42C1">collect</span><span style="color: #24292E">(Collectors.</span><span style="color: #6F42C1">toList</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a);</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 Integer[]</span></span>
<span class="line"><span style="color: #D73A49">Integer</span><span style="color: #24292E">[] integers1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">boxed</span><span style="color: #24292E">().</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">[]</span><span style="color: #D73A49">::new</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(integers1));</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 Integer[]</span></span>
<span class="line"><span style="color: #D73A49">Integer</span><span style="color: #24292E">[] integers2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> list1.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">Integer</span><span style="color: #24292E">[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #6A737D">//  调用toArray。传入参数T[] a。这种用法是目前推荐的。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt;转String[]也同理。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 int[]</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> list1.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">().</span><span style="color: #6F42C1">mapToInt</span><span style="color: #24292E">(Integer</span><span style="color: #D73A49">::</span><span style="color: #24292E">valueOf).</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #6A737D">// 想要转换成int[]类型，就得先转成IntStream。</span></span>
<span class="line"><span style="color: #6A737D">// 这里就通过mapToInt()把Stream&lt;Integer&gt;调用Integer::valueOf来转成IntStream</span></span>
<span class="line"><span style="color: #6A737D">// 而IntStream中默认toArray()转成int[]。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 int[]</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(integers1).</span><span style="color: #6F42C1">mapToInt</span><span style="color: #24292E">(Integer</span><span style="color: #D73A49">::</span><span style="color: #24292E">valueOf).</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #6A737D">// 思路同上。先将Integer[]转成Stream&lt;Integer&gt;，再转成IntStream。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; list2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(integers1);</span></span>
<span class="line"><span style="color: #6A737D">// 最简单的方式。String[]转List&lt;String&gt;也同理。</span></span>
<span class="line"><span style="color: #6A737D">// 同理</span></span>
<span class="line"><span style="color: #D73A49">String</span><span style="color: #24292E">[] strings1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #032F62">&quot;a&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;b&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;c&quot;</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #6A737D">// String[] 转 List&lt;String&gt;</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; list3 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(strings1);</span></span>
<span class="line"><span style="color: #032F62">&quot;注意这里list3里面的元素直接是strings1里面的元素( list backed by the specified array)，换句话就是说：对strings1的修改，直接影响list3。&quot;</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt; 转 String[]</span></span>
<span class="line"><span style="color: #D73A49">String</span><span style="color: #24292E">[] strings2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> list3.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #032F62">&quot;注意这里的strings2里面的元素不是list3里面的元素，换句话就是说：对list3中关于元素的修改，不会影响strings2。&quot;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="集合转换" tabindex="-1">集合转换 <a class="header-anchor" href="#集合转换" aria-label="Permalink to &quot;集合转换&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//因为List和Set都实现了Collection接口，且addAll(Collection&lt;? extends E&gt; c);方法，因此可以采用addAll()方法将List和Set互相转换；另外，List和Set也提供了Collection&lt;? extends E&gt; c作为参数的构造函数，因此通常采用构造函数的形式完成互相转化。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//List转Set,list转set，可用于元素去重的场景</span></span>
<span class="line"><span style="color: #E1E4E8">Set&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; set </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> HashSet&lt;&gt;(list);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;set: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> set);</span></span>
<span class="line"><span style="color: #6A737D">//Set转List</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; list_1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;(set);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;list_1: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> list_1);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//从上可完成Array和Set的互转</span></span>
<span class="line"><span style="color: #6A737D">//array转set</span></span>
<span class="line"><span style="color: #E1E4E8">s </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[]{</span><span style="color: #9ECBFF">&quot;A&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;B&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;C&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;D&quot;</span><span style="color: #E1E4E8">,</span><span style="color: #9ECBFF">&quot;E&quot;</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">set </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> HashSet&lt;&gt;(Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(s));</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;set: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> set);</span></span>
<span class="line"><span style="color: #6A737D">//set转array</span></span>
<span class="line"><span style="color: #E1E4E8">dest </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> set.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;dest: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">toStsecring</span><span style="color: #E1E4E8">(dest));</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//因为List和Set都实现了Collection接口，且addAll(Collection&lt;? extends E&gt; c);方法，因此可以采用addAll()方法将List和Set互相转换；另外，List和Set也提供了Collection&lt;? extends E&gt; c作为参数的构造函数，因此通常采用构造函数的形式完成互相转化。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//List转Set,list转set，可用于元素去重的场景</span></span>
<span class="line"><span style="color: #24292E">Set&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; set </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> HashSet&lt;&gt;(list);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;set: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> set);</span></span>
<span class="line"><span style="color: #6A737D">//Set转List</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; list_1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;(set);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;list_1: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> list_1);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//从上可完成Array和Set的互转</span></span>
<span class="line"><span style="color: #6A737D">//array转set</span></span>
<span class="line"><span style="color: #24292E">s </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[]{</span><span style="color: #032F62">&quot;A&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;B&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;C&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;D&quot;</span><span style="color: #24292E">,</span><span style="color: #032F62">&quot;E&quot;</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">set </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> HashSet&lt;&gt;(Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(s));</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;set: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> set);</span></span>
<span class="line"><span style="color: #6A737D">//set转array</span></span>
<span class="line"><span style="color: #24292E">dest </span><span style="color: #D73A49">=</span><span style="color: #24292E"> set.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;dest: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">toStsecring</span><span style="color: #24292E">(dest));</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="求最值" tabindex="-1">求最值 <a class="header-anchor" href="#求最值" aria-label="Permalink to &quot;求最值&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">import</span><span style="color: #E1E4E8"> java.util.Arrays;</span></span>
<span class="line"><span style="color: #F97583">import</span><span style="color: #E1E4E8"> java.util.Collections;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">MAX</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr) {</span></span>
<span class="line"><span style="color: #E1E4E8">    Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(arr);</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> arr[arr.length</span><span style="color: #F97583">-</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">main</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] args) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[] numbers </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> { </span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">7</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">9</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> min </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">) </span></span>
<span class="line"><span style="color: #E1E4E8">    Collections.</span><span style="color: #B392F0">min</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(numbers));</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> max </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">) </span></span>
<span class="line"><span style="color: #E1E4E8">    Collections.</span><span style="color: #B392F0">max</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(numbers));</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;最小值: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> min);</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;最大值: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> max);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> a[] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> {</span><span style="color: #79B8FF">10</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> min </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">min</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">getAsInt</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(min);</span></span>
<span class="line"><span style="color: #E1E4E8">    min </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span></span>
<span class="line"><span style="color: #E1E4E8">  Collections.</span><span style="color: #B392F0">min</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">boxed</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">collect</span><span style="color: #E1E4E8">(Collectors.</span><span style="color: #B392F0">toList</span><span style="color: #E1E4E8">()));</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(min);</span></span>
<span class="line"><span style="color: #E1E4E8">    Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(a);</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(a[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">MAX</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">Stream</span><span style="color: #E1E4E8">(arr).</span><span style="color: #B392F0">max</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">getAsInt</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> java.util.Arrays;</span></span>
<span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> java.util.Collections;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">MAX</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr) {</span></span>
<span class="line"><span style="color: #24292E">    Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(arr);</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> arr[arr.length</span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">(</span><span style="color: #D73A49">String</span><span style="color: #24292E">[] args) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">Integer</span><span style="color: #24292E">[] numbers </span><span style="color: #D73A49">=</span><span style="color: #24292E"> { </span><span style="color: #005CC5">8</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">7</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">4</span><span style="color: #24292E">, </span><span style="color: #005CC5">9</span><span style="color: #24292E">, </span><span style="color: #005CC5">5</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> min </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">) </span></span>
<span class="line"><span style="color: #24292E">    Collections.</span><span style="color: #6F42C1">min</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(numbers));</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">) </span></span>
<span class="line"><span style="color: #24292E">    Collections.</span><span style="color: #6F42C1">max</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(numbers));</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;最小值: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> min);</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;最大值: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> max);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">10</span><span style="color: #24292E">, </span><span style="color: #005CC5">5</span><span style="color: #24292E">, </span><span style="color: #005CC5">8</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> min </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">min</span><span style="color: #24292E">().</span><span style="color: #6F42C1">getAsInt</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(min);</span></span>
<span class="line"><span style="color: #24292E">    min </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span></span>
<span class="line"><span style="color: #24292E">  Collections.</span><span style="color: #6F42C1">min</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">boxed</span><span style="color: #24292E">().</span><span style="color: #6F42C1">collect</span><span style="color: #24292E">(Collectors.</span><span style="color: #6F42C1">toList</span><span style="color: #24292E">()));</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(min);</span></span>
<span class="line"><span style="color: #24292E">    Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a);</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(a[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">MAX</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">Stream</span><span style="color: #24292E">(arr).</span><span style="color: #6F42C1">max</span><span style="color: #24292E">().</span><span style="color: #6F42C1">getAsInt</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">String s</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;asdefgasdefg&quot;</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;i</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">();i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">char</span><span style="color: #E1E4E8"> c </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">charAt</span><span style="color: #E1E4E8">(i);</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">//返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">indexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">//返回从 fromIndex 位置开始查找指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">indexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">lastIndexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">lastIndexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] ss </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">split</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;regex&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">//String s = s.substring(int start,int end);</span></span>
<span class="line"><span style="color: #F97583">char</span><span style="color: #E1E4E8">[] cs </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">toCharArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">String s1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">toLowerCase</span><span style="color: #E1E4E8">();</span><span style="color: #6A737D">//将字符串转换为小写</span></span>
<span class="line"><span style="color: #E1E4E8">String s2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">toUpperCase</span><span style="color: #E1E4E8">();</span><span style="color: #6A737D">//将字符串转换为大写</span></span>
<span class="line"><span style="color: #E1E4E8">String s3 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">trim</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #6A737D">//String s4 = String.valueOf(object);</span></span>
<span class="line"><span style="color: #E1E4E8">String str</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;address&quot;</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">String newstr </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> str.</span><span style="color: #B392F0">replace</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;a&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;A&quot;</span><span style="color: #E1E4E8">);</span><span style="color: #6A737D">// newstr 的值为 Address</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//数组排序</span></span>
<span class="line"><span style="color: #6A737D">//Arrays.sort();//n*log(n);//重载了四个方法</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a); 默认是升序排序</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex);//按升序排列数组的指定范围。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组的指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #E1E4E8">如果降序排列的话，对于Int[] a, 需要先转行成Integer[] b</span></span>
<span class="line"><span style="color: #E1E4E8">Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(b,Collections.</span><span style="color: #B392F0">reverseOrder</span><span style="color: #E1E4E8">());</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">String s</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;asdefgasdefg&quot;</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #005CC5">0</span><span style="color: #24292E">;i</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">s.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">();i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">char</span><span style="color: #24292E"> c </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">charAt</span><span style="color: #24292E">(i);</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">//返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">indexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">//返回从 fromIndex 位置开始查找指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">indexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">lastIndexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">lastIndexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #D73A49">String</span><span style="color: #24292E">[] ss </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">split</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;regex&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">//String s = s.substring(int start,int end);</span></span>
<span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E">[] cs </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">toCharArray</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">String s1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">toLowerCase</span><span style="color: #24292E">();</span><span style="color: #6A737D">//将字符串转换为小写</span></span>
<span class="line"><span style="color: #24292E">String s2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">toUpperCase</span><span style="color: #24292E">();</span><span style="color: #6A737D">//将字符串转换为大写</span></span>
<span class="line"><span style="color: #24292E">String s3 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">trim</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #6A737D">//String s4 = String.valueOf(object);</span></span>
<span class="line"><span style="color: #24292E">String str</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;address&quot;</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">String newstr </span><span style="color: #D73A49">=</span><span style="color: #24292E"> str.</span><span style="color: #6F42C1">replace</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;a&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;A&quot;</span><span style="color: #24292E">);</span><span style="color: #6A737D">// newstr 的值为 Address</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//数组排序</span></span>
<span class="line"><span style="color: #6A737D">//Arrays.sort();//n*log(n);//重载了四个方法</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a); 默认是升序排序</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex);//按升序排列数组的指定范围。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组的指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #24292E">如果降序排列的话，对于Int[] a, 需要先转行成Integer[] b</span></span>
<span class="line"><span style="color: #24292E">Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(b,Collections.</span><span style="color: #6F42C1">reverseOrder</span><span style="color: #24292E">());</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="集合" tabindex="-1">集合 <a class="header-anchor" href="#集合" aria-label="Permalink to &quot;集合&quot;">&ZeroWidthSpace;</a></h2>
<p>集合框架</p>
<h3 id="collection" tabindex="-1">Collection <a class="header-anchor" href="#collection" aria-label="Permalink to &quot;Collection&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> add</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> addAll</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> clear</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> contains</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> remove</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> size</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> toArray</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> Collection.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(Collection c);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> Collection.</span><span style="color: #B392F0">reverse</span><span style="color: #E1E4E8">(Collection c);</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> add</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> addAll</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> clear</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> contains</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> remove</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> size</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> toArray</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> Collection.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(Collection c);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> Collection.</span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(Collection c);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="list" tabindex="-1">list <a class="header-anchor" href="#list" aria-label="Permalink to &quot;list&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> List&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; list </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">get</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> index);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">remove</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> index);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">indexOf</span><span style="color: #E1E4E8">(Object o);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">subList</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> start,</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> end);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[list.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">()])；</span><span style="color: #6A737D">//集合转数组</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Stack&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; s </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">pop,peek,push</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Queue&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; q </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Queue&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">q.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(Object o);</span></span>
<span class="line"><span style="color: #E1E4E8">q.peek;</span></span>
<span class="line"><span style="color: #E1E4E8">q.poll;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> List&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; list </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">get</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> index);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">remove</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> index);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">indexOf</span><span style="color: #24292E">(Object o);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">subList</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> start,</span><span style="color: #D73A49">int</span><span style="color: #24292E"> end);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[list.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">()])；</span><span style="color: #6A737D">//集合转数组</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Stack&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; s </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">pop,peek,push</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Queue&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; q </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Queue&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">q.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(Object o);</span></span>
<span class="line"><span style="color: #24292E">q.peek;</span></span>
<span class="line"><span style="color: #24292E">q.poll;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Deque&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; queue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;c&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;x&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Deque&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; stack </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;c&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;xu&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(stack.</span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(stack.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(stack.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 ArrayList :</span></span>
<span class="line"><span style="color: #6A737D">// 频繁访问列表中的某一个元素。</span></span>
<span class="line"><span style="color: #6A737D">// 只需要在列表末尾进行添加和删除元素操作.</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 LinkedList :</span></span>
<span class="line"><span style="color: #6A737D">// 你需要通过循环迭代来访问列表中的某些元素。</span></span>
<span class="line"><span style="color: #6A737D">// 需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 对于双端队列来说，可以使用</span></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">T</span><span style="color: #E1E4E8">&gt; deque </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addFirst() 在头部添加元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">addFirst</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Wiki&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Wiki, Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addLast() 在尾部添加元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">addLast</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Wiki&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao, Wiki]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeFirst() 移除头部元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">removeFirst</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Runoob, Taobao, Weibo]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeLast() 移除尾部元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">removeLast</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getFirst() 获取头部元素</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites.</span><span style="color: #B392F0">getFirst</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #6A737D">//Google</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getLast() 获取尾部元素</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites.</span><span style="color: #B392F0">getLast</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 还可以遍历</span></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> size </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sites.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">(), i </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">; i </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> size; i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites.</span><span style="color: #B392F0">get</span><span style="color: #E1E4E8">(i));</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">// Google</span></span>
<span class="line"><span style="color: #6A737D">// Runoob</span></span>
<span class="line"><span style="color: #6A737D">// Taobao</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Deque&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; queue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;c&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">peek</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;x&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">poll</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">poll</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Deque&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; stack </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;c&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;xu&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(stack.</span><span style="color: #6F42C1">peek</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">stack.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(stack.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(stack.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 ArrayList :</span></span>
<span class="line"><span style="color: #6A737D">// 频繁访问列表中的某一个元素。</span></span>
<span class="line"><span style="color: #6A737D">// 只需要在列表末尾进行添加和删除元素操作.</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 LinkedList :</span></span>
<span class="line"><span style="color: #6A737D">// 你需要通过循环迭代来访问列表中的某些元素。</span></span>
<span class="line"><span style="color: #6A737D">// 需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 对于双端队列来说，可以使用</span></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">T</span><span style="color: #24292E">&gt; deque </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addFirst() 在头部添加元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">addFirst</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Wiki&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Wiki, Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addLast() 在尾部添加元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">addLast</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Wiki&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao, Wiki]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeFirst() 移除头部元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">removeFirst</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Runoob, Taobao, Weibo]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeLast() 移除尾部元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">removeLast</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getFirst() 获取头部元素</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites.</span><span style="color: #6F42C1">getFirst</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #6A737D">//Google</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getLast() 获取尾部元素</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites.</span><span style="color: #6F42C1">getLast</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 还可以遍历</span></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> size </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sites.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(), i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> size; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites.</span><span style="color: #6F42C1">get</span><span style="color: #24292E">(i));</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">// Google</span></span>
<span class="line"><span style="color: #6A737D">// Runoob</span></span>
<span class="line"><span style="color: #6A737D">// Taobao</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br></div></div><hr>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Deque&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; dq </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">当栈用</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">(),</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(), </span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">当队列用</span><span style="color: #F97583">:</span></span>
<span class="line"><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">从头部插入：</span></span>
<span class="line"><span style="color: #B392F0">addFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的前面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #B392F0">offerFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//空间不足插入失败返回回false</span></span>
<span class="line"><span style="color: #B392F0">push</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//空间不足抛异常</span></span>
<span class="line"><span style="color: #E1E4E8">从尾部插入</span></span>
<span class="line"><span style="color: #B392F0">add</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的后面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//空间不足返回false</span></span>
<span class="line"><span style="color: #B392F0">addLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同add()</span></span>
<span class="line"><span style="color: #B392F0">offerLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同offer()</span></span>
<span class="line"><span style="color: #E1E4E8">从头部删除：</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">removeFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除第一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">remove</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除第一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">pollFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同poll</span></span>
<span class="line"><span style="color: #6A737D">//从尾部删除</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">removeLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除最后一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">pollLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除最后一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #6A737D">//检索但不删除</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">getFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空就抛异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">getLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索不删除最后一个元素,为空就抛异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">() </span><span style="color: #B392F0">peekFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空返回null</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">peekLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索但不删除最后一个元素，为空返回null</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Deque&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; dq </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">当栈用</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">pop</span><span style="color: #24292E">(),</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(), </span><span style="color: #6F42C1">peek</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">当队列用</span><span style="color: #D73A49">:</span></span>
<span class="line"><span style="color: #6F42C1">offer</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">poll</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">peek</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">从头部插入：</span></span>
<span class="line"><span style="color: #6F42C1">addFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的前面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #6F42C1">offerFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//空间不足插入失败返回回false</span></span>
<span class="line"><span style="color: #6F42C1">push</span><span style="color: #24292E">()</span><span style="color: #6A737D">//空间不足抛异常</span></span>
<span class="line"><span style="color: #24292E">从尾部插入</span></span>
<span class="line"><span style="color: #6F42C1">add</span><span style="color: #24292E">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的后面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #6F42C1">offer</span><span style="color: #24292E">()</span><span style="color: #6A737D">//空间不足返回false</span></span>
<span class="line"><span style="color: #6F42C1">addLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同add()</span></span>
<span class="line"><span style="color: #6F42C1">offerLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同offer()</span></span>
<span class="line"><span style="color: #24292E">从头部删除：</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">removeFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除第一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">remove</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">pop</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">poll</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除第一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">pollFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同poll</span></span>
<span class="line"><span style="color: #6A737D">//从尾部删除</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">removeLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除最后一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">pollLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除最后一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #6A737D">//检索但不删除</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">getFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空就抛异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">getLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索不删除最后一个元素,为空就抛异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">peek</span><span style="color: #24292E">() </span><span style="color: #6F42C1">peekFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空返回null</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">peekLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索但不删除最后一个元素，为空返回null</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><hr>
<p>迭代器</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Iterator</span><span style="color: #F97583">&lt;&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">iterator</span><span style="color: #E1E4E8">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">优先队列</span></span>
<span class="line"><span style="color: #E1E4E8">Queue&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; q </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> PriorityQueue&lt;&gt;();默认 小顶堆</span></span>
<span class="line"><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//不弹 返回队首元素</span></span>
<span class="line"><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//弹出 返回队首元素</span></span>
<span class="line"><span style="color: #B392F0">add</span><span style="color: #E1E4E8">() </span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">() </span><span style="color: #6A737D">//添加元素,前者(add)在插入失败时抛出异常，后者(offer)则会返回false。</span></span>
<span class="line"><span style="color: #B392F0">size</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//返回队列元素个数</span></span>
<span class="line"><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//判断队列是否为空，为空返回true,不空返回false</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">PriorityQueue&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; queue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> PriorityQueue&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt;(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"><span style="color: #E1E4E8">@</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(Integer </span><span style="color: #FFAB70">num1</span><span style="color: #E1E4E8">, Integer </span><span style="color: #FFAB70">num2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #F97583">return</span><span style="color: #E1E4E8"> num1 </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> num2;</span><span style="color: #6A737D">//升序 小顶堆</span></span>
<span class="line"><span style="color: #F97583">return</span><span style="color: #E1E4E8"> num2 </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> num1;</span><span style="color: #6A737D">//降序 大顶堆</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #E1E4E8">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">get</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">put</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">remove</span><span style="color: #E1E4E8">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">getOrDefault</span><span style="color: #E1E4E8">(Object key,V defaultValue);</span></span>
<span class="line"><span style="color: #B392F0">containsKey</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">containValue</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Iterator</span><span style="color: #D73A49">&lt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">iterator</span><span style="color: #24292E">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">优先队列</span></span>
<span class="line"><span style="color: #24292E">Queue&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; q </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> PriorityQueue&lt;&gt;();默认 小顶堆</span></span>
<span class="line"><span style="color: #6F42C1">peek</span><span style="color: #24292E">()</span><span style="color: #6A737D">//不弹 返回队首元素</span></span>
<span class="line"><span style="color: #6F42C1">poll</span><span style="color: #24292E">()</span><span style="color: #6A737D">//弹出 返回队首元素</span></span>
<span class="line"><span style="color: #6F42C1">add</span><span style="color: #24292E">() </span><span style="color: #6F42C1">offer</span><span style="color: #24292E">() </span><span style="color: #6A737D">//添加元素,前者(add)在插入失败时抛出异常，后者(offer)则会返回false。</span></span>
<span class="line"><span style="color: #6F42C1">size</span><span style="color: #24292E">()</span><span style="color: #6A737D">//返回队列元素个数</span></span>
<span class="line"><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()</span><span style="color: #6A737D">//判断队列是否为空，为空返回true,不空返回false</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">PriorityQueue&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; queue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> PriorityQueue&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt;(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"><span style="color: #24292E">@</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(Integer </span><span style="color: #E36209">num1</span><span style="color: #24292E">, Integer </span><span style="color: #E36209">num2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #D73A49">return</span><span style="color: #24292E"> num1 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> num2;</span><span style="color: #6A737D">//升序 小顶堆</span></span>
<span class="line"><span style="color: #D73A49">return</span><span style="color: #24292E"> num2 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> num1;</span><span style="color: #6A737D">//降序 大顶堆</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #24292E">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">get</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">put</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">remove</span><span style="color: #24292E">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">getOrDefault</span><span style="color: #24292E">(Object key,V defaultValue);</span></span>
<span class="line"><span style="color: #6F42C1">containsKey</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">containValue</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="常用算法技巧" tabindex="-1">常用算法技巧 <a class="header-anchor" href="#常用算法技巧" aria-label="Permalink to &quot;常用算法技巧&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="位运算技巧" tabindex="-1">位运算技巧 <a class="header-anchor" href="#位运算技巧" aria-label="Permalink to &quot;位运算技巧&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&amp;mid=2247486704&amp;idx=2&amp;sn=59b011722fe722551de8b56f234a4050&amp;chksm=9bd7f2f8aca07bee47852e7bce72325157897ad0a3d5f383d18bca5379d66716518c2b968ae9&amp;scene=178&amp;cur_album_id=1318896187793260544#rd" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&amp;mid=2247486704&amp;idx=2&amp;sn=59b011722fe722551de8b56f234a4050&amp;chksm=9bd7f2f8aca07bee47852e7bce72325157897ad0a3d5f383d18bca5379d66716518c2b968ae9&amp;scene=178&amp;cur_album_id=1318896187793260544#rd</a></p>
<ol>
<li>
<p>利用或操作 <code>|</code> 和空格将英文字符转换为小写：
('a' | ' ') = 'a'，
('A' | ' ') = 'a'</p>
</li>
<li>
<p>利用与操作 <code>&amp;</code> 和下划线将英文字符转换为大写：
('b' &amp; '<em>') = 'B'，
('B' &amp; '</em>') = 'B'</p>
</li>
<li>
<p>利用异或操作 <code>^</code> 和空格进行英文字符大小写互换：
('d' ^ ' ') = 'D'，
('D' ^ ' ') = 'd'</p>
</li>
<li>
<p>不用临时变量交换两个数：
int a = 1, b = 2;
a ^= b;
b ^= a;
a ^= b;
// 现在 a = 2, b = 1</p>
</li>
</ol>
<p>5.n&amp;(n-1) 这个操作是算法中常见的，作用是消除数字 n 的二进制表示中的最后一个 1。</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//判断一个数是不是2的指数,一个数如果是 2 的指数，那么它的二进制表示一定只含有一个 1：</span></span>
<span class="line"><span style="color: #E1E4E8">bool </span><span style="color: #B392F0">isPowerOfTwo</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> n) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (n </span><span style="color: #F97583">&lt;=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> (n </span><span style="color: #F97583">&amp;</span><span style="color: #E1E4E8"> (n </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">)) </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//判断一个数是不是2的指数,一个数如果是 2 的指数，那么它的二进制表示一定只含有一个 1：</span></span>
<span class="line"><span style="color: #24292E">bool </span><span style="color: #6F42C1">isPowerOfTwo</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> n) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>6.查找只出现一次的元素
异或运算的性质：一个数和它本身做异或运算结果为 0，即 a ^ a = 0；一个数和 0 做异或运算的结果为它本身，即 a ^ 0 = a
例题：</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">singleNumber</span><span style="color: #E1E4E8">(List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">Integer</span><span style="color: #F97583">&gt;&amp;</span><span style="color: #E1E4E8"> nums) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> res </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (Inter n </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> nums) {</span></span>
<span class="line"><span style="color: #E1E4E8">        res </span><span style="color: #F97583">^=</span><span style="color: #E1E4E8"> n;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> res;</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">singleNumber</span><span style="color: #24292E">(List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Integer</span><span style="color: #D73A49">&gt;&amp;</span><span style="color: #24292E"> nums) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (Inter n </span><span style="color: #D73A49">:</span><span style="color: #24292E"> nums) {</span></span>
<span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> n;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="比较器" tabindex="-1">比较器 <a class="header-anchor" href="#比较器" aria-label="Permalink to &quot;比较器&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Comparator&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; cmp </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"><span style="color: #E1E4E8">        @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(Object </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, Object </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #6A737D">//升序</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o1</span><span style="color: #F97583">-</span><span style="color: #E1E4E8">o2;</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #6A737D">//降序</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o2</span><span style="color: #F97583">-</span><span style="color: #E1E4E8">o1;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Collections.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(list, </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">Dog</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(Dog </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, Dog </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o2.age </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o1.age;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">});</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Comparator&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; cmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"><span style="color: #24292E">        @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(Object </span><span style="color: #E36209">o1</span><span style="color: #24292E">, Object </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #6A737D">//升序</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o1</span><span style="color: #D73A49">-</span><span style="color: #24292E">o2;</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #6A737D">//降序</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o2</span><span style="color: #D73A49">-</span><span style="color: #24292E">o1;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Collections.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(list, </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">Dog</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(Dog </span><span style="color: #E36209">o1</span><span style="color: #24292E">, Dog </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o2.age </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o1.age;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">});</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="list-1" tabindex="-1">List <a class="header-anchor" href="#list-1" aria-label="Permalink to &quot;List&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] array </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] {</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]&gt; intArray </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(array);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">intArray) {</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(arr));</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] array </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[] {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">[]&gt; intArray </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(array);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">:</span><span style="color: #24292E">intArray) {</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(arr));</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="map" tabindex="-1">Map <a class="header-anchor" href="#map" aria-label="Permalink to &quot;Map&quot;">&ZeroWidthSpace;</a></h2>
<p>java中如果两个hashMap的key和value都逐一相等，则map1.equals(map2) 为true.</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">HashMap&lt;</span><span style="color: #F97583">Character</span><span style="color: #E1E4E8">,</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; map</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//HashMap tranversal:</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (Map.Entry&lt;</span><span style="color: #F97583">Character</span><span style="color: #E1E4E8">, </span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; entry</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> map.</span><span style="color: #B392F0">entrySet</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">char</span><span style="color: #E1E4E8"> key </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> entry.</span><span style="color: #B392F0">getKey</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> val </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> entry.</span><span style="color: #B392F0">getValue</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(key </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> val);</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        Arrays.hashCode(arr);//get the hash of an arr(unique)</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">////use an array to represent hashmap:</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        int[] tmp = new int[26];</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        for (char ch: tmp.toCharArray()) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//            tmp[ch - &#39;a&#39;]++;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">HashMap&lt;</span><span style="color: #D73A49">Character</span><span style="color: #24292E">,</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; map</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//HashMap tranversal:</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (Map.Entry&lt;</span><span style="color: #D73A49">Character</span><span style="color: #24292E">, </span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; entry</span><span style="color: #D73A49">:</span><span style="color: #24292E"> map.</span><span style="color: #6F42C1">entrySet</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">char</span><span style="color: #24292E"> key </span><span style="color: #D73A49">=</span><span style="color: #24292E"> entry.</span><span style="color: #6F42C1">getKey</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> val </span><span style="color: #D73A49">=</span><span style="color: #24292E"> entry.</span><span style="color: #6F42C1">getValue</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(key </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> val);</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        Arrays.hashCode(arr);//get the hash of an arr(unique)</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">////use an array to represent hashmap:</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        int[] tmp = new int[26];</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        for (char ch: tmp.toCharArray()) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//            tmp[ch - &#39;a&#39;]++;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="tree" tabindex="-1">Tree <a class="header-anchor" href="#tree" aria-label="Permalink to &quot;Tree&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">class</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">TreeCompare</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">implements</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Comparator</span><span style="color: #E1E4E8">&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">        {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #6A737D">/* Compares keys based on the</span></span>
<span class="line"><span style="color: #6A737D">               last word&#39;s natural ordering */</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(String </span><span style="color: #FFAB70">a</span><span style="color: #E1E4E8">, String </span><span style="color: #FFAB70">b</span><span style="color: #E1E4E8">)</span></span>
<span class="line"><span style="color: #E1E4E8">            {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> a.</span><span style="color: #B392F0">compareToIgnoreCase</span><span style="color: #E1E4E8">(b);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        TreeMap&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">, </span><span style="color: #F97583">Double</span><span style="color: #E1E4E8">&gt; tm </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> TreeMap&lt;&gt;(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">TreeCompare</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.containsKey(Object key);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.containsValue(Object value);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.fistKey();//return the lowest key currently in map</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.lastKey();//get the last key in sorted map</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.remove(Object key);</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">TreeCompare</span><span style="color: #24292E"> </span><span style="color: #D73A49">implements</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Comparator</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;</span></span>
<span class="line"><span style="color: #24292E">        {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #6A737D">/* Compares keys based on the</span></span>
<span class="line"><span style="color: #6A737D">               last word&#39;s natural ordering */</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(String </span><span style="color: #E36209">a</span><span style="color: #24292E">, String </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span>
<span class="line"><span style="color: #24292E">            {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.</span><span style="color: #6F42C1">compareToIgnoreCase</span><span style="color: #24292E">(b);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        TreeMap&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">, </span><span style="color: #D73A49">Double</span><span style="color: #24292E">&gt; tm </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> TreeMap&lt;&gt;(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">TreeCompare</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.containsKey(Object key);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.containsValue(Object value);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.fistKey();//return the lowest key currently in map</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.lastKey();//get the last key in sorted map</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.remove(Object key);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>TreeMap默认是升序排序的</p>
<h3 id="遍历" tabindex="-1">遍历 <a class="header-anchor" href="#遍历" aria-label="Permalink to &quot;遍历&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="广度遍历二叉树" tabindex="-1">广度遍历二叉树 <a class="header-anchor" href="#广度遍历二叉树" aria-label="Permalink to &quot;广度遍历二叉树&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">class</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Node</span><span style="color: #E1E4E8"> {</span></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> Node left;</span></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> Node right;</span></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> value;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Node</span><span style="color: #E1E4E8">(Node </span><span style="color: #FFAB70">l</span><span style="color: #E1E4E8">, Node </span><span style="color: #FFAB70">r</span><span style="color: #E1E4E8">, </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #FFAB70">v</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">       left </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> l;</span></span>
<span class="line"><span style="color: #E1E4E8">       right </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> r;</span></span>
<span class="line"><span style="color: #E1E4E8">       value </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> v;</span></span>
<span class="line"><span style="color: #E1E4E8">   }</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">Integer</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">treeByLevels</span><span style="color: #E1E4E8">(Node node)</span></span>
<span class="line"><span style="color: #E1E4E8">{</span></span>
<span class="line"><span style="color: #E1E4E8">    List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; result </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    Deque&lt;</span><span style="color: #F97583">Node</span><span style="color: #E1E4E8">&gt; queue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">    queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(node);</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">queue.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">        Node tmp </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> queue.</span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">        result.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(tmp.value);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (tmp.left </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(tmp.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (tmp.right</span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(tmp.right);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">class</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">BinaryTreeTraversal</span><span style="color: #E1E4E8"> {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(root.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(root.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(root.right);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(root.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(root.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(root.right);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(root.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(root.right);</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(root.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            TreeNode node </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> stack.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(node.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.right </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.right);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.left </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.left);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        TreeNode current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> root;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (current </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">||</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (current </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(current);</span></span>
<span class="line"><span style="color: #E1E4E8">                current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> current.left;</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> stack.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(current.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">            current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> current.right;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        stack1.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack1.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            TreeNode node </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> stack1.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            stack2.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.left </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack1.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.left);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.right </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack1.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.right);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack2.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(stack2.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">().val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Node</span><span style="color: #24292E"> {</span></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> Node left;</span></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> Node right;</span></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> value;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Node</span><span style="color: #24292E">(Node </span><span style="color: #E36209">l</span><span style="color: #24292E">, Node </span><span style="color: #E36209">r</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">v</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">       left </span><span style="color: #D73A49">=</span><span style="color: #24292E"> l;</span></span>
<span class="line"><span style="color: #24292E">       right </span><span style="color: #D73A49">=</span><span style="color: #24292E"> r;</span></span>
<span class="line"><span style="color: #24292E">       value </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v;</span></span>
<span class="line"><span style="color: #24292E">   }</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Integer</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">treeByLevels</span><span style="color: #24292E">(Node node)</span></span>
<span class="line"><span style="color: #24292E">{</span></span>
<span class="line"><span style="color: #24292E">    List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    Deque&lt;</span><span style="color: #D73A49">Node</span><span style="color: #24292E">&gt; queue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">    queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(node);</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">queue.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">        Node tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> queue.</span><span style="color: #6F42C1">poll</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">        result.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(tmp.value);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tmp.left </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(tmp.left);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tmp.right</span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(tmp.right);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">BinaryTreeTraversal</span><span style="color: #24292E"> {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(root.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(root.left);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(root.right);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(root.left);</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(root.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(root.right);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(root.left);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(root.right);</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(root.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">stack.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            TreeNode node </span><span style="color: #D73A49">=</span><span style="color: #24292E"> stack.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(node.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.right </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.right);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.left </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.left);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        TreeNode current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> root;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (current </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">stack.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (current </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(current);</span></span>
<span class="line"><span style="color: #24292E">                current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> current.left;</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> stack.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(current.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">            current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> current.right;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        stack1.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">stack1.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            TreeNode node </span><span style="color: #D73A49">=</span><span style="color: #24292E"> stack1.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            stack2.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.left </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack1.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.left);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.right </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack1.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.right);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">stack2.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(stack2.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">().val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br></div></div><p>字符串相关的题:判断句子是否为全字母句</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">boolean</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">checkIfPangram</span><span style="color: #E1E4E8">(String sentence) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> length </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sentence.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (length </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">26</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] mapValue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">26</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">char</span><span style="color: #E1E4E8">[] charArr </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sentence.</span><span style="color: #B392F0">toCharArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">char</span><span style="color: #E1E4E8"> ch</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> charArr) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> index </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> ch </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&#39;a&#39;</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">            mapValue[index] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> num </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> mapValue) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (num </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">true</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">boolean</span><span style="color: #24292E"> </span><span style="color: #6F42C1">checkIfPangram</span><span style="color: #24292E">(String sentence) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> length </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sentence.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (length </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">26</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E">[] mapValue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">26</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">char</span><span style="color: #24292E">[] charArr </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sentence.</span><span style="color: #6F42C1">toCharArray</span><span style="color: #24292E">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">char</span><span style="color: #24292E"> ch</span><span style="color: #D73A49">:</span><span style="color: #24292E"> charArr) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> index </span><span style="color: #D73A49">=</span><span style="color: #24292E"> ch </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">            mapValue[index] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> num </span><span style="color: #D73A49">:</span><span style="color: #24292E"> mapValue) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (num </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>cnblogs.com/joshua-aw/p/6011767.html</p>
<p>1233leetcode</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">String</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">removeSubfolders</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] folder) {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; result </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; folderList </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(folder);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//Arrays.stream(folder).sorted(Comparator.comparingInt(String::length));</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] sortFolder </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(folder);</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(sortFolder));</span></span>
<span class="line"><span style="color: #E1E4E8">        List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; flag </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> folderLen </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sortFolder.length;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">; i </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> folderLen; i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (flag.</span><span style="color: #B392F0">contains</span><span style="color: #E1E4E8">(i)) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> j </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> i ; j </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> folderLen;j</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (sortFolder[i].</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">() </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> sortFolder[j].</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                }</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (flag.</span><span style="color: #B392F0">contains</span><span style="color: #E1E4E8">(j)) {</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (</span><span style="color: #B392F0">isParentFile</span><span style="color: #E1E4E8">(sortFolder[i],sortFolder[j])) {</span></span>
<span class="line"><span style="color: #E1E4E8">                    flag.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(j);</span></span>
<span class="line"><span style="color: #E1E4E8">                }</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(flag.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(flag.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">; i </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> folderLen; i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (flag.</span><span style="color: #B392F0">contains</span><span style="color: #E1E4E8">(i)) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            result.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(sortFolder[i]);</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">private</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] </span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] strs) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #E1E4E8">        Set&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; set </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> TreeSet&lt;&gt;(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(String </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, String </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (o1.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">() </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> o2.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">())</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">-</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">else</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (o1.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">() </span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> o2.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">())</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o1.</span><span style="color: #B392F0">compareTo</span><span style="color: #E1E4E8">(o2);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (String s </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> strs)</span></span>
<span class="line"><span style="color: #E1E4E8">            set.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(s);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] result </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[strs.length];</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (String s</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> set) {</span></span>
<span class="line"><span style="color: #E1E4E8">            result[i] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s;</span></span>
<span class="line"><span style="color: #E1E4E8">            i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">private</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">boolean</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">isParentFile</span><span style="color: #E1E4E8">(String a, String b) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> lenthA </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> a.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (a.</span><span style="color: #B392F0">equals</span><span style="color: #E1E4E8">(b)) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">true</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (b.</span><span style="color: #B392F0">startsWith</span><span style="color: #E1E4E8">(a) </span><span style="color: #F97583">&amp;&amp;</span><span style="color: #E1E4E8"> b.</span><span style="color: #B392F0">charAt</span><span style="color: #E1E4E8">(lenthA) </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&#39;/&#39;</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">true</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">String</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">removeSubfolders</span><span style="color: #24292E">(</span><span style="color: #D73A49">String</span><span style="color: #24292E">[] folder) {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; folderList </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(folder);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//Arrays.stream(folder).sorted(Comparator.comparingInt(String::length));</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">String</span><span style="color: #24292E">[] sortFolder </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(folder);</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(sortFolder));</span></span>
<span class="line"><span style="color: #24292E">        List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> folderLen </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sortFolder.length;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> folderLen; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag.</span><span style="color: #6F42C1">contains</span><span style="color: #24292E">(i)) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i ; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> folderLen;j</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (sortFolder[i].</span><span style="color: #6F42C1">length</span><span style="color: #24292E">() </span><span style="color: #D73A49">==</span><span style="color: #24292E"> sortFolder[j].</span><span style="color: #6F42C1">length</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                }</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag.</span><span style="color: #6F42C1">contains</span><span style="color: #24292E">(j)) {</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">isParentFile</span><span style="color: #24292E">(sortFolder[i],sortFolder[j])) {</span></span>
<span class="line"><span style="color: #24292E">                    flag.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(j);</span></span>
<span class="line"><span style="color: #24292E">                }</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(flag.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(flag.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> folderLen; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag.</span><span style="color: #6F42C1">contains</span><span style="color: #24292E">(i)) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            result.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(sortFolder[i]);</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[] </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #D73A49">String</span><span style="color: #24292E">[] strs) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #24292E">        Set&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; set </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> TreeSet&lt;&gt;(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(String </span><span style="color: #E36209">o1</span><span style="color: #24292E">, String </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (o1.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> o2.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">())</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (o1.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">() </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> o2.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">())</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o1.</span><span style="color: #6F42C1">compareTo</span><span style="color: #24292E">(o2);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (String s </span><span style="color: #D73A49">:</span><span style="color: #24292E"> strs)</span></span>
<span class="line"><span style="color: #24292E">            set.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(s);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">String</span><span style="color: #24292E">[] result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[strs.length];</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (String s</span><span style="color: #D73A49">:</span><span style="color: #24292E"> set) {</span></span>
<span class="line"><span style="color: #24292E">            result[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s;</span></span>
<span class="line"><span style="color: #24292E">            i</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> </span><span style="color: #D73A49">boolean</span><span style="color: #24292E"> </span><span style="color: #6F42C1">isParentFile</span><span style="color: #24292E">(String a, String b) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> lenthA </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a.</span><span style="color: #6F42C1">equals</span><span style="color: #24292E">(b)) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b.</span><span style="color: #6F42C1">startsWith</span><span style="color: #24292E">(a) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> b.</span><span style="color: #6F42C1">charAt</span><span style="color: #24292E">(lenthA) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;/&#39;</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//有些题目可以Map&lt;Key,int[]&gt; map;数据结构</span></span>
<span class="line"><span style="color: #6A737D">//要是对value集合排序是，可以用map.values得到一个Collection&lt;int[]&gt;, 然后对其进行排序。</span></span>
<span class="line"><span style="color: #E1E4E8">List.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">Collections.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">T</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8">list,Comparator</span><span style="color: #F97583">&lt;?</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">super</span><span style="color: #E1E4E8"> T</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> c);</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//有些题目可以Map&lt;Key,int[]&gt; map;数据结构</span></span>
<span class="line"><span style="color: #6A737D">//要是对value集合排序是，可以用map.values得到一个Collection&lt;int[]&gt;, 然后对其进行排序。</span></span>
<span class="line"><span style="color: #24292E">List.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">Collections.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">T</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E">list,Comparator</span><span style="color: #D73A49">&lt;?</span><span style="color: #24292E"> </span><span style="color: #005CC5">super</span><span style="color: #24292E"> T</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> c);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">opArray.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">IoRecord</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"><span style="color: #E1E4E8">              @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">              </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(IoRecord </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, IoRecord </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                  </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> (o1.startAddr </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> o2.startAddr)</span><span style="color: #F97583">?</span><span style="color: #E1E4E8">(o1.startAddr </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.startAddr)</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> (o1.endAddr</span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.endAddr);</span></span>
<span class="line"><span style="color: #E1E4E8">              }</span></span>
<span class="line"><span style="color: #E1E4E8">          });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8"> opArray.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">        .</span><span style="color: #B392F0">sorted</span><span style="color: #E1E4E8">((o1, o2) </span><span style="color: #F97583">-&gt;</span><span style="color: #E1E4E8"> (o1.startAddr </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> o2.startAddr) </span><span style="color: #F97583">?</span><span style="color: #E1E4E8"> (o1.startAddr </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.startAddr) </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> (o1.endAddr </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.endAddr))</span></span>
<span class="line"><span style="color: #E1E4E8">         </span><span style="color: #B392F0">collect</span><span style="color: #E1E4E8">(Collectors.</span><span style="color: #B392F0">toList</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #6A737D">// 上面两个排序等价吗？</span></span>
<span class="line"><span style="color: #6A737D">// 这两种写法实际上是不等价的。</span></span>
<span class="line"><span style="color: #6A737D">// 第一种写法使用了opArray.sort()方法来对原始数组进行排序，而第二种写法使用了opArray.stream().sorted()方法来创建一个新的排序后的列表。</span></span>
<span class="line"><span style="color: #6A737D">// opArray.sort()方法会直接修改原始数组的顺序，而opArray.stream().sorted()方法则会返回一个新的排序后的列表，而不会修改原始数组。</span></span>
<span class="line"><span style="color: #6A737D">// 因此，如果你希望修改原始数组的顺序，应该使用第一种写法；如果你希望得到一个新的排序后的列表，应该使用第二种写法。</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">opArray.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">IoRecord</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"><span style="color: #24292E">              @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">              </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(IoRecord </span><span style="color: #E36209">o1</span><span style="color: #24292E">, IoRecord </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> (o1.startAddr </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> o2.startAddr)</span><span style="color: #D73A49">?</span><span style="color: #24292E">(o1.startAddr </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.startAddr)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> (o1.endAddr</span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.endAddr);</span></span>
<span class="line"><span style="color: #24292E">              }</span></span>
<span class="line"><span style="color: #24292E">          });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E"> opArray.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">        .</span><span style="color: #6F42C1">sorted</span><span style="color: #24292E">((o1, o2) </span><span style="color: #D73A49">-&gt;</span><span style="color: #24292E"> (o1.startAddr </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> o2.startAddr) </span><span style="color: #D73A49">?</span><span style="color: #24292E"> (o1.startAddr </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.startAddr) </span><span style="color: #D73A49">:</span><span style="color: #24292E"> (o1.endAddr </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.endAddr))</span></span>
<span class="line"><span style="color: #24292E">         </span><span style="color: #6F42C1">collect</span><span style="color: #24292E">(Collectors.</span><span style="color: #6F42C1">toList</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #6A737D">// 上面两个排序等价吗？</span></span>
<span class="line"><span style="color: #6A737D">// 这两种写法实际上是不等价的。</span></span>
<span class="line"><span style="color: #6A737D">// 第一种写法使用了opArray.sort()方法来对原始数组进行排序，而第二种写法使用了opArray.stream().sorted()方法来创建一个新的排序后的列表。</span></span>
<span class="line"><span style="color: #6A737D">// opArray.sort()方法会直接修改原始数组的顺序，而opArray.stream().sorted()方法则会返回一个新的排序后的列表，而不会修改原始数组。</span></span>
<span class="line"><span style="color: #6A737D">// 因此，如果你希望修改原始数组的顺序，应该使用第一种写法；如果你希望得到一个新的排序后的列表，应该使用第二种写法。</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>]]></description>
            <content:encoded><![CDATA[<h2 id="数组" tabindex="-1">数组 <a class="header-anchor" href="#数组" aria-label="Permalink to &quot;数组&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//Arrays.fill(dp,0);</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[][]A</span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">},</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">7</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">},</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">7</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},</span></span>
<span class="line"><span style="color: #E1E4E8">    {</span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">9</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #E1E4E8">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> a </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> b </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] tmp </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{a, b};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//        public static &lt;T&gt; T[] copyOfRange(T[] original,</span></span>
<span class="line"><span style="color: #6A737D">//        int from,</span></span>
<span class="line"><span style="color: #6A737D">//        int to)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.arraycopy(T[] source, int sourcePos,T[] dest_arr, int destPos, int len)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.out.println(Arrays.toString(arr));</span></span>
<span class="line"><span style="color: #6A737D">//这里要注意：不能直接 arr.toString()</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> length </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> arr.length;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] y</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intA</span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">}};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intC</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">][</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][]intB</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">][];</span></span>
<span class="line"><span style="color: #E1E4E8">intB[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">];  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #E1E4E8">intB[</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">]</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">};  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #E1E4E8">intB[</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">]</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">];  </span><span style="color: #6A737D">//2</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(intB[</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">]);</span><span style="color: #6A737D">//[I@156643d4</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(intB[</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">][</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">]);</span><span style="color: #6A737D">//2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//二维数组</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [] intD[] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">}};</span></span>
<span class="line"><span style="color: #6A737D">//(1)普通for循环</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;i</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">intD.length;i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){ </span><span style="color: #6A737D">//0,1,2</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> j</span><span style="color: #F97583">=</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;j</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">intD[i].length;j</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){ </span><span style="color: #6A737D">//每一个一维数组的长度</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(intD[i][j]</span><span style="color: #F97583">+</span><span style="color: #9ECBFF">&quot;</span><span style="color: #79B8FF">\t</span><span style="color: #9ECBFF">&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">//(2)加强for循环</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;</span><span style="color: #79B8FF">\n</span><span style="color: #9ECBFF">=========================&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr1</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">intA){  </span><span style="color: #6A737D">//int[]二维数组中元素的类型, arr迭代变量, intA二维组的名称</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">arr1){ </span><span style="color: #6A737D">//int，一维数组中元素的类型，i,迭代变量,arr，一维数组的名称</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(i</span><span style="color: #F97583">+</span><span style="color: #9ECBFF">&quot;</span><span style="color: #79B8FF">\t</span><span style="color: #9ECBFF">&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//Arrays.fill(dp,0);</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[][]A</span><span style="color: #D73A49">=</span><span style="color: #24292E">{</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">},</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">7</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">8</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">},</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">7</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},</span></span>
<span class="line"><span style="color: #24292E">    {</span><span style="color: #005CC5">8</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">9</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #24292E">};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> b </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{a, b};</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//        public static &lt;T&gt; T[] copyOfRange(T[] original,</span></span>
<span class="line"><span style="color: #6A737D">//        int from,</span></span>
<span class="line"><span style="color: #6A737D">//        int to)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.arraycopy(T[] source, int sourcePos,T[] dest_arr, int destPos, int len)</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//System.out.println(Arrays.toString(arr));</span></span>
<span class="line"><span style="color: #6A737D">//这里要注意：不能直接 arr.toString()</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">6</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> length </span><span style="color: #D73A49">=</span><span style="color: #24292E"> arr.length;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] y</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intA</span><span style="color: #D73A49">=</span><span style="color: #24292E">{{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},{</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">},{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">}};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intC</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">][</span><span style="color: #005CC5">5</span><span style="color: #24292E">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][]intB</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">][];</span></span>
<span class="line"><span style="color: #24292E">intB[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">];  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #24292E">intB[</span><span style="color: #005CC5">1</span><span style="color: #24292E">]</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">};  </span><span style="color: #6A737D">//3</span></span>
<span class="line"><span style="color: #24292E">intB[</span><span style="color: #005CC5">2</span><span style="color: #24292E">]</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">2</span><span style="color: #24292E">];  </span><span style="color: #6A737D">//2</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(intB[</span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span><span style="color: #6A737D">//[I@156643d4</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(intB[</span><span style="color: #005CC5">1</span><span style="color: #24292E">][</span><span style="color: #005CC5">1</span><span style="color: #24292E">]);</span><span style="color: #6A737D">//2</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//二维数组</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [] intD[] </span><span style="color: #D73A49">=</span><span style="color: #24292E">{{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},{</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">},{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">}};</span></span>
<span class="line"><span style="color: #6A737D">//(1)普通for循环</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #005CC5">0</span><span style="color: #24292E">;i</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">intD.length;i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){ </span><span style="color: #6A737D">//0,1,2</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j</span><span style="color: #D73A49">=</span><span style="color: #005CC5">0</span><span style="color: #24292E">;j</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">intD[i].length;j</span><span style="color: #D73A49">++</span><span style="color: #24292E">){ </span><span style="color: #6A737D">//每一个一维数组的长度</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(intD[i][j]</span><span style="color: #D73A49">+</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">\t</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">//(2)加强for循环</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">\n</span><span style="color: #032F62">=========================&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr1</span><span style="color: #D73A49">:</span><span style="color: #24292E">intA){  </span><span style="color: #6A737D">//int[]二维数组中元素的类型, arr迭代变量, intA二维组的名称</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">:</span><span style="color: #24292E">arr1){ </span><span style="color: #6A737D">//int，一维数组中元素的类型，i,迭代变量,arr，一维数组的名称</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(i</span><span style="color: #D73A49">+</span><span style="color: #032F62">&quot;</span><span style="color: #005CC5">\t</span><span style="color: #032F62">&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><h4 id="数组转换" tabindex="-1">数组转换 <a class="header-anchor" href="#数组转换" aria-label="Permalink to &quot;数组转换&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] array </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] {</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]&gt; intArray </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(array);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">intArray) {</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(arr));</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">// 二维数组</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> length </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> arr.length;</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] y</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intA</span><span style="color: #F97583">=</span><span style="color: #E1E4E8">{{</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">},{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">}};</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> [][] intC</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">][</span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Integer.MAX_VALUE);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Integer.MIN_VALUE);</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] a </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]{</span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; list1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">boxed</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">collect</span><span style="color: #E1E4E8">(Collectors.</span><span style="color: #B392F0">toList</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(a);</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 Integer[]</span></span>
<span class="line"><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[] integers1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">boxed</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[]</span><span style="color: #F97583">::new</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(integers1));</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 Integer[]</span></span>
<span class="line"><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[] integers2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> list1.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #6A737D">//  调用toArray。传入参数T[] a。这种用法是目前推荐的。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt;转String[]也同理。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 int[]</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> list1.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">mapToInt</span><span style="color: #E1E4E8">(Integer</span><span style="color: #F97583">::</span><span style="color: #E1E4E8">valueOf).</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #6A737D">// 想要转换成int[]类型，就得先转成IntStream。</span></span>
<span class="line"><span style="color: #6A737D">// 这里就通过mapToInt()把Stream&lt;Integer&gt;调用Integer::valueOf来转成IntStream</span></span>
<span class="line"><span style="color: #6A737D">// 而IntStream中默认toArray()转成int[]。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 int[]</span></span>
<span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(integers1).</span><span style="color: #B392F0">mapToInt</span><span style="color: #E1E4E8">(Integer</span><span style="color: #F97583">::</span><span style="color: #E1E4E8">valueOf).</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #6A737D">// 思路同上。先将Integer[]转成Stream&lt;Integer&gt;，再转成IntStream。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; list2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(integers1);</span></span>
<span class="line"><span style="color: #6A737D">// 最简单的方式。String[]转List&lt;String&gt;也同理。</span></span>
<span class="line"><span style="color: #6A737D">// 同理</span></span>
<span class="line"><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] strings1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> {</span><span style="color: #9ECBFF">&quot;a&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;b&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;c&quot;</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #6A737D">// String[] 转 List&lt;String&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; list3 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(strings1);</span></span>
<span class="line"><span style="color: #9ECBFF">&quot;注意这里list3里面的元素直接是strings1里面的元素( list backed by the specified array)，换句话就是说：对strings1的修改，直接影响list3。&quot;</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt; 转 String[]</span></span>
<span class="line"><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] strings2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> list3.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #9ECBFF">&quot;注意这里的strings2里面的元素不是list3里面的元素，换句话就是说：对list3中关于元素的修改，不会影响strings2。&quot;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] array </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[] {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">[]&gt; intArray </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(array);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">:</span><span style="color: #24292E">intArray) {</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(arr));</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">// 二维数组</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">6</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> length </span><span style="color: #D73A49">=</span><span style="color: #24292E"> arr.length;</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] y</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intA</span><span style="color: #D73A49">=</span><span style="color: #24292E">{{</span><span style="color: #005CC5">1</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">},{</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">3</span><span style="color: #24292E">},{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">5</span><span style="color: #24292E">}};</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> [][] intC</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">3</span><span style="color: #24292E">][</span><span style="color: #005CC5">5</span><span style="color: #24292E">];</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Integer.MAX_VALUE);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Integer.MIN_VALUE);</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] a </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[]{</span><span style="color: #005CC5">3</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">,</span><span style="color: #005CC5">4</span><span style="color: #24292E">,</span><span style="color: #005CC5">8</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; list1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">boxed</span><span style="color: #24292E">().</span><span style="color: #6F42C1">collect</span><span style="color: #24292E">(Collectors.</span><span style="color: #6F42C1">toList</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a);</span></span>
<span class="line"><span style="color: #6A737D">// int[] 转 Integer[]</span></span>
<span class="line"><span style="color: #D73A49">Integer</span><span style="color: #24292E">[] integers1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">boxed</span><span style="color: #24292E">().</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">[]</span><span style="color: #D73A49">::new</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(integers1));</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 Integer[]</span></span>
<span class="line"><span style="color: #D73A49">Integer</span><span style="color: #24292E">[] integers2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> list1.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">Integer</span><span style="color: #24292E">[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #6A737D">//  调用toArray。传入参数T[] a。这种用法是目前推荐的。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt;转String[]也同理。</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;Integer&gt; 转 int[]</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> list1.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">().</span><span style="color: #6F42C1">mapToInt</span><span style="color: #24292E">(Integer</span><span style="color: #D73A49">::</span><span style="color: #24292E">valueOf).</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #6A737D">// 想要转换成int[]类型，就得先转成IntStream。</span></span>
<span class="line"><span style="color: #6A737D">// 这里就通过mapToInt()把Stream&lt;Integer&gt;调用Integer::valueOf来转成IntStream</span></span>
<span class="line"><span style="color: #6A737D">// 而IntStream中默认toArray()转成int[]。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 int[]</span></span>
<span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(integers1).</span><span style="color: #6F42C1">mapToInt</span><span style="color: #24292E">(Integer</span><span style="color: #D73A49">::</span><span style="color: #24292E">valueOf).</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #6A737D">// 思路同上。先将Integer[]转成Stream&lt;Integer&gt;，再转成IntStream。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// Integer[] 转 List&lt;Integer&gt;</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; list2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(integers1);</span></span>
<span class="line"><span style="color: #6A737D">// 最简单的方式。String[]转List&lt;String&gt;也同理。</span></span>
<span class="line"><span style="color: #6A737D">// 同理</span></span>
<span class="line"><span style="color: #D73A49">String</span><span style="color: #24292E">[] strings1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #032F62">&quot;a&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;b&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;c&quot;</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #6A737D">// String[] 转 List&lt;String&gt;</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; list3 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(strings1);</span></span>
<span class="line"><span style="color: #032F62">&quot;注意这里list3里面的元素直接是strings1里面的元素( list backed by the specified array)，换句话就是说：对strings1的修改，直接影响list3。&quot;</span></span>
<span class="line"><span style="color: #6A737D">// List&lt;String&gt; 转 String[]</span></span>
<span class="line"><span style="color: #D73A49">String</span><span style="color: #24292E">[] strings2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> list3.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #032F62">&quot;注意这里的strings2里面的元素不是list3里面的元素，换句话就是说：对list3中关于元素的修改，不会影响strings2。&quot;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h3 id="集合转换" tabindex="-1">集合转换 <a class="header-anchor" href="#集合转换" aria-label="Permalink to &quot;集合转换&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//因为List和Set都实现了Collection接口，且addAll(Collection&lt;? extends E&gt; c);方法，因此可以采用addAll()方法将List和Set互相转换；另外，List和Set也提供了Collection&lt;? extends E&gt; c作为参数的构造函数，因此通常采用构造函数的形式完成互相转化。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//List转Set,list转set，可用于元素去重的场景</span></span>
<span class="line"><span style="color: #E1E4E8">Set&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; set </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> HashSet&lt;&gt;(list);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;set: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> set);</span></span>
<span class="line"><span style="color: #6A737D">//Set转List</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; list_1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;(set);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;list_1: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> list_1);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//从上可完成Array和Set的互转</span></span>
<span class="line"><span style="color: #6A737D">//array转set</span></span>
<span class="line"><span style="color: #E1E4E8">s </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[]{</span><span style="color: #9ECBFF">&quot;A&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;B&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;C&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;D&quot;</span><span style="color: #E1E4E8">,</span><span style="color: #9ECBFF">&quot;E&quot;</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">set </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> HashSet&lt;&gt;(Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(s));</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;set: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> set);</span></span>
<span class="line"><span style="color: #6A737D">//set转array</span></span>
<span class="line"><span style="color: #E1E4E8">dest </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> set.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;dest: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">toStsecring</span><span style="color: #E1E4E8">(dest));</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//因为List和Set都实现了Collection接口，且addAll(Collection&lt;? extends E&gt; c);方法，因此可以采用addAll()方法将List和Set互相转换；另外，List和Set也提供了Collection&lt;? extends E&gt; c作为参数的构造函数，因此通常采用构造函数的形式完成互相转化。</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//List转Set,list转set，可用于元素去重的场景</span></span>
<span class="line"><span style="color: #24292E">Set&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; set </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> HashSet&lt;&gt;(list);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;set: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> set);</span></span>
<span class="line"><span style="color: #6A737D">//Set转List</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; list_1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;(set);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;list_1: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> list_1);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//从上可完成Array和Set的互转</span></span>
<span class="line"><span style="color: #6A737D">//array转set</span></span>
<span class="line"><span style="color: #24292E">s </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[]{</span><span style="color: #032F62">&quot;A&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;B&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;C&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;D&quot;</span><span style="color: #24292E">,</span><span style="color: #032F62">&quot;E&quot;</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">set </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> HashSet&lt;&gt;(Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(s));</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;set: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> set);</span></span>
<span class="line"><span style="color: #6A737D">//set转array</span></span>
<span class="line"><span style="color: #24292E">dest </span><span style="color: #D73A49">=</span><span style="color: #24292E"> set.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;dest: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">toStsecring</span><span style="color: #24292E">(dest));</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="求最值" tabindex="-1">求最值 <a class="header-anchor" href="#求最值" aria-label="Permalink to &quot;求最值&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">import</span><span style="color: #E1E4E8"> java.util.Arrays;</span></span>
<span class="line"><span style="color: #F97583">import</span><span style="color: #E1E4E8"> java.util.Collections;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">MAX</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr) {</span></span>
<span class="line"><span style="color: #E1E4E8">    Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(arr);</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> arr[arr.length</span><span style="color: #F97583">-</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">main</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] args) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">[] numbers </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> { </span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">7</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">4</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">9</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> min </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">) </span></span>
<span class="line"><span style="color: #E1E4E8">    Collections.</span><span style="color: #B392F0">min</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(numbers));</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> max </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">) </span></span>
<span class="line"><span style="color: #E1E4E8">    Collections.</span><span style="color: #B392F0">max</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(numbers));</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;最小值: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> min);</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;最大值: &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> max);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> a[] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> {</span><span style="color: #79B8FF">10</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">5</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">8</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> min </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">min</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">getAsInt</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(min);</span></span>
<span class="line"><span style="color: #E1E4E8">    min </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span></span>
<span class="line"><span style="color: #E1E4E8">  Collections.</span><span style="color: #B392F0">min</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">(a).</span><span style="color: #B392F0">boxed</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">collect</span><span style="color: #E1E4E8">(Collectors.</span><span style="color: #B392F0">toList</span><span style="color: #E1E4E8">()));</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(min);</span></span>
<span class="line"><span style="color: #E1E4E8">    Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(a);</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(a[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">]);</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">MAX</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">Stream</span><span style="color: #E1E4E8">(arr).</span><span style="color: #B392F0">max</span><span style="color: #E1E4E8">().</span><span style="color: #B392F0">getAsInt</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> java.util.Arrays;</span></span>
<span class="line"><span style="color: #D73A49">import</span><span style="color: #24292E"> java.util.Collections;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">MAX</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr) {</span></span>
<span class="line"><span style="color: #24292E">    Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(arr);</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> arr[arr.length</span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">main</span><span style="color: #24292E">(</span><span style="color: #D73A49">String</span><span style="color: #24292E">[] args) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">Integer</span><span style="color: #24292E">[] numbers </span><span style="color: #D73A49">=</span><span style="color: #24292E"> { </span><span style="color: #005CC5">8</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">7</span><span style="color: #24292E">, </span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">4</span><span style="color: #24292E">, </span><span style="color: #005CC5">9</span><span style="color: #24292E">, </span><span style="color: #005CC5">5</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> min </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">) </span></span>
<span class="line"><span style="color: #24292E">    Collections.</span><span style="color: #6F42C1">min</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(numbers));</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> max </span><span style="color: #D73A49">=</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">) </span></span>
<span class="line"><span style="color: #24292E">    Collections.</span><span style="color: #6F42C1">max</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(numbers));</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;最小值: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> min);</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;最大值: &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> max);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> a[] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> {</span><span style="color: #005CC5">10</span><span style="color: #24292E">, </span><span style="color: #005CC5">5</span><span style="color: #24292E">, </span><span style="color: #005CC5">8</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> min </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">min</span><span style="color: #24292E">().</span><span style="color: #6F42C1">getAsInt</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(min);</span></span>
<span class="line"><span style="color: #24292E">    min </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span></span>
<span class="line"><span style="color: #24292E">  Collections.</span><span style="color: #6F42C1">min</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">(a).</span><span style="color: #6F42C1">boxed</span><span style="color: #24292E">().</span><span style="color: #6F42C1">collect</span><span style="color: #24292E">(Collectors.</span><span style="color: #6F42C1">toList</span><span style="color: #24292E">()));</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(min);</span></span>
<span class="line"><span style="color: #24292E">    Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(a);</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(a[</span><span style="color: #005CC5">0</span><span style="color: #24292E">]);</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">MAX</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">Stream</span><span style="color: #24292E">(arr).</span><span style="color: #6F42C1">max</span><span style="color: #24292E">().</span><span style="color: #6F42C1">getAsInt</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">String s</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;asdefgasdefg&quot;</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;i</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">();i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">char</span><span style="color: #E1E4E8"> c </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">charAt</span><span style="color: #E1E4E8">(i);</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">//返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">indexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">//返回从 fromIndex 位置开始查找指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">indexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">lastIndexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">s.</span><span style="color: #B392F0">lastIndexOf</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&#39;s&#39;</span><span style="color: #E1E4E8">,</span><span style="color: #79B8FF">6</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] ss </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">split</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;regex&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">//String s = s.substring(int start,int end);</span></span>
<span class="line"><span style="color: #F97583">char</span><span style="color: #E1E4E8">[] cs </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">toCharArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">String s1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">toLowerCase</span><span style="color: #E1E4E8">();</span><span style="color: #6A737D">//将字符串转换为小写</span></span>
<span class="line"><span style="color: #E1E4E8">String s2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">toUpperCase</span><span style="color: #E1E4E8">();</span><span style="color: #6A737D">//将字符串转换为大写</span></span>
<span class="line"><span style="color: #E1E4E8">String s3 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s.</span><span style="color: #B392F0">trim</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #6A737D">//String s4 = String.valueOf(object);</span></span>
<span class="line"><span style="color: #E1E4E8">String str</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;address&quot;</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">String newstr </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> str.</span><span style="color: #B392F0">replace</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;a&quot;</span><span style="color: #E1E4E8">, </span><span style="color: #9ECBFF">&quot;A&quot;</span><span style="color: #E1E4E8">);</span><span style="color: #6A737D">// newstr 的值为 Address</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//数组排序</span></span>
<span class="line"><span style="color: #6A737D">//Arrays.sort();//n*log(n);//重载了四个方法</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a); 默认是升序排序</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex);//按升序排列数组的指定范围。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组的指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #E1E4E8">如果降序排列的话，对于Int[] a, 需要先转行成Integer[] b</span></span>
<span class="line"><span style="color: #E1E4E8">Arrays.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(b,Collections.</span><span style="color: #B392F0">reverseOrder</span><span style="color: #E1E4E8">());</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">String s</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;asdefgasdefg&quot;</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #005CC5">0</span><span style="color: #24292E">;i</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">s.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">();i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">char</span><span style="color: #24292E"> c </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">charAt</span><span style="color: #24292E">(i);</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">//返回指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">indexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">//返回从 fromIndex 位置开始查找指定字符在字符串中第一次出现处的索引，如果此字符串中没有这样的字符，则返回 -1。</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">indexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">,</span><span style="color: #005CC5">2</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">lastIndexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">s.</span><span style="color: #6F42C1">lastIndexOf</span><span style="color: #24292E">(</span><span style="color: #032F62">&#39;s&#39;</span><span style="color: #24292E">,</span><span style="color: #005CC5">6</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #D73A49">String</span><span style="color: #24292E">[] ss </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">split</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;regex&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">//String s = s.substring(int start,int end);</span></span>
<span class="line"><span style="color: #D73A49">char</span><span style="color: #24292E">[] cs </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">toCharArray</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">String s1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">toLowerCase</span><span style="color: #24292E">();</span><span style="color: #6A737D">//将字符串转换为小写</span></span>
<span class="line"><span style="color: #24292E">String s2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">toUpperCase</span><span style="color: #24292E">();</span><span style="color: #6A737D">//将字符串转换为大写</span></span>
<span class="line"><span style="color: #24292E">String s3 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s.</span><span style="color: #6F42C1">trim</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #6A737D">//String s4 = String.valueOf(object);</span></span>
<span class="line"><span style="color: #24292E">String str</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;address&quot;</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">String newstr </span><span style="color: #D73A49">=</span><span style="color: #24292E"> str.</span><span style="color: #6F42C1">replace</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;a&quot;</span><span style="color: #24292E">, </span><span style="color: #032F62">&quot;A&quot;</span><span style="color: #24292E">);</span><span style="color: #6A737D">// newstr 的值为 Address</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">//数组排序</span></span>
<span class="line"><span style="color: #6A737D">//Arrays.sort();//n*log(n);//重载了四个方法</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a); 默认是升序排序</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex);//按升序排列数组的指定范围。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #6A737D">//        sort(T[] a,int fromIndex,int toIndex,Comparator&lt;? super T&gt; c);//根据指定比较器产生的顺序对指定对象数组的指定对象数组进行排序。</span></span>
<span class="line"><span style="color: #24292E">如果降序排列的话，对于Int[] a, 需要先转行成Integer[] b</span></span>
<span class="line"><span style="color: #24292E">Arrays.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(b,Collections.</span><span style="color: #6F42C1">reverseOrder</span><span style="color: #24292E">());</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="集合" tabindex="-1">集合 <a class="header-anchor" href="#集合" aria-label="Permalink to &quot;集合&quot;">&ZeroWidthSpace;</a></h2>
<p>集合框架</p>
<h3 id="collection" tabindex="-1">Collection <a class="header-anchor" href="#collection" aria-label="Permalink to &quot;Collection&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> add</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> addAll</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> clear</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> contains</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> remove</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> size</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> toArray</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> Collection.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(Collection c);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> Collection.</span><span style="color: #B392F0">reverse</span><span style="color: #E1E4E8">(Collection c);</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> add</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> addAll</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> clear</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> contains</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> remove</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> size</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> toArray</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> Collection.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(Collection c);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> Collection.</span><span style="color: #6F42C1">reverse</span><span style="color: #24292E">(Collection c);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="list" tabindex="-1">list <a class="header-anchor" href="#list" aria-label="Permalink to &quot;list&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> List&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; list </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">get</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> index);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">remove</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> index);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">indexOf</span><span style="color: #E1E4E8">(Object o);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">subList</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> start,</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> end);</span></span>
<span class="line"><span style="color: #F97583">-</span><span style="color: #E1E4E8"> list.</span><span style="color: #B392F0">toArray</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[list.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">()])；</span><span style="color: #6A737D">//集合转数组</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Stack&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; s </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">pop,peek,push</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Queue&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; q </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Queue&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">q.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(Object o);</span></span>
<span class="line"><span style="color: #E1E4E8">q.peek;</span></span>
<span class="line"><span style="color: #E1E4E8">q.poll;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> List&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; list </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">get</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> index);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">remove</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> index);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">indexOf</span><span style="color: #24292E">(Object o);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">subList</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> start,</span><span style="color: #D73A49">int</span><span style="color: #24292E"> end);</span></span>
<span class="line"><span style="color: #D73A49">-</span><span style="color: #24292E"> list.</span><span style="color: #6F42C1">toArray</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[list.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">()])；</span><span style="color: #6A737D">//集合转数组</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Stack&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; s </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">pop,peek,push</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Queue&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; q </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Queue&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">q.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(Object o);</span></span>
<span class="line"><span style="color: #24292E">q.peek;</span></span>
<span class="line"><span style="color: #24292E">q.poll;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Deque&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; queue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;c&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;x&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(queue.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Deque&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; stack </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;c&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;xu&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(stack.</span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(stack.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(stack.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 ArrayList :</span></span>
<span class="line"><span style="color: #6A737D">// 频繁访问列表中的某一个元素。</span></span>
<span class="line"><span style="color: #6A737D">// 只需要在列表末尾进行添加和删除元素操作.</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 LinkedList :</span></span>
<span class="line"><span style="color: #6A737D">// 你需要通过循环迭代来访问列表中的某些元素。</span></span>
<span class="line"><span style="color: #6A737D">// 需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 对于双端队列来说，可以使用</span></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">T</span><span style="color: #E1E4E8">&gt; deque </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addFirst() 在头部添加元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">addFirst</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Wiki&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Wiki, Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addLast() 在尾部添加元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">addLast</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Wiki&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao, Wiki]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeFirst() 移除头部元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">removeFirst</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Runoob, Taobao, Weibo]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeLast() 移除尾部元素</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">removeLast</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getFirst() 获取头部元素</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites.</span><span style="color: #B392F0">getFirst</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #6A737D">//Google</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getLast() 获取尾部元素</span></span>
<span class="line"><span style="color: #E1E4E8">System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites.</span><span style="color: #B392F0">getLast</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 还可以遍历</span></span>
<span class="line"><span style="color: #E1E4E8">LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; sites </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Google&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Runoob&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Taobao&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">sites.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(</span><span style="color: #9ECBFF">&quot;Weibo&quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> size </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sites.</span><span style="color: #B392F0">size</span><span style="color: #E1E4E8">(), i </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">; i </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> size; i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(sites.</span><span style="color: #B392F0">get</span><span style="color: #E1E4E8">(i));</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #6A737D">// Google</span></span>
<span class="line"><span style="color: #6A737D">// Runoob</span></span>
<span class="line"><span style="color: #6A737D">// Taobao</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Deque&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; queue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;c&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">peek</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;x&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">poll</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">poll</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(queue.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Deque&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; stack </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;c&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;xu&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(stack.</span><span style="color: #6F42C1">peek</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">stack.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(stack.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(stack.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">());</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 ArrayList :</span></span>
<span class="line"><span style="color: #6A737D">// 频繁访问列表中的某一个元素。</span></span>
<span class="line"><span style="color: #6A737D">// 只需要在列表末尾进行添加和删除元素操作.</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 以下情况使用 LinkedList :</span></span>
<span class="line"><span style="color: #6A737D">// 你需要通过循环迭代来访问列表中的某些元素。</span></span>
<span class="line"><span style="color: #6A737D">// 需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 对于双端队列来说，可以使用</span></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">T</span><span style="color: #24292E">&gt; deque </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addFirst() 在头部添加元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">addFirst</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Wiki&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Wiki, Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 addLast() 在尾部添加元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">addLast</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Wiki&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao, Wiki]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeFirst() 移除头部元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">removeFirst</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Runoob, Taobao, Weibo]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 removeLast() 移除尾部元素</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">removeLast</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites);</span></span>
<span class="line"><span style="color: #6A737D">//[Google, Runoob, Taobao]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getFirst() 获取头部元素</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites.</span><span style="color: #6F42C1">getFirst</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #6A737D">//Google</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #6A737D">// 使用 getLast() 获取尾部元素</span></span>
<span class="line"><span style="color: #24292E">System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites.</span><span style="color: #6F42C1">getLast</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D">// 还可以遍历</span></span>
<span class="line"><span style="color: #24292E">LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; sites </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;();</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Google&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Runoob&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Taobao&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">sites.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(</span><span style="color: #032F62">&quot;Weibo&quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> size </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sites.</span><span style="color: #6F42C1">size</span><span style="color: #24292E">(), i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> size; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(sites.</span><span style="color: #6F42C1">get</span><span style="color: #24292E">(i));</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #6A737D">// Google</span></span>
<span class="line"><span style="color: #6A737D">// Runoob</span></span>
<span class="line"><span style="color: #6A737D">// Taobao</span></span>
<span class="line"><span style="color: #6A737D">// Weibo</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br></div></div><hr>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Deque&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; dq </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">当栈用</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">(),</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(), </span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">当队列用</span><span style="color: #F97583">:</span></span>
<span class="line"><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">从头部插入：</span></span>
<span class="line"><span style="color: #B392F0">addFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的前面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #B392F0">offerFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//空间不足插入失败返回回false</span></span>
<span class="line"><span style="color: #B392F0">push</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//空间不足抛异常</span></span>
<span class="line"><span style="color: #E1E4E8">从尾部插入</span></span>
<span class="line"><span style="color: #B392F0">add</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的后面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//空间不足返回false</span></span>
<span class="line"><span style="color: #B392F0">addLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同add()</span></span>
<span class="line"><span style="color: #B392F0">offerLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同offer()</span></span>
<span class="line"><span style="color: #E1E4E8">从头部删除：</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">removeFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除第一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">remove</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除第一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">pollFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//同poll</span></span>
<span class="line"><span style="color: #6A737D">//从尾部删除</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">removeLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除最后一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">pollLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索并删除最后一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #6A737D">//检索但不删除</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">getFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空就抛异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">getLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索不删除最后一个元素,为空就抛异常</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">() </span><span style="color: #B392F0">peekFirst</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空返回null</span></span>
<span class="line"><span style="color: #E1E4E8">E </span><span style="color: #B392F0">peekLast</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//检索但不删除最后一个元素，为空返回null</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Deque&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; dq </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">当栈用</span><span style="color: #D73A49">:</span><span style="color: #24292E"> </span><span style="color: #6F42C1">pop</span><span style="color: #24292E">(),</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(), </span><span style="color: #6F42C1">peek</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">当队列用</span><span style="color: #D73A49">:</span></span>
<span class="line"><span style="color: #6F42C1">offer</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">poll</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">peek</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">从头部插入：</span></span>
<span class="line"><span style="color: #6F42C1">addFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的前面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #6F42C1">offerFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//空间不足插入失败返回回false</span></span>
<span class="line"><span style="color: #6F42C1">push</span><span style="color: #24292E">()</span><span style="color: #6A737D">//空间不足抛异常</span></span>
<span class="line"><span style="color: #24292E">从尾部插入</span></span>
<span class="line"><span style="color: #6F42C1">add</span><span style="color: #24292E">()</span><span style="color: #6A737D">//将指定的元素插入此双端队列的后面 ，空间不足抛异常</span></span>
<span class="line"><span style="color: #6F42C1">offer</span><span style="color: #24292E">()</span><span style="color: #6A737D">//空间不足返回false</span></span>
<span class="line"><span style="color: #6F42C1">addLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同add()</span></span>
<span class="line"><span style="color: #6F42C1">offerLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同offer()</span></span>
<span class="line"><span style="color: #24292E">从头部删除：</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">removeFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除第一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">remove</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">pop</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同removeFirst</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">poll</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除第一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">pollFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//同poll</span></span>
<span class="line"><span style="color: #6A737D">//从尾部删除</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">removeLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除最后一个元素，为空时抛出异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">pollLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索并删除最后一个元素 ，为空时返回null</span></span>
<span class="line"><span style="color: #6A737D">//检索但不删除</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">getFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空就抛异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">getLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索不删除最后一个元素,为空就抛异常</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">peek</span><span style="color: #24292E">() </span><span style="color: #6F42C1">peekFirst</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索但不删除第一个元素，为空返回null</span></span>
<span class="line"><span style="color: #24292E">E </span><span style="color: #6F42C1">peekLast</span><span style="color: #24292E">()</span><span style="color: #6A737D">//检索但不删除最后一个元素，为空返回null</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><hr>
<p>迭代器</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Iterator</span><span style="color: #F97583">&lt;&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">iterator</span><span style="color: #E1E4E8">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">优先队列</span></span>
<span class="line"><span style="color: #E1E4E8">Queue&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; q </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> PriorityQueue&lt;&gt;();默认 小顶堆</span></span>
<span class="line"><span style="color: #B392F0">peek</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//不弹 返回队首元素</span></span>
<span class="line"><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//弹出 返回队首元素</span></span>
<span class="line"><span style="color: #B392F0">add</span><span style="color: #E1E4E8">() </span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">() </span><span style="color: #6A737D">//添加元素,前者(add)在插入失败时抛出异常，后者(offer)则会返回false。</span></span>
<span class="line"><span style="color: #B392F0">size</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//返回队列元素个数</span></span>
<span class="line"><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()</span><span style="color: #6A737D">//判断队列是否为空，为空返回true,不空返回false</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">PriorityQueue&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; queue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> PriorityQueue&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt;(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"><span style="color: #E1E4E8">@</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(Integer </span><span style="color: #FFAB70">num1</span><span style="color: #E1E4E8">, Integer </span><span style="color: #FFAB70">num2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #F97583">return</span><span style="color: #E1E4E8"> num1 </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> num2;</span><span style="color: #6A737D">//升序 小顶堆</span></span>
<span class="line"><span style="color: #F97583">return</span><span style="color: #E1E4E8"> num2 </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> num1;</span><span style="color: #6A737D">//降序 大顶堆</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #E1E4E8">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">get</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">put</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">remove</span><span style="color: #E1E4E8">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">getOrDefault</span><span style="color: #E1E4E8">(Object key,V defaultValue);</span></span>
<span class="line"><span style="color: #B392F0">containsKey</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">containValue</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Iterator</span><span style="color: #D73A49">&lt;&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">iterator</span><span style="color: #24292E">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">优先队列</span></span>
<span class="line"><span style="color: #24292E">Queue&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; q </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> PriorityQueue&lt;&gt;();默认 小顶堆</span></span>
<span class="line"><span style="color: #6F42C1">peek</span><span style="color: #24292E">()</span><span style="color: #6A737D">//不弹 返回队首元素</span></span>
<span class="line"><span style="color: #6F42C1">poll</span><span style="color: #24292E">()</span><span style="color: #6A737D">//弹出 返回队首元素</span></span>
<span class="line"><span style="color: #6F42C1">add</span><span style="color: #24292E">() </span><span style="color: #6F42C1">offer</span><span style="color: #24292E">() </span><span style="color: #6A737D">//添加元素,前者(add)在插入失败时抛出异常，后者(offer)则会返回false。</span></span>
<span class="line"><span style="color: #6F42C1">size</span><span style="color: #24292E">()</span><span style="color: #6A737D">//返回队列元素个数</span></span>
<span class="line"><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()</span><span style="color: #6A737D">//判断队列是否为空，为空返回true,不空返回false</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">PriorityQueue&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; queue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> PriorityQueue&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt;(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"><span style="color: #24292E">@</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(Integer </span><span style="color: #E36209">num1</span><span style="color: #24292E">, Integer </span><span style="color: #E36209">num2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #D73A49">return</span><span style="color: #24292E"> num1 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> num2;</span><span style="color: #6A737D">//升序 小顶堆</span></span>
<span class="line"><span style="color: #D73A49">return</span><span style="color: #24292E"> num2 </span><span style="color: #D73A49">-</span><span style="color: #24292E"> num1;</span><span style="color: #6A737D">//降序 大顶堆</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #24292E">});</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">get</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">put</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">remove</span><span style="color: #24292E">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">getOrDefault</span><span style="color: #24292E">(Object key,V defaultValue);</span></span>
<span class="line"><span style="color: #6F42C1">containsKey</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">containValue</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="常用算法技巧" tabindex="-1">常用算法技巧 <a class="header-anchor" href="#常用算法技巧" aria-label="Permalink to &quot;常用算法技巧&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="位运算技巧" tabindex="-1">位运算技巧 <a class="header-anchor" href="#位运算技巧" aria-label="Permalink to &quot;位运算技巧&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&amp;mid=2247486704&amp;idx=2&amp;sn=59b011722fe722551de8b56f234a4050&amp;chksm=9bd7f2f8aca07bee47852e7bce72325157897ad0a3d5f383d18bca5379d66716518c2b968ae9&amp;scene=178&amp;cur_album_id=1318896187793260544#rd" target="_blank" rel="noreferrer">https://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&amp;mid=2247486704&amp;idx=2&amp;sn=59b011722fe722551de8b56f234a4050&amp;chksm=9bd7f2f8aca07bee47852e7bce72325157897ad0a3d5f383d18bca5379d66716518c2b968ae9&amp;scene=178&amp;cur_album_id=1318896187793260544#rd</a></p>
<ol>
<li>
<p>利用或操作 <code>|</code> 和空格将英文字符转换为小写：
('a' | ' ') = 'a'，
('A' | ' ') = 'a'</p>
</li>
<li>
<p>利用与操作 <code>&amp;</code> 和下划线将英文字符转换为大写：
('b' &amp; '<em>') = 'B'，
('B' &amp; '</em>') = 'B'</p>
</li>
<li>
<p>利用异或操作 <code>^</code> 和空格进行英文字符大小写互换：
('d' ^ ' ') = 'D'，
('D' ^ ' ') = 'd'</p>
</li>
<li>
<p>不用临时变量交换两个数：
int a = 1, b = 2;
a ^= b;
b ^= a;
a ^= b;
// 现在 a = 2, b = 1</p>
</li>
</ol>
<p>5.n&amp;(n-1) 这个操作是算法中常见的，作用是消除数字 n 的二进制表示中的最后一个 1。</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//判断一个数是不是2的指数,一个数如果是 2 的指数，那么它的二进制表示一定只含有一个 1：</span></span>
<span class="line"><span style="color: #E1E4E8">bool </span><span style="color: #B392F0">isPowerOfTwo</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> n) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (n </span><span style="color: #F97583">&lt;=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> (n </span><span style="color: #F97583">&amp;</span><span style="color: #E1E4E8"> (n </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">)) </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//判断一个数是不是2的指数,一个数如果是 2 的指数，那么它的二进制表示一定只含有一个 1：</span></span>
<span class="line"><span style="color: #24292E">bool </span><span style="color: #6F42C1">isPowerOfTwo</span><span style="color: #24292E">(</span><span style="color: #D73A49">int</span><span style="color: #24292E"> n) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&lt;=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">&amp;</span><span style="color: #24292E"> (n </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">)) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>6.查找只出现一次的元素
异或运算的性质：一个数和它本身做异或运算结果为 0，即 a ^ a = 0；一个数和 0 做异或运算的结果为它本身，即 a ^ 0 = a
例题：</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">singleNumber</span><span style="color: #E1E4E8">(List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">Integer</span><span style="color: #F97583">&gt;&amp;</span><span style="color: #E1E4E8"> nums) {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> res </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (Inter n </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> nums) {</span></span>
<span class="line"><span style="color: #E1E4E8">        res </span><span style="color: #F97583">^=</span><span style="color: #E1E4E8"> n;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> res;</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">singleNumber</span><span style="color: #24292E">(List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Integer</span><span style="color: #D73A49">&gt;&amp;</span><span style="color: #24292E"> nums) {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">int</span><span style="color: #24292E"> res </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (Inter n </span><span style="color: #D73A49">:</span><span style="color: #24292E"> nums) {</span></span>
<span class="line"><span style="color: #24292E">        res </span><span style="color: #D73A49">^=</span><span style="color: #24292E"> n;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> res;</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="比较器" tabindex="-1">比较器 <a class="header-anchor" href="#比较器" aria-label="Permalink to &quot;比较器&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">Comparator&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt; cmp </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">Object</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"><span style="color: #E1E4E8">        @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(Object </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, Object </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #6A737D">//升序</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o1</span><span style="color: #F97583">-</span><span style="color: #E1E4E8">o2;</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #6A737D">//降序</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o2</span><span style="color: #F97583">-</span><span style="color: #E1E4E8">o1;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">Collections.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(list, </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">Dog</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(Dog </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, Dog </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o2.age </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o1.age;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">});</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">Comparator&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt; cmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">Object</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"><span style="color: #24292E">        @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(Object </span><span style="color: #E36209">o1</span><span style="color: #24292E">, Object </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #6A737D">//升序</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o1</span><span style="color: #D73A49">-</span><span style="color: #24292E">o2;</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #6A737D">//降序</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o2</span><span style="color: #D73A49">-</span><span style="color: #24292E">o1;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">Collections.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(list, </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">Dog</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(Dog </span><span style="color: #E36209">o1</span><span style="color: #24292E">, Dog </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o2.age </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o1.age;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">});</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="list-1" tabindex="-1">List <a class="header-anchor" href="#list-1" aria-label="Permalink to &quot;List&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] array </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] {</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">2</span><span style="color: #E1E4E8">, </span><span style="color: #79B8FF">3</span><span style="color: #E1E4E8">};</span></span>
<span class="line"><span style="color: #E1E4E8">List&lt;</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[]&gt; intArray </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(array);</span></span>
<span class="line"><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] arr</span><span style="color: #F97583">:</span><span style="color: #E1E4E8">intArray) {</span></span>
<span class="line"><span style="color: #E1E4E8">    System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(arr));</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">int</span><span style="color: #24292E">[] array </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[] {</span><span style="color: #005CC5">1</span><span style="color: #24292E">, </span><span style="color: #005CC5">2</span><span style="color: #24292E">, </span><span style="color: #005CC5">3</span><span style="color: #24292E">};</span></span>
<span class="line"><span style="color: #24292E">List&lt;</span><span style="color: #D73A49">int</span><span style="color: #24292E">[]&gt; intArray </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(array);</span></span>
<span class="line"><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E">[] arr</span><span style="color: #D73A49">:</span><span style="color: #24292E">intArray) {</span></span>
<span class="line"><span style="color: #24292E">    System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(arr));</span></span>
<span class="line"><span style="color: #24292E">}</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="map" tabindex="-1">Map <a class="header-anchor" href="#map" aria-label="Permalink to &quot;Map&quot;">&ZeroWidthSpace;</a></h2>
<p>java中如果两个hashMap的key和value都逐一相等，则map1.equals(map2) 为true.</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">HashMap&lt;</span><span style="color: #F97583">Character</span><span style="color: #E1E4E8">,</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; map</span><span style="color: #F97583">=new</span><span style="color: #E1E4E8"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//HashMap tranversal:</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (Map.Entry&lt;</span><span style="color: #F97583">Character</span><span style="color: #E1E4E8">, </span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; entry</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> map.</span><span style="color: #B392F0">entrySet</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">char</span><span style="color: #E1E4E8"> key </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> entry.</span><span style="color: #B392F0">getKey</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> val </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> entry.</span><span style="color: #B392F0">getValue</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(key </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> val);</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        Arrays.hashCode(arr);//get the hash of an arr(unique)</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">////use an array to represent hashmap:</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        int[] tmp = new int[26];</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        for (char ch: tmp.toCharArray()) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//            tmp[ch - &#39;a&#39;]++;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">HashMap&lt;</span><span style="color: #D73A49">Character</span><span style="color: #24292E">,</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; map</span><span style="color: #D73A49">=new</span><span style="color: #24292E"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//HashMap tranversal:</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (Map.Entry&lt;</span><span style="color: #D73A49">Character</span><span style="color: #24292E">, </span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; entry</span><span style="color: #D73A49">:</span><span style="color: #24292E"> map.</span><span style="color: #6F42C1">entrySet</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">char</span><span style="color: #24292E"> key </span><span style="color: #D73A49">=</span><span style="color: #24292E"> entry.</span><span style="color: #6F42C1">getKey</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> val </span><span style="color: #D73A49">=</span><span style="color: #24292E"> entry.</span><span style="color: #6F42C1">getValue</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(key </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">+</span><span style="color: #24292E"> val);</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        Arrays.hashCode(arr);//get the hash of an arr(unique)</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">////use an array to represent hashmap:</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        int[] tmp = new int[26];</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        for (char ch: tmp.toCharArray()) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//            tmp[ch - &#39;a&#39;]++;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="tree" tabindex="-1">Tree <a class="header-anchor" href="#tree" aria-label="Permalink to &quot;Tree&quot;">&ZeroWidthSpace;</a></h2>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">class</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">TreeCompare</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">implements</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Comparator</span><span style="color: #E1E4E8">&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;</span></span>
<span class="line"><span style="color: #E1E4E8">        {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #6A737D">/* Compares keys based on the</span></span>
<span class="line"><span style="color: #6A737D">               last word&#39;s natural ordering */</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(String </span><span style="color: #FFAB70">a</span><span style="color: #E1E4E8">, String </span><span style="color: #FFAB70">b</span><span style="color: #E1E4E8">)</span></span>
<span class="line"><span style="color: #E1E4E8">            {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> a.</span><span style="color: #B392F0">compareToIgnoreCase</span><span style="color: #E1E4E8">(b);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        TreeMap&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">, </span><span style="color: #F97583">Double</span><span style="color: #E1E4E8">&gt; tm </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> TreeMap&lt;&gt;(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">TreeCompare</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.containsKey(Object key);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.containsValue(Object value);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.fistKey();//return the lowest key currently in map</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.lastKey();//get the last key in sorted map</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//        tm.remove(Object key);</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">TreeCompare</span><span style="color: #24292E"> </span><span style="color: #D73A49">implements</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Comparator</span><span style="color: #24292E">&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;</span></span>
<span class="line"><span style="color: #24292E">        {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #6A737D">/* Compares keys based on the</span></span>
<span class="line"><span style="color: #6A737D">               last word&#39;s natural ordering */</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(String </span><span style="color: #E36209">a</span><span style="color: #24292E">, String </span><span style="color: #E36209">b</span><span style="color: #24292E">)</span></span>
<span class="line"><span style="color: #24292E">            {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> a.</span><span style="color: #6F42C1">compareToIgnoreCase</span><span style="color: #24292E">(b);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        TreeMap&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">, </span><span style="color: #D73A49">Double</span><span style="color: #24292E">&gt; tm </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> TreeMap&lt;&gt;(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #6F42C1">TreeCompare</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.containsKey(Object key);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.containsValue(Object value);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.fistKey();//return the lowest key currently in map</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.lastKey();//get the last key in sorted map</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//        tm.remove(Object key);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>TreeMap默认是升序排序的</p>
<h3 id="遍历" tabindex="-1">遍历 <a class="header-anchor" href="#遍历" aria-label="Permalink to &quot;遍历&quot;">&ZeroWidthSpace;</a></h3>
<h4 id="广度遍历二叉树" tabindex="-1">广度遍历二叉树 <a class="header-anchor" href="#广度遍历二叉树" aria-label="Permalink to &quot;广度遍历二叉树&quot;">&ZeroWidthSpace;</a></h4>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">class</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Node</span><span style="color: #E1E4E8"> {</span></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> Node left;</span></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> Node right;</span></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> value;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">   </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">Node</span><span style="color: #E1E4E8">(Node </span><span style="color: #FFAB70">l</span><span style="color: #E1E4E8">, Node </span><span style="color: #FFAB70">r</span><span style="color: #E1E4E8">, </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #FFAB70">v</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">       left </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> l;</span></span>
<span class="line"><span style="color: #E1E4E8">       right </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> r;</span></span>
<span class="line"><span style="color: #E1E4E8">       value </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> v;</span></span>
<span class="line"><span style="color: #E1E4E8">   }</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">Integer</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">treeByLevels</span><span style="color: #E1E4E8">(Node node)</span></span>
<span class="line"><span style="color: #E1E4E8">{</span></span>
<span class="line"><span style="color: #E1E4E8">    List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; result </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    Deque&lt;</span><span style="color: #F97583">Node</span><span style="color: #E1E4E8">&gt; queue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">    queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(node);</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">queue.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">        Node tmp </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> queue.</span><span style="color: #B392F0">poll</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">        result.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(tmp.value);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (tmp.left </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(tmp.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (tmp.right</span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) queue.</span><span style="color: #B392F0">offer</span><span style="color: #E1E4E8">(tmp.right);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">class</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">BinaryTreeTraversal</span><span style="color: #E1E4E8"> {</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(root.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(root.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(root.right);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(root.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(root.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(root.right);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(root.left);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(root.right);</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(root.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">preOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            TreeNode node </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> stack.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(node.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.right </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.right);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.left </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.left);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">inOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        TreeNode current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> root;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (current </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">||</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (current </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(current);</span></span>
<span class="line"><span style="color: #E1E4E8">                current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> current.left;</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> stack.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(current.val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">            current </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> current.right;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">void</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">postOrder</span><span style="color: #E1E4E8">(TreeNode </span><span style="color: #FFAB70">root</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (root </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack1 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        Stack&lt;</span><span style="color: #F97583">TreeNode</span><span style="color: #E1E4E8">&gt; stack2 </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        stack1.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack1.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            TreeNode node </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> stack1.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">            stack2.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.left </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack1.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.left);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (node.right </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">null</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                stack1.</span><span style="color: #B392F0">push</span><span style="color: #E1E4E8">(node.right);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">while</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">!</span><span style="color: #E1E4E8">stack2.</span><span style="color: #B392F0">isEmpty</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">print</span><span style="color: #E1E4E8">(stack2.</span><span style="color: #B392F0">pop</span><span style="color: #E1E4E8">().val </span><span style="color: #F97583">+</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot; &quot;</span><span style="color: #E1E4E8">);</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Node</span><span style="color: #24292E"> {</span></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> Node left;</span></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> Node right;</span></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> value;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">   </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #6F42C1">Node</span><span style="color: #24292E">(Node </span><span style="color: #E36209">l</span><span style="color: #24292E">, Node </span><span style="color: #E36209">r</span><span style="color: #24292E">, </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #E36209">v</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">       left </span><span style="color: #D73A49">=</span><span style="color: #24292E"> l;</span></span>
<span class="line"><span style="color: #24292E">       right </span><span style="color: #D73A49">=</span><span style="color: #24292E"> r;</span></span>
<span class="line"><span style="color: #24292E">       value </span><span style="color: #D73A49">=</span><span style="color: #24292E"> v;</span></span>
<span class="line"><span style="color: #24292E">   }</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">Integer</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">treeByLevels</span><span style="color: #24292E">(Node node)</span></span>
<span class="line"><span style="color: #24292E">{</span></span>
<span class="line"><span style="color: #24292E">    List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    Deque&lt;</span><span style="color: #D73A49">Node</span><span style="color: #24292E">&gt; queue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> LinkedList&lt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">    queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(node);</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">queue.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">        Node tmp </span><span style="color: #D73A49">=</span><span style="color: #24292E"> queue.</span><span style="color: #6F42C1">poll</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">        result.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(tmp.value);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tmp.left </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(tmp.left);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (tmp.right</span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) queue.</span><span style="color: #6F42C1">offer</span><span style="color: #24292E">(tmp.right);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">class</span><span style="color: #24292E"> </span><span style="color: #6F42C1">BinaryTreeTraversal</span><span style="color: #24292E"> {</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(root.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(root.left);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(root.right);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(root.left);</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(root.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(root.right);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(root.left);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(root.right);</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(root.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 前序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">preOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">stack.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            TreeNode node </span><span style="color: #D73A49">=</span><span style="color: #24292E"> stack.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(node.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.right </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.right);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.left </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.left);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 中序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">inOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        TreeNode current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> root;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (current </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E"> </span><span style="color: #D73A49">||</span><span style="color: #24292E"> </span><span style="color: #D73A49">!</span><span style="color: #24292E">stack.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (current </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(current);</span></span>
<span class="line"><span style="color: #24292E">                current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> current.left;</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> stack.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(current.val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">            current </span><span style="color: #D73A49">=</span><span style="color: #24292E"> current.right;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #6A737D">// 后序遍历</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">void</span><span style="color: #24292E"> </span><span style="color: #6F42C1">postOrder</span><span style="color: #24292E">(TreeNode </span><span style="color: #E36209">root</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (root </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack1 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        Stack&lt;</span><span style="color: #D73A49">TreeNode</span><span style="color: #24292E">&gt; stack2 </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> Stack&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        stack1.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(root);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">stack1.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            TreeNode node </span><span style="color: #D73A49">=</span><span style="color: #24292E"> stack1.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">            stack2.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.left </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack1.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.left);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (node.right </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> </span><span style="color: #005CC5">null</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                stack1.</span><span style="color: #6F42C1">push</span><span style="color: #24292E">(node.right);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">while</span><span style="color: #24292E"> (</span><span style="color: #D73A49">!</span><span style="color: #24292E">stack2.</span><span style="color: #6F42C1">isEmpty</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">print</span><span style="color: #24292E">(stack2.</span><span style="color: #6F42C1">pop</span><span style="color: #24292E">().val </span><span style="color: #D73A49">+</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot; &quot;</span><span style="color: #24292E">);</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">    }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br></div></div><p>字符串相关的题:判断句子是否为全字母句</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">boolean</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">checkIfPangram</span><span style="color: #E1E4E8">(String sentence) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> length </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sentence.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (length </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">26</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[] mapValue </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8">[</span><span style="color: #79B8FF">26</span><span style="color: #E1E4E8">];</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">char</span><span style="color: #E1E4E8">[] charArr </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sentence.</span><span style="color: #B392F0">toCharArray</span><span style="color: #E1E4E8">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">char</span><span style="color: #E1E4E8"> ch</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> charArr) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> index </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> ch </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&#39;a&#39;</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">            mapValue[index] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> num </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> mapValue) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (num </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">true</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">boolean</span><span style="color: #24292E"> </span><span style="color: #6F42C1">checkIfPangram</span><span style="color: #24292E">(String sentence) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> length </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sentence.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (length </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> </span><span style="color: #005CC5">26</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E">[] mapValue </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E">[</span><span style="color: #005CC5">26</span><span style="color: #24292E">];</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">char</span><span style="color: #24292E">[] charArr </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sentence.</span><span style="color: #6F42C1">toCharArray</span><span style="color: #24292E">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">char</span><span style="color: #24292E"> ch</span><span style="color: #D73A49">:</span><span style="color: #24292E"> charArr) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">int</span><span style="color: #24292E"> index </span><span style="color: #D73A49">=</span><span style="color: #24292E"> ch </span><span style="color: #D73A49">-</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;a&#39;</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">            mapValue[index] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> num </span><span style="color: #D73A49">:</span><span style="color: #24292E"> mapValue) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (num </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>cnblogs.com/joshua-aw/p/6011767.html</p>
<p>1233leetcode</p>
<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #F97583">public</span><span style="color: #E1E4E8"> List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">String</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">removeSubfolders</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] folder) {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; result </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        List&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; folderList </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> Arrays.</span><span style="color: #B392F0">asList</span><span style="color: #E1E4E8">(folder);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">//Arrays.stream(folder).sorted(Comparator.comparingInt(String::length));</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] sortFolder </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(folder);</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(Arrays.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">(sortFolder));</span></span>
<span class="line"><span style="color: #E1E4E8">        List&lt;</span><span style="color: #F97583">Integer</span><span style="color: #E1E4E8">&gt; flag </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> folderLen </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> sortFolder.length;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">; i </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> folderLen; i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (flag.</span><span style="color: #B392F0">contains</span><span style="color: #E1E4E8">(i)) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> j </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> i ; j </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> folderLen;j</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (sortFolder[i].</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">() </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> sortFolder[j].</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">()) {</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                }</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (flag.</span><span style="color: #B392F0">contains</span><span style="color: #E1E4E8">(j)) {</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (</span><span style="color: #B392F0">isParentFile</span><span style="color: #E1E4E8">(sortFolder[i],sortFolder[j])) {</span></span>
<span class="line"><span style="color: #E1E4E8">                    flag.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(j);</span></span>
<span class="line"><span style="color: #E1E4E8">                }</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(flag.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        System.out.</span><span style="color: #B392F0">println</span><span style="color: #E1E4E8">(flag.</span><span style="color: #B392F0">toString</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (</span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i</span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">; i </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> folderLen; i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">){</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (flag.</span><span style="color: #B392F0">contains</span><span style="color: #E1E4E8">(i)) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">continue</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">            result.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(sortFolder[i]);</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">private</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">static</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] </span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] strs) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #E1E4E8">        Set&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt; set </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> TreeSet&lt;&gt;(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">String</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">            @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(String </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, String </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (o1.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">() </span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8"> o2.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">())</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">-</span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">else</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (o1.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">() </span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> o2.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">())</span></span>
<span class="line"><span style="color: #E1E4E8">                    </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">                </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> o1.</span><span style="color: #B392F0">compareTo</span><span style="color: #E1E4E8">(o2);</span></span>
<span class="line"><span style="color: #E1E4E8">            }</span></span>
<span class="line"><span style="color: #E1E4E8">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (String s </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> strs)</span></span>
<span class="line"><span style="color: #E1E4E8">            set.</span><span style="color: #B392F0">add</span><span style="color: #E1E4E8">(s);</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[] result </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">String</span><span style="color: #E1E4E8">[strs.length];</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> i </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">for</span><span style="color: #E1E4E8"> (String s</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> set) {</span></span>
<span class="line"><span style="color: #E1E4E8">            result[i] </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> s;</span></span>
<span class="line"><span style="color: #E1E4E8">            i</span><span style="color: #F97583">++</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> result;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span>
<span class="line"><span style="color: #E1E4E8">    </span><span style="color: #F97583">private</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">boolean</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">isParentFile</span><span style="color: #E1E4E8">(String a, String b) {</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> lenthA </span><span style="color: #F97583">=</span><span style="color: #E1E4E8"> a.</span><span style="color: #B392F0">length</span><span style="color: #E1E4E8">();</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (a.</span><span style="color: #B392F0">equals</span><span style="color: #E1E4E8">(b)) </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">true</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">if</span><span style="color: #E1E4E8"> (b.</span><span style="color: #B392F0">startsWith</span><span style="color: #E1E4E8">(a) </span><span style="color: #F97583">&amp;&amp;</span><span style="color: #E1E4E8"> b.</span><span style="color: #B392F0">charAt</span><span style="color: #E1E4E8">(lenthA) </span><span style="color: #F97583">==</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&#39;/&#39;</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">            </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">true</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8">        </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">false</span><span style="color: #E1E4E8">;</span></span>
<span class="line"><span style="color: #E1E4E8">    }</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #D73A49">public</span><span style="color: #24292E"> List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">String</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #6F42C1">removeSubfolders</span><span style="color: #24292E">(</span><span style="color: #D73A49">String</span><span style="color: #24292E">[] folder) {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        List&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; folderList </span><span style="color: #D73A49">=</span><span style="color: #24292E"> Arrays.</span><span style="color: #6F42C1">asList</span><span style="color: #24292E">(folder);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">//Arrays.stream(folder).sorted(Comparator.comparingInt(String::length));</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">String</span><span style="color: #24292E">[] sortFolder </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(folder);</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(Arrays.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">(sortFolder));</span></span>
<span class="line"><span style="color: #24292E">        List&lt;</span><span style="color: #D73A49">Integer</span><span style="color: #24292E">&gt; flag </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> folderLen </span><span style="color: #D73A49">=</span><span style="color: #24292E"> sortFolder.length;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> folderLen; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag.</span><span style="color: #6F42C1">contains</span><span style="color: #24292E">(i)) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> j </span><span style="color: #D73A49">=</span><span style="color: #24292E"> i ; j </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> folderLen;j</span><span style="color: #D73A49">++</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (sortFolder[i].</span><span style="color: #6F42C1">length</span><span style="color: #24292E">() </span><span style="color: #D73A49">==</span><span style="color: #24292E"> sortFolder[j].</span><span style="color: #6F42C1">length</span><span style="color: #24292E">()) {</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                }</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag.</span><span style="color: #6F42C1">contains</span><span style="color: #24292E">(j)) {</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (</span><span style="color: #6F42C1">isParentFile</span><span style="color: #24292E">(sortFolder[i],sortFolder[j])) {</span></span>
<span class="line"><span style="color: #24292E">                    flag.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(j);</span></span>
<span class="line"><span style="color: #24292E">                }</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(flag.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        System.out.</span><span style="color: #6F42C1">println</span><span style="color: #24292E">(flag.</span><span style="color: #6F42C1">toString</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (</span><span style="color: #D73A49">int</span><span style="color: #24292E"> i</span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">; i </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> folderLen; i</span><span style="color: #D73A49">++</span><span style="color: #24292E">){</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (flag.</span><span style="color: #6F42C1">contains</span><span style="color: #24292E">(i)) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">continue</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">            result.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(sortFolder[i]);</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> </span><span style="color: #D73A49">static</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[] </span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #D73A49">String</span><span style="color: #24292E">[] strs) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #24292E">        Set&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt; set </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> TreeSet&lt;&gt;(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">String</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">            @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(String </span><span style="color: #E36209">o1</span><span style="color: #24292E">, String </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #6A737D">// TODO Auto-generated method stub</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (o1.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">() </span><span style="color: #D73A49">&lt;</span><span style="color: #24292E"> o2.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">())</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #D73A49">-</span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">else</span><span style="color: #24292E"> </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (o1.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">() </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> o2.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">())</span></span>
<span class="line"><span style="color: #24292E">                    </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">                </span><span style="color: #D73A49">return</span><span style="color: #24292E"> o1.</span><span style="color: #6F42C1">compareTo</span><span style="color: #24292E">(o2);</span></span>
<span class="line"><span style="color: #24292E">            }</span></span>
<span class="line"><span style="color: #24292E">        });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (String s </span><span style="color: #D73A49">:</span><span style="color: #24292E"> strs)</span></span>
<span class="line"><span style="color: #24292E">            set.</span><span style="color: #6F42C1">add</span><span style="color: #24292E">(s);</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">String</span><span style="color: #24292E">[] result </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #D73A49">new</span><span style="color: #24292E"> </span><span style="color: #D73A49">String</span><span style="color: #24292E">[strs.length];</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> i </span><span style="color: #D73A49">=</span><span style="color: #24292E"> </span><span style="color: #005CC5">0</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">for</span><span style="color: #24292E"> (String s</span><span style="color: #D73A49">:</span><span style="color: #24292E"> set) {</span></span>
<span class="line"><span style="color: #24292E">            result[i] </span><span style="color: #D73A49">=</span><span style="color: #24292E"> s;</span></span>
<span class="line"><span style="color: #24292E">            i</span><span style="color: #D73A49">++</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> result;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span>
<span class="line"><span style="color: #24292E">    </span><span style="color: #D73A49">private</span><span style="color: #24292E"> </span><span style="color: #D73A49">boolean</span><span style="color: #24292E"> </span><span style="color: #6F42C1">isParentFile</span><span style="color: #24292E">(String a, String b) {</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">int</span><span style="color: #24292E"> lenthA </span><span style="color: #D73A49">=</span><span style="color: #24292E"> a.</span><span style="color: #6F42C1">length</span><span style="color: #24292E">();</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (a.</span><span style="color: #6F42C1">equals</span><span style="color: #24292E">(b)) </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">if</span><span style="color: #24292E"> (b.</span><span style="color: #6F42C1">startsWith</span><span style="color: #24292E">(a) </span><span style="color: #D73A49">&amp;&amp;</span><span style="color: #24292E"> b.</span><span style="color: #6F42C1">charAt</span><span style="color: #24292E">(lenthA) </span><span style="color: #D73A49">==</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;/&#39;</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">            </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">true</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E">        </span><span style="color: #D73A49">return</span><span style="color: #24292E"> </span><span style="color: #005CC5">false</span><span style="color: #24292E">;</span></span>
<span class="line"><span style="color: #24292E">    }</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D">//有些题目可以Map&lt;Key,int[]&gt; map;数据结构</span></span>
<span class="line"><span style="color: #6A737D">//要是对value集合排序是，可以用map.values得到一个Collection&lt;int[]&gt;, 然后对其进行排序。</span></span>
<span class="line"><span style="color: #E1E4E8">List.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">Collections.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(List</span><span style="color: #F97583">&lt;</span><span style="color: #E1E4E8">T</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8">list,Comparator</span><span style="color: #F97583">&lt;?</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">super</span><span style="color: #E1E4E8"> T</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> c);</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D">//有些题目可以Map&lt;Key,int[]&gt; map;数据结构</span></span>
<span class="line"><span style="color: #6A737D">//要是对value集合排序是，可以用map.values得到一个Collection&lt;int[]&gt;, 然后对其进行排序。</span></span>
<span class="line"><span style="color: #24292E">List.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">Collections.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(List</span><span style="color: #D73A49">&lt;</span><span style="color: #24292E">T</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E">list,Comparator</span><span style="color: #D73A49">&lt;?</span><span style="color: #24292E"> </span><span style="color: #005CC5">super</span><span style="color: #24292E"> T</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> c);</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #E1E4E8">opArray.</span><span style="color: #B392F0">sort</span><span style="color: #E1E4E8">(</span><span style="color: #F97583">new</span><span style="color: #E1E4E8"> Comparator&lt;</span><span style="color: #F97583">IoRecord</span><span style="color: #E1E4E8">&gt;() {</span></span>
<span class="line"><span style="color: #E1E4E8">              @</span><span style="color: #F97583">Override</span></span>
<span class="line"><span style="color: #E1E4E8">              </span><span style="color: #F97583">public</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">int</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">compare</span><span style="color: #E1E4E8">(IoRecord </span><span style="color: #FFAB70">o1</span><span style="color: #E1E4E8">, IoRecord </span><span style="color: #FFAB70">o2</span><span style="color: #E1E4E8">) {</span></span>
<span class="line"><span style="color: #E1E4E8">                  </span><span style="color: #F97583">return</span><span style="color: #E1E4E8"> (o1.startAddr </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> o2.startAddr)</span><span style="color: #F97583">?</span><span style="color: #E1E4E8">(o1.startAddr </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.startAddr)</span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> (o1.endAddr</span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.endAddr);</span></span>
<span class="line"><span style="color: #E1E4E8">              }</span></span>
<span class="line"><span style="color: #E1E4E8">          });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E1E4E8"> opArray.</span><span style="color: #B392F0">stream</span><span style="color: #E1E4E8">()</span></span>
<span class="line"><span style="color: #E1E4E8">        .</span><span style="color: #B392F0">sorted</span><span style="color: #E1E4E8">((o1, o2) </span><span style="color: #F97583">-&gt;</span><span style="color: #E1E4E8"> (o1.startAddr </span><span style="color: #F97583">!=</span><span style="color: #E1E4E8"> o2.startAddr) </span><span style="color: #F97583">?</span><span style="color: #E1E4E8"> (o1.startAddr </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.startAddr) </span><span style="color: #F97583">:</span><span style="color: #E1E4E8"> (o1.endAddr </span><span style="color: #F97583">-</span><span style="color: #E1E4E8"> o2.endAddr))</span></span>
<span class="line"><span style="color: #E1E4E8">         </span><span style="color: #B392F0">collect</span><span style="color: #E1E4E8">(Collectors.</span><span style="color: #B392F0">toList</span><span style="color: #E1E4E8">());</span></span>
<span class="line"><span style="color: #6A737D">// 上面两个排序等价吗？</span></span>
<span class="line"><span style="color: #6A737D">// 这两种写法实际上是不等价的。</span></span>
<span class="line"><span style="color: #6A737D">// 第一种写法使用了opArray.sort()方法来对原始数组进行排序，而第二种写法使用了opArray.stream().sorted()方法来创建一个新的排序后的列表。</span></span>
<span class="line"><span style="color: #6A737D">// opArray.sort()方法会直接修改原始数组的顺序，而opArray.stream().sorted()方法则会返回一个新的排序后的列表，而不会修改原始数组。</span></span>
<span class="line"><span style="color: #6A737D">// 因此，如果你希望修改原始数组的顺序，应该使用第一种写法；如果你希望得到一个新的排序后的列表，应该使用第二种写法。</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #24292E">opArray.</span><span style="color: #6F42C1">sort</span><span style="color: #24292E">(</span><span style="color: #D73A49">new</span><span style="color: #24292E"> Comparator&lt;</span><span style="color: #D73A49">IoRecord</span><span style="color: #24292E">&gt;() {</span></span>
<span class="line"><span style="color: #24292E">              @</span><span style="color: #D73A49">Override</span></span>
<span class="line"><span style="color: #24292E">              </span><span style="color: #D73A49">public</span><span style="color: #24292E"> </span><span style="color: #D73A49">int</span><span style="color: #24292E"> </span><span style="color: #6F42C1">compare</span><span style="color: #24292E">(IoRecord </span><span style="color: #E36209">o1</span><span style="color: #24292E">, IoRecord </span><span style="color: #E36209">o2</span><span style="color: #24292E">) {</span></span>
<span class="line"><span style="color: #24292E">                  </span><span style="color: #D73A49">return</span><span style="color: #24292E"> (o1.startAddr </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> o2.startAddr)</span><span style="color: #D73A49">?</span><span style="color: #24292E">(o1.startAddr </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.startAddr)</span><span style="color: #D73A49">:</span><span style="color: #24292E"> (o1.endAddr</span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.endAddr);</span></span>
<span class="line"><span style="color: #24292E">              }</span></span>
<span class="line"><span style="color: #24292E">          });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #24292E"> opArray.</span><span style="color: #6F42C1">stream</span><span style="color: #24292E">()</span></span>
<span class="line"><span style="color: #24292E">        .</span><span style="color: #6F42C1">sorted</span><span style="color: #24292E">((o1, o2) </span><span style="color: #D73A49">-&gt;</span><span style="color: #24292E"> (o1.startAddr </span><span style="color: #D73A49">!=</span><span style="color: #24292E"> o2.startAddr) </span><span style="color: #D73A49">?</span><span style="color: #24292E"> (o1.startAddr </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.startAddr) </span><span style="color: #D73A49">:</span><span style="color: #24292E"> (o1.endAddr </span><span style="color: #D73A49">-</span><span style="color: #24292E"> o2.endAddr))</span></span>
<span class="line"><span style="color: #24292E">         </span><span style="color: #6F42C1">collect</span><span style="color: #24292E">(Collectors.</span><span style="color: #6F42C1">toList</span><span style="color: #24292E">());</span></span>
<span class="line"><span style="color: #6A737D">// 上面两个排序等价吗？</span></span>
<span class="line"><span style="color: #6A737D">// 这两种写法实际上是不等价的。</span></span>
<span class="line"><span style="color: #6A737D">// 第一种写法使用了opArray.sort()方法来对原始数组进行排序，而第二种写法使用了opArray.stream().sorted()方法来创建一个新的排序后的列表。</span></span>
<span class="line"><span style="color: #6A737D">// opArray.sort()方法会直接修改原始数组的顺序，而opArray.stream().sorted()方法则会返回一个新的排序后的列表，而不会修改原始数组。</span></span>
<span class="line"><span style="color: #6A737D">// 因此，如果你希望修改原始数组的顺序，应该使用第一种写法；如果你希望得到一个新的排序后的列表，应该使用第二种写法。</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Arc 激活码 ]]></title>
            <link>https://mobius.cool/arc.html</link>
            <guid>https://mobius.cool/arc.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="arc-激活码" tabindex="-1">Arc 激活码 <a class="header-anchor" href="#arc-激活码" aria-label="Permalink to &quot;Arc 激活码&quot;">&ZeroWidthSpace;</a></h1>
<VideoLink bvId="BV1k8411876y">【编程】新一代浏览器？| Arc 浏览器初体验，越用越爽
B 站视频传送门</VideoLink>
<p>hey, here’s an invite to Arc, the browser I was telling you about!</p>
<p>分享链接：<a href="https://arc.net/gift/79d47d60" target="_blank" rel="noreferrer">https://arc.net/gift/79d47d60</a></p>
<blockquote>
<p>最后更新时间：2023 年 2 月 24 日（周五）。</p>
</blockquote>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>注：账号每周只能邀请 5 个朋友，先到先得，最好自己也申请一下。
若时间还未变动，还请稍等一下，每周一大概 10 点左右会同步一次，感谢理解。</p>
</div>
]]></description>
            <content:encoded><![CDATA[<h1 id="arc-激活码" tabindex="-1">Arc 激活码 <a class="header-anchor" href="#arc-激活码" aria-label="Permalink to &quot;Arc 激活码&quot;">&ZeroWidthSpace;</a></h1>
<VideoLink bvId="BV1k8411876y">【编程】新一代浏览器？| Arc 浏览器初体验，越用越爽
B 站视频传送门</VideoLink>
<p>hey, here’s an invite to Arc, the browser I was telling you about!</p>
<p>分享链接：<a href="https://arc.net/gift/79d47d60" target="_blank" rel="noreferrer">https://arc.net/gift/79d47d60</a></p>
<blockquote>
<p>最后更新时间：2023 年 2 月 24 日（周五）。</p>
</blockquote>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>注：账号每周只能邀请 5 个朋友，先到先得，最好自己也申请一下。
若时间还未变动，还请稍等一下，每周一大概 10 点左右会同步一次，感谢理解。</p>
</div>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/audiovisualarts/</link>
            <guid>https://mobius.cool/audiovisualarts/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>音影艺</p>
]]></description>
            <content:encoded><![CDATA[<p>音影艺</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[关于 ChoDocs ]]></title>
            <link>https://mobius.cool/chodocs.html</link>
            <guid>https://mobius.cool/chodocs.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="关于-chodocs" tabindex="-1">关于 ChoDocs <a class="header-anchor" href="#关于-chodocs" aria-label="Permalink to &quot;关于 ChoDocs&quot;">&ZeroWidthSpace;</a></h1>
<p>在这里可以和各位说说建立 chodocs 的意义，我在公众号里对于我们<a href="/zsxq.html">「影音艺」</a>的介绍就很简单一句话：</p>
<blockquote>
<p>在星球里面，咱们提供私有的东西，咱们敞开心扉的聊，别和我客气，拿起酒杯谈谈人生...</p>
</blockquote>
<h2 id="初心" tabindex="-1">初心 <a class="header-anchor" href="#初心" aria-label="Permalink to &quot;初心&quot;">&ZeroWidthSpace;</a></h2>
<p>我们从以下几个方面逐步来讲讲：</p>
<ul>
<li>
<p><strong>技术框架</strong>方面，首先是 vitepress 的，并且是还在迭代中的，正是因为比较早期的文档框架，越早使用越有利于后期的收益，现在能明显感受到 Vue 生态的强大，个人还是觉得 antfu 影响力还是蛮大的，对于整个 Vue 生态的贡献挺多的，去年 Vitest 真的成为卷王王中王。Vue3 我今年也在逐步接触，给我的感觉真的很棒，没有 Vue2 过去那样的约束了，逐渐觉得和 React 使用上越来越达到一种共识，可能有些 api 用用差不多也就上手了。那么基于 chodocs，我能学点 Vue3 以及 Vite 的东西，我也相信能在 chodocs 上不只提供文档上的内容，一个好的产品是需要持续不断的迭代的，做这件事情，以产品的定位去思考以及探索，这也能给我带来一定的兴奋感，能感受到乐趣在这里面。</p>
</li>
<li>
<p><strong>内容</strong>方面，首先 chodocs 定位其实就是文档，后续可能会改下描述，应该叫做一站式前端 xxx 文档网站，最近有和小伙伴聊到写作这件事情，虽然现在博客平台越来越多，但是写博客关键还是在于写，正是因为太方便了，以至于每每打开平台发现没有什么好写的，拿起键盘都不知道该从哪个按键开始敲，这是我大学写作三年之后的一个状态，长达 1 年之久，从我毕业参加工作之后，我是真的打开 <a href="https://chocolate.blog.csdn.net/" target="_blank" rel="noreferrer">「CSDN」</a> 根本不知道该写啥了。过去我努力创作，除开影响力以及总结知识防止遗忘的考虑，还是有为了找工作这一层面的考虑，而我都已经找到了一份不错的工作了，我还写作干什么！我已经意识到我失去了过去纯粹去总结知识的热情了，很难拾起来。摆烂与思考之后，我渐渐打开了 GitHub，我点开了<a href="https://github.com/Chocolate1999?tab=overview&amp;from=2020-12-01&amp;to=2020-12-31" target="_blank" rel="noreferrer">过去 2020 年的界面</a>，发现满满的绿点，既然不能沉下来去写博客了，不如开始折腾点技术吧，而到现在，chodocs 能给我带来的是我能在研究一些新的技术的同时，还能保持创作，这很好，看到自己 GitHub 绿点越来越多的时候，很难再放弃了。</p>
</li>
<li>
<p><strong>运营</strong>方面，好的产品也需要好的运营，最开始建站的时候，我在目录下方添加了微信的二维码，但后面去拍摄 <a href="https://space.bilibili.com/351534170" target="_blank" rel="noreferrer">「B 站视频」</a>的时候发现感觉不太好，可能会对视频有限流，然后最主要考虑是会有一定的影响阅读，我自己其实也喜欢比较整洁的网站，而不是到处都是广告，手机上我能关掉的消息都关掉了，因为按照过往的经验，有些不重要的消息干扰太多了，短视频的时代，也是一把双刃剑，过去很难去沉下心来坐在位置上 1h，而现在已经习惯这种编码的状态了，也能有更多的时间健健身，追点好剧。</p>
</li>
<li>
<p><strong>格局</strong>方面，我认定将开源免费的事情做好，才会有持久的收益。B 站有「尚硅谷」等等类似其它的培训机构，我觉得他们格局很大，不仅提供了免费的视频，而且还提供了完整的学习路线，你完全不需要付费都可以自学前端，从三件套到框架的学习，大学时期看到了还真是挺震撼的，格局挺高！而 chodocs 没有大的团队，目前就我和 HearLing，但我们目标也是希望各位在学习前端的，尤其是零基础学习前端，完完全全只需要用这一个网站就好了，一站式解决所有问题，chodocs 内容也会涵盖绝大部分需要掌握的基础到中等内容，所以其实把这些东西掌握了，对学习的人而言其实完全可以自己折腾想要学习的内容了，已经具备那个能力了。</p>
</li>
</ul>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>我们希望 ChoDocs 是一个高质量的专业前端内容网站，你完全可以在这里遨游知识海洋，我们也希望帮助到各位。</p>
<p>至于<a href="/zsxq.html">「影音艺」</a>，毕竟是付费产品，大家选择加入即可。</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="关于-chodocs" tabindex="-1">关于 ChoDocs <a class="header-anchor" href="#关于-chodocs" aria-label="Permalink to &quot;关于 ChoDocs&quot;">&ZeroWidthSpace;</a></h1>
<p>在这里可以和各位说说建立 chodocs 的意义，我在公众号里对于我们<a href="/zsxq.html">「影音艺」</a>的介绍就很简单一句话：</p>
<blockquote>
<p>在星球里面，咱们提供私有的东西，咱们敞开心扉的聊，别和我客气，拿起酒杯谈谈人生...</p>
</blockquote>
<h2 id="初心" tabindex="-1">初心 <a class="header-anchor" href="#初心" aria-label="Permalink to &quot;初心&quot;">&ZeroWidthSpace;</a></h2>
<p>我们从以下几个方面逐步来讲讲：</p>
<ul>
<li>
<p><strong>技术框架</strong>方面，首先是 vitepress 的，并且是还在迭代中的，正是因为比较早期的文档框架，越早使用越有利于后期的收益，现在能明显感受到 Vue 生态的强大，个人还是觉得 antfu 影响力还是蛮大的，对于整个 Vue 生态的贡献挺多的，去年 Vitest 真的成为卷王王中王。Vue3 我今年也在逐步接触，给我的感觉真的很棒，没有 Vue2 过去那样的约束了，逐渐觉得和 React 使用上越来越达到一种共识，可能有些 api 用用差不多也就上手了。那么基于 chodocs，我能学点 Vue3 以及 Vite 的东西，我也相信能在 chodocs 上不只提供文档上的内容，一个好的产品是需要持续不断的迭代的，做这件事情，以产品的定位去思考以及探索，这也能给我带来一定的兴奋感，能感受到乐趣在这里面。</p>
</li>
<li>
<p><strong>内容</strong>方面，首先 chodocs 定位其实就是文档，后续可能会改下描述，应该叫做一站式前端 xxx 文档网站，最近有和小伙伴聊到写作这件事情，虽然现在博客平台越来越多，但是写博客关键还是在于写，正是因为太方便了，以至于每每打开平台发现没有什么好写的，拿起键盘都不知道该从哪个按键开始敲，这是我大学写作三年之后的一个状态，长达 1 年之久，从我毕业参加工作之后，我是真的打开 <a href="https://chocolate.blog.csdn.net/" target="_blank" rel="noreferrer">「CSDN」</a> 根本不知道该写啥了。过去我努力创作，除开影响力以及总结知识防止遗忘的考虑，还是有为了找工作这一层面的考虑，而我都已经找到了一份不错的工作了，我还写作干什么！我已经意识到我失去了过去纯粹去总结知识的热情了，很难拾起来。摆烂与思考之后，我渐渐打开了 GitHub，我点开了<a href="https://github.com/Chocolate1999?tab=overview&amp;from=2020-12-01&amp;to=2020-12-31" target="_blank" rel="noreferrer">过去 2020 年的界面</a>，发现满满的绿点，既然不能沉下来去写博客了，不如开始折腾点技术吧，而到现在，chodocs 能给我带来的是我能在研究一些新的技术的同时，还能保持创作，这很好，看到自己 GitHub 绿点越来越多的时候，很难再放弃了。</p>
</li>
<li>
<p><strong>运营</strong>方面，好的产品也需要好的运营，最开始建站的时候，我在目录下方添加了微信的二维码，但后面去拍摄 <a href="https://space.bilibili.com/351534170" target="_blank" rel="noreferrer">「B 站视频」</a>的时候发现感觉不太好，可能会对视频有限流，然后最主要考虑是会有一定的影响阅读，我自己其实也喜欢比较整洁的网站，而不是到处都是广告，手机上我能关掉的消息都关掉了，因为按照过往的经验，有些不重要的消息干扰太多了，短视频的时代，也是一把双刃剑，过去很难去沉下心来坐在位置上 1h，而现在已经习惯这种编码的状态了，也能有更多的时间健健身，追点好剧。</p>
</li>
<li>
<p><strong>格局</strong>方面，我认定将开源免费的事情做好，才会有持久的收益。B 站有「尚硅谷」等等类似其它的培训机构，我觉得他们格局很大，不仅提供了免费的视频，而且还提供了完整的学习路线，你完全不需要付费都可以自学前端，从三件套到框架的学习，大学时期看到了还真是挺震撼的，格局挺高！而 chodocs 没有大的团队，目前就我和 HearLing，但我们目标也是希望各位在学习前端的，尤其是零基础学习前端，完完全全只需要用这一个网站就好了，一站式解决所有问题，chodocs 内容也会涵盖绝大部分需要掌握的基础到中等内容，所以其实把这些东西掌握了，对学习的人而言其实完全可以自己折腾想要学习的内容了，已经具备那个能力了。</p>
</li>
</ul>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>我们希望 ChoDocs 是一个高质量的专业前端内容网站，你完全可以在这里遨游知识海洋，我们也希望帮助到各位。</p>
<p>至于<a href="/zsxq.html">「影音艺」</a>，毕竟是付费产品，大家选择加入即可。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/classicshistory/</link>
            <guid>https://mobius.cool/classicshistory/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>经史子集</p>
]]></description>
            <content:encoded><![CDATA[<p>经史子集</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[欢迎参与贡献，提 PR ]]></title>
            <link>https://mobius.cool/contributing.html</link>
            <guid>https://mobius.cool/contributing.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="欢迎参与贡献-提-pr" tabindex="-1">欢迎参与贡献，提 PR <a class="header-anchor" href="#欢迎参与贡献-提-pr" aria-label="Permalink to &quot;欢迎参与贡献，提 PR&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="贡献指南" tabindex="-1">贡献指南 <a class="header-anchor" href="#贡献指南" aria-label="Permalink to &quot;贡献指南&quot;">&ZeroWidthSpace;</a></h2>
<p>可在 <a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">github</a> 页 fork 一份仓库代码，然后基于 fork 后的提 PR 过来。</p>
<blockquote>
<p>如果你足够感兴趣，我们也可以拉你加入我们的团队，直接基于 <a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">chodocs</a> 开发。</p>
</blockquote>
<p>推荐使用 pnpm 安装：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>本地环境开发：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="文章贡献" tabindex="-1">文章贡献 <a class="header-anchor" href="#文章贡献" aria-label="Permalink to &quot;文章贡献&quot;">&ZeroWidthSpace;</a></h2>
<p>对于文章贡献，分两种情况：</p>
<ul>
<li>
<p>如果你是原创作者，请在 <code>author</code> 字段填写自己的 GitHub 账号名，会自动在文章末尾进行声明。</p>
</li>
<li>
<p>如果你是修正某篇文章，请在 <code>contributors</code> 字段增加自己的 GitHub 账号名，也会有贡献者头像，并不会修改原作者信息。</p>
</li>
</ul>
<blockquote>
<p>最好添加一下文字发布日期，即下方示例的 <code>date</code> 字段，会在文档开头自动生成发布日期和更新日期。</p>
</blockquote>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">---</span></span>
<span class="line"><span style="color: #B392F0">author:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Choi</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Yang</span></span>
<span class="line"><span style="color: #B392F0">contributors:</span><span style="color: #E1E4E8"> [HearLing]</span></span>
<span class="line"><span style="color: #B392F0">date:</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">2023</span><span style="color: #9ECBFF">-01-01</span></span>
<span class="line"><span style="color: #B392F0">---</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">---</span></span>
<span class="line"><span style="color: #6F42C1">author:</span><span style="color: #24292E"> </span><span style="color: #032F62">Choi</span><span style="color: #24292E"> </span><span style="color: #032F62">Yang</span></span>
<span class="line"><span style="color: #6F42C1">contributors:</span><span style="color: #24292E"> [HearLing]</span></span>
<span class="line"><span style="color: #6F42C1">date:</span><span style="color: #24292E"> </span><span style="color: #005CC5">2023</span><span style="color: #032F62">-01-01</span></span>
<span class="line"><span style="color: #6F42C1">---</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="可以贡献哪些" tabindex="-1">可以贡献哪些 <a class="header-anchor" href="#可以贡献哪些" aria-label="Permalink to &quot;可以贡献哪些&quot;">&ZeroWidthSpace;</a></h2>
<p>比如你的面试经验，可参考这个来提交：<a href="/interview/isolcat/">「isolcat 三月面试合集」</a></p>
<p>也可以是文章勘误，因为本站内容难免会有一些笔误的存在，欢迎提交 PR！</p>
<p>来吧，在这里添加一个你的头像~</p>
<h2 id="代码格式" tabindex="-1">代码格式 <a class="header-anchor" href="#代码格式" aria-label="Permalink to &quot;代码格式&quot;">&ZeroWidthSpace;</a></h2>
<p>对于代码格式，本仓库使用 <code>eslint</code> 与 <code>git-hooks</code>，在你提交代码的时候会进行格式化以及修复一些问题。</p>
<p>也可以手动执行一下：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">run</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">lint:fix</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">run</span><span style="color: #24292E"> </span><span style="color: #032F62">lint:fix</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="贡献者列表" tabindex="-1">贡献者列表 <a class="header-anchor" href="#贡献者列表" aria-label="Permalink to &quot;贡献者列表&quot;">&ZeroWidthSpace;</a></h2>
<p>采用自动生成形式，各位无需修改 <code>contributors.json</code> 文件，方便你我。</p>
<h2 id="文字排版" tabindex="-1">文字排版 <a class="header-anchor" href="#文字排版" aria-label="Permalink to &quot;文字排版&quot;">&ZeroWidthSpace;</a></h2>
<p>笔记内容按照 <a href="https://mazhuang.org/wiki/chinese-copywriting-guidelines/" target="_blank" rel="noreferrer">中文文案排版指北</a>进行排版，即尽量保证中英文之间的空格，也可以使用 VSCode 相关格式化工具。</p>
<blockquote>
<p>todo：集成 md 格式化（欢迎 PR）</p>
</blockquote>
<h2 id="感谢参与" tabindex="-1">感谢参与 <a class="header-anchor" href="#感谢参与" aria-label="Permalink to &quot;感谢参与&quot;">&ZeroWidthSpace;</a></h2>
<p>非常感谢你对于 <a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">ChoDocs</a> 的参与贡献，我们会在首页 <a href="https://mobius.cool/" target="_blank" rel="noreferrer">chodocs.cn</a> 展示各位贡献者的头像！</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="欢迎参与贡献-提-pr" tabindex="-1">欢迎参与贡献，提 PR <a class="header-anchor" href="#欢迎参与贡献-提-pr" aria-label="Permalink to &quot;欢迎参与贡献，提 PR&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="贡献指南" tabindex="-1">贡献指南 <a class="header-anchor" href="#贡献指南" aria-label="Permalink to &quot;贡献指南&quot;">&ZeroWidthSpace;</a></h2>
<p>可在 <a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">github</a> 页 fork 一份仓库代码，然后基于 fork 后的提 PR 过来。</p>
<blockquote>
<p>如果你足够感兴趣，我们也可以拉你加入我们的团队，直接基于 <a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">chodocs</a> 开发。</p>
</blockquote>
<p>推荐使用 pnpm 安装：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>本地环境开发：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="文章贡献" tabindex="-1">文章贡献 <a class="header-anchor" href="#文章贡献" aria-label="Permalink to &quot;文章贡献&quot;">&ZeroWidthSpace;</a></h2>
<p>对于文章贡献，分两种情况：</p>
<ul>
<li>
<p>如果你是原创作者，请在 <code>author</code> 字段填写自己的 GitHub 账号名，会自动在文章末尾进行声明。</p>
</li>
<li>
<p>如果你是修正某篇文章，请在 <code>contributors</code> 字段增加自己的 GitHub 账号名，也会有贡献者头像，并不会修改原作者信息。</p>
</li>
</ul>
<blockquote>
<p>最好添加一下文字发布日期，即下方示例的 <code>date</code> 字段，会在文档开头自动生成发布日期和更新日期。</p>
</blockquote>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">---</span></span>
<span class="line"><span style="color: #B392F0">author:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Choi</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Yang</span></span>
<span class="line"><span style="color: #B392F0">contributors:</span><span style="color: #E1E4E8"> [HearLing]</span></span>
<span class="line"><span style="color: #B392F0">date:</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">2023</span><span style="color: #9ECBFF">-01-01</span></span>
<span class="line"><span style="color: #B392F0">---</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">---</span></span>
<span class="line"><span style="color: #6F42C1">author:</span><span style="color: #24292E"> </span><span style="color: #032F62">Choi</span><span style="color: #24292E"> </span><span style="color: #032F62">Yang</span></span>
<span class="line"><span style="color: #6F42C1">contributors:</span><span style="color: #24292E"> [HearLing]</span></span>
<span class="line"><span style="color: #6F42C1">date:</span><span style="color: #24292E"> </span><span style="color: #005CC5">2023</span><span style="color: #032F62">-01-01</span></span>
<span class="line"><span style="color: #6F42C1">---</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="可以贡献哪些" tabindex="-1">可以贡献哪些 <a class="header-anchor" href="#可以贡献哪些" aria-label="Permalink to &quot;可以贡献哪些&quot;">&ZeroWidthSpace;</a></h2>
<p>比如你的面试经验，可参考这个来提交：<a href="/interview/isolcat/">「isolcat 三月面试合集」</a></p>
<p>也可以是文章勘误，因为本站内容难免会有一些笔误的存在，欢迎提交 PR！</p>
<p>来吧，在这里添加一个你的头像~</p>
<h2 id="代码格式" tabindex="-1">代码格式 <a class="header-anchor" href="#代码格式" aria-label="Permalink to &quot;代码格式&quot;">&ZeroWidthSpace;</a></h2>
<p>对于代码格式，本仓库使用 <code>eslint</code> 与 <code>git-hooks</code>，在你提交代码的时候会进行格式化以及修复一些问题。</p>
<p>也可以手动执行一下：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">pnpm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">run</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">lint:fix</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">pnpm</span><span style="color: #24292E"> </span><span style="color: #032F62">run</span><span style="color: #24292E"> </span><span style="color: #032F62">lint:fix</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="贡献者列表" tabindex="-1">贡献者列表 <a class="header-anchor" href="#贡献者列表" aria-label="Permalink to &quot;贡献者列表&quot;">&ZeroWidthSpace;</a></h2>
<p>采用自动生成形式，各位无需修改 <code>contributors.json</code> 文件，方便你我。</p>
<h2 id="文字排版" tabindex="-1">文字排版 <a class="header-anchor" href="#文字排版" aria-label="Permalink to &quot;文字排版&quot;">&ZeroWidthSpace;</a></h2>
<p>笔记内容按照 <a href="https://mazhuang.org/wiki/chinese-copywriting-guidelines/" target="_blank" rel="noreferrer">中文文案排版指北</a>进行排版，即尽量保证中英文之间的空格，也可以使用 VSCode 相关格式化工具。</p>
<blockquote>
<p>todo：集成 md 格式化（欢迎 PR）</p>
</blockquote>
<h2 id="感谢参与" tabindex="-1">感谢参与 <a class="header-anchor" href="#感谢参与" aria-label="Permalink to &quot;感谢参与&quot;">&ZeroWidthSpace;</a></h2>
<p>非常感谢你对于 <a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">ChoDocs</a> 的参与贡献，我们会在首页 <a href="https://mobius.cool/" target="_blank" rel="noreferrer">chodocs.cn</a> 展示各位贡献者的头像！</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[资源导航 ]]></title>
            <link>https://mobius.cool/favorites.html</link>
            <guid>https://mobius.cool/favorites.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="资源导航" tabindex="-1">资源导航 <a class="header-anchor" href="#资源导航" aria-label="Permalink to &quot;资源导航&quot;">&ZeroWidthSpace;</a></h1>
<p>在此分享前端所收藏的一些好用、实用网站。</p>
<VideoLink bvId="BV1ky4y1Z7rG">从大学学编程到前端工作，我积累的一些好用的网站，整合在了资源导航页面！
 B 站视频传送门</VideoLink>
<blockquote>
<p>如果你也有觉得不错的网站以及工具，欢迎来<a href="https://github.com/chodocs/chodocs/discussions/138" target="_blank" rel="noreferrer">优质资源推荐</a>这里讨论，审核过后我们会回复你，也非常欢迎各位的 PR！</p>
</blockquote>
<h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>平常可以参考的颜色风格、设计网站、一些有帮助的工具。</p>
</blockquote>
<NavCard :navData=cssNav /><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=toolNav /><h2 id="运营网站" tabindex="-1">运营网站 <a class="header-anchor" href="#运营网站" aria-label="Permalink to &quot;运营网站&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=operateNav /><h2 id="正则可视化" tabindex="-1">正则可视化 <a class="header-anchor" href="#正则可视化" aria-label="Permalink to &quot;正则可视化&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=regexNav /><h2 id="装的一些-mac-软件" tabindex="-1">装的一些 Mac 软件 <a class="header-anchor" href="#装的一些-mac-软件" aria-label="Permalink to &quot;装的一些 Mac 软件&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>一些自己必备的软件就不例举了，比如微信，QQ，网盘等等。</p>
</blockquote>
<details class="details custom-block"><summary>Mac 软件列表</summary>
<ul>
<li>Figma</li>
<li>Arc</li>
<li>PPDuck</li>
<li>cosbrowser</li>
<li>Paste</li>
<li>SwitchHosts</li>
<li>VsCode</li>
<li>Dynamic Wallpaper</li>
<li>Chrome</li>
<li>Firefox</li>
<li>...</li>
</ul>
</details>
<h2 id="谷歌拓展插件" tabindex="-1">谷歌拓展插件 <a class="header-anchor" href="#谷歌拓展插件" aria-label="Permalink to &quot;谷歌拓展插件&quot;">&ZeroWidthSpace;</a></h2>
<details class="details custom-block"><summary>谷歌插件列表</summary>
<ul>
<li>Ajax Interceptor</li>
<li>Apifox Browser Extension</li>
<li>CF-Predictor</li>
<li>Dark Reader</li>
<li>iTab 新标签页</li>
<li>JSONVue</li>
<li>OneTab</li>
<li>Proxy SwitchyOmega</li>
<li>React Developer Tools</li>
<li>Redux DevTools</li>
<li>Responsive Viewer</li>
<li>Super Simple Highlighter</li>
<li>Vue.js devtools</li>
<li>Wappalyzer - Technology profiler</li>
<li>标签分组扩展</li>
<li>沙拉查词-聚合词典划词翻译</li>
<li>...</li>
</ul>
</details>
<h2 id="有趣又有用" tabindex="-1">有趣又有用 <a class="header-anchor" href="#有趣又有用" aria-label="Permalink to &quot;有趣又有用&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=toyNav /><h2 id="素材" tabindex="-1">素材 <a class="header-anchor" href="#素材" aria-label="Permalink to &quot;素材&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=materialNav /><h2 id="vscode-插件" tabindex="-1">VsCode 插件 <a class="header-anchor" href="#vscode-插件" aria-label="Permalink to &quot;VsCode 插件&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>以下插件是个人一直启用的，部分安装了但是未启用的就没列出来了。因为一些编码内容需要，也可能杂七杂八装了很多，以下插件建议使用者可再阅读一下相关 <code>ReadMe</code> 再选择安装。</p>
</blockquote>
<details class="details custom-block"><summary>VSCode 插件列表</summary>
<ul>
<li>Ascii Tree Generator</li>
<li>Auto Close Tag</li>
<li>Auto Rename Tag</li>
<li>background</li>
<li>Better Comments</li>
<li>Carbon Product Icons</li>
<li>Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code</li>
<li>Code Runner</li>
<li>Color Highlight</li>
<li>CSS Peek</li>
<li>DevTools for Chrome</li>
<li>Docker</li>
<li>DotENV</li>
<li>EditorConfig for VS Code</li>
<li>EJS language support</li>
<li>ejs Snippets</li>
<li>Error Lens</li>
<li>ES7+ React/Redux/React-Native snippets</li>
<li>file-icons</li>
<li>formate: CSS/LESS/SCSS formatter</li>
<li>GitHub Pull Requests and Issues</li>
<li>gitignore</li>
<li>GitLens — Git supercharged</li>
<li>Goto definition alias</li>
<li>Highlight Matching Tag</li>
<li>HTML CSS Support</li>
<li>htmltagwrap</li>
<li>i18n Ally</li>
<li>Image preview</li>
<li>indent-rainbow</li>
<li>IntelliCode</li>
<li>IntelliCode API Usage Examples</li>
<li>javascript console utils</li>
<li>JSON to TS</li>
<li>LeetCode</li>
<li>Live Server</li>
<li>Markdown Preview Enhanced</li>
<li>MDX</li>
<li>Node JSON Autocomplete</li>
<li>npm Intellisense</li>
<li>Path Intellisense</li>
<li>Polacode</li>
<li>Prettier - Code formatter</li>
<li>Preview on Web Server</li>
<li>pug (jade) formatter</li>
<li>Pylance</li>
<li>Python</li>
<li>Random Everything</li>
<li>React code snippets</li>
<li>React Style Helper</li>
<li>REST Client</li>
<li>SCSS Formatter</li>
<li>Simple React Snippets</li>
<li>Sort JSON objects</li>
<li>Sort package.json</li>
<li>Sort Typescript Imports</li>
<li>stylus</li>
<li>SVG</li>
<li>Svg Preview</li>
<li>SVG Viewer</li>
<li>Tabnine AI Autocomplete for Javascript, Python, Typescript, PHP, Go, Java, Ruby &amp; more</li>
<li>Tailwind CSS IntelliSense</li>
<li>Tailwind CSS Transpiler</li>
<li>Tailwind Snippets</li>
<li>Template String Converter</li>
<li>TODO Highlight</li>
<li>Turbo Console Log</li>
<li>TypeScript Vue Plugin (Volar)</li>
<li>UnoCSS</li>
<li>Vitesse Theme</li>
<li>vscode convert utils</li>
<li>Vue</li>
<li>Vue 3 Snippets</li>
<li>Vue Language Features (Volar)</li>
<li>Where Am I?</li>
<li>XML</li>
<li>XML Tools</li>
</ul>
</details>
<h2 id="实用教程网站" tabindex="-1">实用教程网站 <a class="header-anchor" href="#实用教程网站" aria-label="Permalink to &quot;实用教程网站&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=tutorialNav /><h2 id="面试类" tabindex="-1">面试类 <a class="header-anchor" href="#面试类" aria-label="Permalink to &quot;面试类&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=interviewNav /><h2 id="acm" tabindex="-1">ACM <a class="header-anchor" href="#acm" aria-label="Permalink to &quot;ACM&quot;">&ZeroWidthSpace;</a></h2>
<details class="details custom-block"><summary>ACM 刷题计划</summary>
<blockquote>
<p>acm 选手应该 dddd</p>
</blockquote>
<ul>
<li><a href="https://vjudge.net/article/371" target="_blank" rel="noreferrer">kuangbin 专题题目一览</a></li>
<li><a href="https://vjudge.net/contest/355775#panel-problems" target="_blank" rel="noreferrer">【两个月刷题计划】专题一 简单搜索</a></li>
<li><a href="https://vjudge.net/contest/355780#overview" target="_blank" rel="noreferrer">【两个月刷题计划】专题二 搜索进阶</a></li>
<li><a href="https://vjudge.net/contest/355997" target="_blank" rel="noreferrer">【两个月刷题计划】专题三 Dancing Links 舞蹈链</a></li>
<li><a href="https://vjudge.net/contest/355998" target="_blank" rel="noreferrer">【两个月刷题计划】专题四 最短路练习</a></li>
<li><a href="https://vjudge.net/contest/356000#overview" target="_blank" rel="noreferrer">【两个月刷题计划】专题五 并查集</a></li>
<li><a href="https://vjudge.net/contest/356001" target="_blank" rel="noreferrer">【两个月刷题计划】专题六 最小生成树</a></li>
<li><a href="https://vjudge.net/contest/356002" target="_blank" rel="noreferrer">【两个月刷题计划】专题七 线段树</a></li>
<li><a href="https://vjudge.net/contest/356003" target="_blank" rel="noreferrer">【两个月刷题计划】专题八 生成树</a></li>
<li><a href="https://vjudge.net/contest/356004" target="_blank" rel="noreferrer">【两个月刷题计划】 专题九 连通图</a></li>
<li><a href="https://vjudge.net/contest/356005" target="_blank" rel="noreferrer">【两个月刷题计划】专题十 匹配问题</a></li>
<li><a href="https://vjudge.net/contest/356006" target="_blank" rel="noreferrer">【两个月刷题计划】专题十一 网络流</a></li>
<li><a href="https://vjudge.net/contest/356007" target="_blank" rel="noreferrer">【两个月刷题计划】专题十二 基础 DP1</a></li>
<li><a href="https://vjudge.net/contest/356009" target="_blank" rel="noreferrer">【两个月刷题计划】专题十三 基础计算几何</a></li>
<li><a href="https://vjudge.net/contest/356011" target="_blank" rel="noreferrer">【两个月刷题计划】专题十四 数论基础</a></li>
<li><a href="https://vjudge.net/contest/356012" target="_blank" rel="noreferrer">【两个月刷题计划】专题十五 数位 DP</a></li>
<li><a href="https://vjudge.net/contest/356014" target="_blank" rel="noreferrer">【两个月刷题计划】 专题十六 KMP &amp; 扩展 KMP &amp; Manacher</a></li>
<li><a href="https://vjudge.net/contest/356015" target="_blank" rel="noreferrer">【两个月刷题计划】专题十七 AC 自动机</a></li>
<li><a href="https://vjudge.net/contest/356017" target="_blank" rel="noreferrer">【两个月刷题计划】专题十八 后缀数组</a></li>
<li><a href="https://vjudge.net/contest/356019" target="_blank" rel="noreferrer">【两个月刷题计划】专题十九 矩阵</a></li>
<li><a href="https://vjudge.net/contest/356020" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十 斜率 DP</a></li>
<li><a href="https://vjudge.net/contest/356024" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十一 概率&amp;期望</a></li>
<li><a href="https://vjudge.net/contest/356025" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十二 区间 DP</a></li>
<li><a href="https://vjudge.net/contest/356026" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十三 计算几何之半平面交</a></li>
</ul>
</details>
]]></description>
            <content:encoded><![CDATA[<h1 id="资源导航" tabindex="-1">资源导航 <a class="header-anchor" href="#资源导航" aria-label="Permalink to &quot;资源导航&quot;">&ZeroWidthSpace;</a></h1>
<p>在此分享前端所收藏的一些好用、实用网站。</p>
<VideoLink bvId="BV1ky4y1Z7rG">从大学学编程到前端工作，我积累的一些好用的网站，整合在了资源导航页面！
 B 站视频传送门</VideoLink>
<blockquote>
<p>如果你也有觉得不错的网站以及工具，欢迎来<a href="https://github.com/chodocs/chodocs/discussions/138" target="_blank" rel="noreferrer">优质资源推荐</a>这里讨论，审核过后我们会回复你，也非常欢迎各位的 PR！</p>
</blockquote>
<h2 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>平常可以参考的颜色风格、设计网站、一些有帮助的工具。</p>
</blockquote>
<NavCard :navData=cssNav /><h2 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=toolNav /><h2 id="运营网站" tabindex="-1">运营网站 <a class="header-anchor" href="#运营网站" aria-label="Permalink to &quot;运营网站&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=operateNav /><h2 id="正则可视化" tabindex="-1">正则可视化 <a class="header-anchor" href="#正则可视化" aria-label="Permalink to &quot;正则可视化&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=regexNav /><h2 id="装的一些-mac-软件" tabindex="-1">装的一些 Mac 软件 <a class="header-anchor" href="#装的一些-mac-软件" aria-label="Permalink to &quot;装的一些 Mac 软件&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>一些自己必备的软件就不例举了，比如微信，QQ，网盘等等。</p>
</blockquote>
<details class="details custom-block"><summary>Mac 软件列表</summary>
<ul>
<li>Figma</li>
<li>Arc</li>
<li>PPDuck</li>
<li>cosbrowser</li>
<li>Paste</li>
<li>SwitchHosts</li>
<li>VsCode</li>
<li>Dynamic Wallpaper</li>
<li>Chrome</li>
<li>Firefox</li>
<li>...</li>
</ul>
</details>
<h2 id="谷歌拓展插件" tabindex="-1">谷歌拓展插件 <a class="header-anchor" href="#谷歌拓展插件" aria-label="Permalink to &quot;谷歌拓展插件&quot;">&ZeroWidthSpace;</a></h2>
<details class="details custom-block"><summary>谷歌插件列表</summary>
<ul>
<li>Ajax Interceptor</li>
<li>Apifox Browser Extension</li>
<li>CF-Predictor</li>
<li>Dark Reader</li>
<li>iTab 新标签页</li>
<li>JSONVue</li>
<li>OneTab</li>
<li>Proxy SwitchyOmega</li>
<li>React Developer Tools</li>
<li>Redux DevTools</li>
<li>Responsive Viewer</li>
<li>Super Simple Highlighter</li>
<li>Vue.js devtools</li>
<li>Wappalyzer - Technology profiler</li>
<li>标签分组扩展</li>
<li>沙拉查词-聚合词典划词翻译</li>
<li>...</li>
</ul>
</details>
<h2 id="有趣又有用" tabindex="-1">有趣又有用 <a class="header-anchor" href="#有趣又有用" aria-label="Permalink to &quot;有趣又有用&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=toyNav /><h2 id="素材" tabindex="-1">素材 <a class="header-anchor" href="#素材" aria-label="Permalink to &quot;素材&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=materialNav /><h2 id="vscode-插件" tabindex="-1">VsCode 插件 <a class="header-anchor" href="#vscode-插件" aria-label="Permalink to &quot;VsCode 插件&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>以下插件是个人一直启用的，部分安装了但是未启用的就没列出来了。因为一些编码内容需要，也可能杂七杂八装了很多，以下插件建议使用者可再阅读一下相关 <code>ReadMe</code> 再选择安装。</p>
</blockquote>
<details class="details custom-block"><summary>VSCode 插件列表</summary>
<ul>
<li>Ascii Tree Generator</li>
<li>Auto Close Tag</li>
<li>Auto Rename Tag</li>
<li>background</li>
<li>Better Comments</li>
<li>Carbon Product Icons</li>
<li>Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code</li>
<li>Code Runner</li>
<li>Color Highlight</li>
<li>CSS Peek</li>
<li>DevTools for Chrome</li>
<li>Docker</li>
<li>DotENV</li>
<li>EditorConfig for VS Code</li>
<li>EJS language support</li>
<li>ejs Snippets</li>
<li>Error Lens</li>
<li>ES7+ React/Redux/React-Native snippets</li>
<li>file-icons</li>
<li>formate: CSS/LESS/SCSS formatter</li>
<li>GitHub Pull Requests and Issues</li>
<li>gitignore</li>
<li>GitLens — Git supercharged</li>
<li>Goto definition alias</li>
<li>Highlight Matching Tag</li>
<li>HTML CSS Support</li>
<li>htmltagwrap</li>
<li>i18n Ally</li>
<li>Image preview</li>
<li>indent-rainbow</li>
<li>IntelliCode</li>
<li>IntelliCode API Usage Examples</li>
<li>javascript console utils</li>
<li>JSON to TS</li>
<li>LeetCode</li>
<li>Live Server</li>
<li>Markdown Preview Enhanced</li>
<li>MDX</li>
<li>Node JSON Autocomplete</li>
<li>npm Intellisense</li>
<li>Path Intellisense</li>
<li>Polacode</li>
<li>Prettier - Code formatter</li>
<li>Preview on Web Server</li>
<li>pug (jade) formatter</li>
<li>Pylance</li>
<li>Python</li>
<li>Random Everything</li>
<li>React code snippets</li>
<li>React Style Helper</li>
<li>REST Client</li>
<li>SCSS Formatter</li>
<li>Simple React Snippets</li>
<li>Sort JSON objects</li>
<li>Sort package.json</li>
<li>Sort Typescript Imports</li>
<li>stylus</li>
<li>SVG</li>
<li>Svg Preview</li>
<li>SVG Viewer</li>
<li>Tabnine AI Autocomplete for Javascript, Python, Typescript, PHP, Go, Java, Ruby &amp; more</li>
<li>Tailwind CSS IntelliSense</li>
<li>Tailwind CSS Transpiler</li>
<li>Tailwind Snippets</li>
<li>Template String Converter</li>
<li>TODO Highlight</li>
<li>Turbo Console Log</li>
<li>TypeScript Vue Plugin (Volar)</li>
<li>UnoCSS</li>
<li>Vitesse Theme</li>
<li>vscode convert utils</li>
<li>Vue</li>
<li>Vue 3 Snippets</li>
<li>Vue Language Features (Volar)</li>
<li>Where Am I?</li>
<li>XML</li>
<li>XML Tools</li>
</ul>
</details>
<h2 id="实用教程网站" tabindex="-1">实用教程网站 <a class="header-anchor" href="#实用教程网站" aria-label="Permalink to &quot;实用教程网站&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=tutorialNav /><h2 id="面试类" tabindex="-1">面试类 <a class="header-anchor" href="#面试类" aria-label="Permalink to &quot;面试类&quot;">&ZeroWidthSpace;</a></h2>
<NavCard :navData=interviewNav /><h2 id="acm" tabindex="-1">ACM <a class="header-anchor" href="#acm" aria-label="Permalink to &quot;ACM&quot;">&ZeroWidthSpace;</a></h2>
<details class="details custom-block"><summary>ACM 刷题计划</summary>
<blockquote>
<p>acm 选手应该 dddd</p>
</blockquote>
<ul>
<li><a href="https://vjudge.net/article/371" target="_blank" rel="noreferrer">kuangbin 专题题目一览</a></li>
<li><a href="https://vjudge.net/contest/355775#panel-problems" target="_blank" rel="noreferrer">【两个月刷题计划】专题一 简单搜索</a></li>
<li><a href="https://vjudge.net/contest/355780#overview" target="_blank" rel="noreferrer">【两个月刷题计划】专题二 搜索进阶</a></li>
<li><a href="https://vjudge.net/contest/355997" target="_blank" rel="noreferrer">【两个月刷题计划】专题三 Dancing Links 舞蹈链</a></li>
<li><a href="https://vjudge.net/contest/355998" target="_blank" rel="noreferrer">【两个月刷题计划】专题四 最短路练习</a></li>
<li><a href="https://vjudge.net/contest/356000#overview" target="_blank" rel="noreferrer">【两个月刷题计划】专题五 并查集</a></li>
<li><a href="https://vjudge.net/contest/356001" target="_blank" rel="noreferrer">【两个月刷题计划】专题六 最小生成树</a></li>
<li><a href="https://vjudge.net/contest/356002" target="_blank" rel="noreferrer">【两个月刷题计划】专题七 线段树</a></li>
<li><a href="https://vjudge.net/contest/356003" target="_blank" rel="noreferrer">【两个月刷题计划】专题八 生成树</a></li>
<li><a href="https://vjudge.net/contest/356004" target="_blank" rel="noreferrer">【两个月刷题计划】 专题九 连通图</a></li>
<li><a href="https://vjudge.net/contest/356005" target="_blank" rel="noreferrer">【两个月刷题计划】专题十 匹配问题</a></li>
<li><a href="https://vjudge.net/contest/356006" target="_blank" rel="noreferrer">【两个月刷题计划】专题十一 网络流</a></li>
<li><a href="https://vjudge.net/contest/356007" target="_blank" rel="noreferrer">【两个月刷题计划】专题十二 基础 DP1</a></li>
<li><a href="https://vjudge.net/contest/356009" target="_blank" rel="noreferrer">【两个月刷题计划】专题十三 基础计算几何</a></li>
<li><a href="https://vjudge.net/contest/356011" target="_blank" rel="noreferrer">【两个月刷题计划】专题十四 数论基础</a></li>
<li><a href="https://vjudge.net/contest/356012" target="_blank" rel="noreferrer">【两个月刷题计划】专题十五 数位 DP</a></li>
<li><a href="https://vjudge.net/contest/356014" target="_blank" rel="noreferrer">【两个月刷题计划】 专题十六 KMP &amp; 扩展 KMP &amp; Manacher</a></li>
<li><a href="https://vjudge.net/contest/356015" target="_blank" rel="noreferrer">【两个月刷题计划】专题十七 AC 自动机</a></li>
<li><a href="https://vjudge.net/contest/356017" target="_blank" rel="noreferrer">【两个月刷题计划】专题十八 后缀数组</a></li>
<li><a href="https://vjudge.net/contest/356019" target="_blank" rel="noreferrer">【两个月刷题计划】专题十九 矩阵</a></li>
<li><a href="https://vjudge.net/contest/356020" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十 斜率 DP</a></li>
<li><a href="https://vjudge.net/contest/356024" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十一 概率&amp;期望</a></li>
<li><a href="https://vjudge.net/contest/356025" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十二 区间 DP</a></li>
<li><a href="https://vjudge.net/contest/356026" target="_blank" rel="noreferrer">【两个月刷题计划】专题二十三 计算几何之半平面交</a></li>
</ul>
</details>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/flow/</link>
            <guid>https://mobius.cool/flow/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<ul>
<li><a href="/flow/life/2020end.html">2020年总结</a></li>
</ul>
]]></description>
            <content:encoded><![CDATA[<ul>
<li><a href="/flow/life/2020end.html">2020年总结</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/flow/life/2020end.html</link>
            <guid>https://mobius.cool/flow/life/2020end.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h3 id="_2020年-珍惜曾经拥有-砥砺前行" tabindex="-1">2020年，珍惜曾经拥有，砥砺前行 <a class="header-anchor" href="#_2020年-珍惜曾经拥有-砥砺前行" aria-label="Permalink to &quot;2020年，珍惜曾经拥有，砥砺前行&quot;">&ZeroWidthSpace;</a></h3>
<p>2020年是不平凡的一年，年初的疫情，持续近半年才逐渐恢复。通过疫情，见证了中华人民的伟大，一个民族可以屹立几千年不是没有道理的。多难兴邦，经历过今年的磨练，我想未来会更好，祝祖国繁荣昌盛。</p>
<p>疫情期间，国内外都发生了很多感人的事情，在武汉这座英雄的城市，记录了太多的感动，致敬全国医护工作者在没有硝烟的战场救死扶伤，奉献自己。地球的另一端，意大利疫情期间，有一家人，为了让隔离在家的市民消除孤独和阴郁。罗马的詹卢卡和法比亚夫妇发起了“居家电影院”活动。每晚十点他们都会用投影仪朝着对面建筑外墙投放电影，希望能借此唤醒人们一起看电影的美好回忆。突然让我想起了意大利电影《天堂电影院》里面的一个场景：也是把电影放映机投射到外墙中，让外面的人欣赏电影。意大利诞生过很多优秀电影：《罗马假日》、《美丽人生》、《西西里的美丽传说》、《天堂电影院》、《灿烂人生》、《托斯卡纳艳阳下》。</p>
<p>2020，我看了一些电影，分享给大家：</p>
<p>继2019年最火的《牧马人》里面的“老许，你要老婆不要，只要你开金口，我等会给你送过来......”，我又看了谢晋导演的《芙蓉镇》和《高山上的花环》，看过这三部时代三部曲之后，我觉得这些作品对于那个时代人和物的思考是及其深刻的，有些东西甚至是跨时代的。</p>
<p>重温了童年时期一部经典武侠电影——《双旗镇刀客》，自古英雄出少年，漫天黄沙，手起刀落，一剑封喉。一部电影，描述了一个独特的武侠世界。另一部是《盗马贼》。</p>
<p>《金刚》| 记得初中的时候，流行MP4，某个周末，放假，我姐推荐了一部电影《金刚》(2005年)，看完之后，印象极其深刻，整部电影节奏紧凑，无尿点。也让我见证了电影了那个勇猛无敌的金刚，为了找寻女主，站在美国最高楼上打飞机的故事。时隔15年再次重温，依然震撼，是我心目中最好的一个版本的《金刚》。</p>
<p>《地久天长》影片讲述两个家庭因为一次意外而生缝隙，甚至其中一家由北方远走遥远的南方，相隔三十年后再度聚首的故事，该片主演王景春、咏梅包揽第69届柏林国际电影节最佳男演员银熊奖和最佳女演员银熊奖。</p>
<p>《丹麦女孩》这部电影是我姐姐推荐给我看的，故事取材自上世纪20年代的真人真事。主人公是世界上最早有记录的变性人之一、充满传奇色彩的丹麦画家莉莉·艾尔比，他的妻子格尔达也是一位画家。一次偶然机会，沉睡在主人公内心的女性人格莉莉被唤醒，他开始厌恶自己作为男性的身体，也渐渐发现莉莉不但是艺术存在，更是真正的自己，两人的生活也随之发生了翻天覆地的变化。最后莉莉决定做史无前例的变性手术，但做完手术后的几天内就因为排异反应去世了。小雀斑在电影里面的演技精湛。女性观众可能会对这部电影更有感触，那种追求内心自我意识的勇气是令人敬佩的。</p>
<p>《推拿》这部电影导演是娄烨。记得有一次徐峥在一次采访中说，他最想合作的导演就是娄烨，觉得娄烨的电影特别高级。我看完这部电影之后，觉得确实高级。从盲人推拿的视角，刻画了盲人群体的人生百态。娄烨没有选择从正常人群体，而是站在盲人群体感叹了这个操蛋的人世间。就好比一般人画画都是白纸彩笔，娄烨偏偏用黑纸去作画。秦昊作为娄烨电影的御用男演员，也是实力派。今年火爆的网络短剧《隐秘的角落》里面的台词“我们一起去爬山.....我还有机会吗？”也是来自秦昊。</p>
<p>《放牛班的春天》|</p>
<p>《美丽人生》|</p>
<p>《天堂电影院》|</p>
<p>《燃情岁月》</p>
<p>《大话西游》</p>
<p>《美丽心灵》</p>
<p>《海蒂和爷爷》| 该片改编自约翰娜·斯比丽著同名长篇小说，讲述天真可爱的小姑娘海蒂被姨母送到阿尔卑斯山上与脾气古怪的爷爷同住，她用自己的真诚善良感动和帮助周围的人的故事。等我有了女儿，我一定会带她看这部电影，人与自然的和谐，人与人之间的善良，人性最纯粹的品质，我觉得这部电影里面的东西，是教育孩子最好的素材。愿天下每一个孩子都像海蒂一样，纯洁善良，不被世俗的污浊所侵蚀。</p>
<p>《喊山》</p>
<p>《极限特工》</p>
<p>《宗次郎的夏天》</p>
<p>《我们的父辈》该剧以第二次世界大战为背景，讲述了5个20岁左右的德国年轻人在二战中的命运起伏。这部德国人制作的迷你剧，深刻反思了德国发起的二战。战争没有赢家，任何卷入战争国家的人民都是受害者。通过五个青梅竹马的德国年轻人参战前后命运的转折的对比，深刻揭露了战争的残酷。1970年12月7日，西德总理维利·勃兰特在华沙犹太隔离区起义纪念碑前的华沙之跪彰显了德国人的理性以及对战争反思的诚意。我觉得这部剧最牛逼的还是在于剧名叫做《我们的父辈》而不是叫那一代德国人之类的名字。换句话就是说：就算是亲老子犯错，也得检举反思道歉。同时二战发动者的日本，真的是汗颜。</p>
<p>《我和我的家乡》</p>
<p>《林正英僵尸集合》有天闲来无事，脑海中飘过了一代宗师林正英打僵尸画面，网上找了一圈，下载了几十部林正英高清电影全集，看了其中的几部。每个80、90后的童年都逃不过电视里面，林道士打僵尸前的一顿极其专业的凶悍操作。致敬一代宗师，即使是几十年前的电影，现在看起来依然趣味无穷，僵尸电影世界的魅力依然无穷。恍然间不禁感慨：</p>
<p>半碗清水照乾坤， 一张灵符命鬼神。</p>
<p>脚踏阴阳八卦步， 手执木剑斩妖魂。</p>
<p>挥泪洒酒英灵地， 道气长存天地人。</p>
<p>红绳糯米今犹在， 不见当年林正英！</p>
<p>《疯狂原始人2》</p>
<p>《纪录片：西南联大》是今年看的一部纪录片，讲述了中国教育史上的“珠穆朗玛峰”的西南联大办学历史，详情可见推文：</p>
<p>《后翼弃兵》该剧改编自沃尔特·特维斯1983年的小说，讲述一位年轻的国际象棋奇才从孤儿院逐渐登上国际舞台的故事。感叹好莱坞编剧的水准，一个国际象棋的题材，硬生生能编出一部高口碑剧。作为女性题材的典范人物剧，刻画人物的成长史极其细腻。我觉得中国影视剧制作背后的资本家，也别把眼光老是聚集在赚钱的翻拍，炒冷饭，保守主义，毫无创新。要鼓励和发掘具有创新并新鲜的题材，中国象棋不就蛮好的吗，对方出一招后翼弃兵，咱们就回一招海底捞月。</p>
<p>《恐怖星球》</p>
<p>《大鱼》</p>
<p>《活死人之地》</p>
<p>《掠食城市》</p>
<p>《中国好歌曲》</p>
<hr>
<p>我的2020年歌单top10是下面的歌：</p>
<p>MELANCHOLY</p>
<p>暧昧</p>
<p>邮差</p>
<p>一千年以前</p>
<p>No Fear In My Heart</p>
<p>Love Is Gone</p>
<p>我是一只鱼</p>
<p>唐人街</p>
<p>Good Time</p>
<p>国王与乞丐</p>
<p>每一首都代表着过去一年，不同时间段的心境，可能在夜晚，陪我度过，心情可能压抑、惆怅、喜悦、期待、迷茫、怀念........</p>
<hr>
<p>《小妇人》</p>
<p>总感觉自己一直在重温以前的经典电影，可能是因为如今的电影难出经典。</p>
<p>前几天，各大音乐平台都发布了用户的年度音乐报告。</p>
<p>最早写公众号的一个初衷，内心就有这么一种价值观：电影音乐是最廉价的艺术品，当我们一无所有的时候，它们会依然陪伴着我们，好的电影给人以人生的启迪，就好比阅读一本好书，读完可能会逐渐模糊，但会潜移默化的影响着我们，突然某一天，会产生共鸣，恍然大悟。好的音乐会给人以心灵的慰藉，人生的每一个阶段，都会有那么一首歌，几首歌，某几段旋律，契合着彼时彼刻内心的情愫。当蓦然回首，发现记忆深处已经留下烙印。</p>
<p>2020对于我，也是不平凡的一年。人生中最重要的一个人，我敬爱的奶奶在年初离开了人世。但我觉得这只是一种分别，因为奶奶会一直存在我的心灵深处，指引我向前。以前一直害怕奶奶会离开我，每次一想，都会伤心难过。直到看了《寻梦环游记》，我才明白了一个道理，忽然间明白了，释怀了一个人生困惑。因为真正的死亡是世界上没有一个人记得失去的人(<strong>The real death is that no one in the world remembers you.</strong>) ，只要有人记着，便不会消亡。</p>
<p>感谢一直陪伴我的家人们，特别是我的未婚妻，感恩家人朋友，总之，家庭是最重要的。即将而立之年，感悟到人生不易，但依然需要乐观前行，为了家人，心怀责任，须负担前行。活在当下社会，很多年轻人会感觉到压力很大，感慨生活艰难，但我们依然要乐观前行，因为没有其他更好的选择。800多年前，三十二岁的岳飞也曾感慨：“三十功名尘与土，八千里路云和月”。当回首往事的时候，不因虚度年华而悔恨，也不因碌碌无为而羞耻。学习工作，做人做事。问心无愧，对得起自己，对得起应该对得起的人即可。这世界没有末路，你我他都不曾孤独。愿每个人未来都可以身体健康，因为没有任何事情比健康都重要，其次就是人生如意。</p>
]]></description>
            <content:encoded><![CDATA[<h3 id="_2020年-珍惜曾经拥有-砥砺前行" tabindex="-1">2020年，珍惜曾经拥有，砥砺前行 <a class="header-anchor" href="#_2020年-珍惜曾经拥有-砥砺前行" aria-label="Permalink to &quot;2020年，珍惜曾经拥有，砥砺前行&quot;">&ZeroWidthSpace;</a></h3>
<p>2020年是不平凡的一年，年初的疫情，持续近半年才逐渐恢复。通过疫情，见证了中华人民的伟大，一个民族可以屹立几千年不是没有道理的。多难兴邦，经历过今年的磨练，我想未来会更好，祝祖国繁荣昌盛。</p>
<p>疫情期间，国内外都发生了很多感人的事情，在武汉这座英雄的城市，记录了太多的感动，致敬全国医护工作者在没有硝烟的战场救死扶伤，奉献自己。地球的另一端，意大利疫情期间，有一家人，为了让隔离在家的市民消除孤独和阴郁。罗马的詹卢卡和法比亚夫妇发起了“居家电影院”活动。每晚十点他们都会用投影仪朝着对面建筑外墙投放电影，希望能借此唤醒人们一起看电影的美好回忆。突然让我想起了意大利电影《天堂电影院》里面的一个场景：也是把电影放映机投射到外墙中，让外面的人欣赏电影。意大利诞生过很多优秀电影：《罗马假日》、《美丽人生》、《西西里的美丽传说》、《天堂电影院》、《灿烂人生》、《托斯卡纳艳阳下》。</p>
<p>2020，我看了一些电影，分享给大家：</p>
<p>继2019年最火的《牧马人》里面的“老许，你要老婆不要，只要你开金口，我等会给你送过来......”，我又看了谢晋导演的《芙蓉镇》和《高山上的花环》，看过这三部时代三部曲之后，我觉得这些作品对于那个时代人和物的思考是及其深刻的，有些东西甚至是跨时代的。</p>
<p>重温了童年时期一部经典武侠电影——《双旗镇刀客》，自古英雄出少年，漫天黄沙，手起刀落，一剑封喉。一部电影，描述了一个独特的武侠世界。另一部是《盗马贼》。</p>
<p>《金刚》| 记得初中的时候，流行MP4，某个周末，放假，我姐推荐了一部电影《金刚》(2005年)，看完之后，印象极其深刻，整部电影节奏紧凑，无尿点。也让我见证了电影了那个勇猛无敌的金刚，为了找寻女主，站在美国最高楼上打飞机的故事。时隔15年再次重温，依然震撼，是我心目中最好的一个版本的《金刚》。</p>
<p>《地久天长》影片讲述两个家庭因为一次意外而生缝隙，甚至其中一家由北方远走遥远的南方，相隔三十年后再度聚首的故事，该片主演王景春、咏梅包揽第69届柏林国际电影节最佳男演员银熊奖和最佳女演员银熊奖。</p>
<p>《丹麦女孩》这部电影是我姐姐推荐给我看的，故事取材自上世纪20年代的真人真事。主人公是世界上最早有记录的变性人之一、充满传奇色彩的丹麦画家莉莉·艾尔比，他的妻子格尔达也是一位画家。一次偶然机会，沉睡在主人公内心的女性人格莉莉被唤醒，他开始厌恶自己作为男性的身体，也渐渐发现莉莉不但是艺术存在，更是真正的自己，两人的生活也随之发生了翻天覆地的变化。最后莉莉决定做史无前例的变性手术，但做完手术后的几天内就因为排异反应去世了。小雀斑在电影里面的演技精湛。女性观众可能会对这部电影更有感触，那种追求内心自我意识的勇气是令人敬佩的。</p>
<p>《推拿》这部电影导演是娄烨。记得有一次徐峥在一次采访中说，他最想合作的导演就是娄烨，觉得娄烨的电影特别高级。我看完这部电影之后，觉得确实高级。从盲人推拿的视角，刻画了盲人群体的人生百态。娄烨没有选择从正常人群体，而是站在盲人群体感叹了这个操蛋的人世间。就好比一般人画画都是白纸彩笔，娄烨偏偏用黑纸去作画。秦昊作为娄烨电影的御用男演员，也是实力派。今年火爆的网络短剧《隐秘的角落》里面的台词“我们一起去爬山.....我还有机会吗？”也是来自秦昊。</p>
<p>《放牛班的春天》|</p>
<p>《美丽人生》|</p>
<p>《天堂电影院》|</p>
<p>《燃情岁月》</p>
<p>《大话西游》</p>
<p>《美丽心灵》</p>
<p>《海蒂和爷爷》| 该片改编自约翰娜·斯比丽著同名长篇小说，讲述天真可爱的小姑娘海蒂被姨母送到阿尔卑斯山上与脾气古怪的爷爷同住，她用自己的真诚善良感动和帮助周围的人的故事。等我有了女儿，我一定会带她看这部电影，人与自然的和谐，人与人之间的善良，人性最纯粹的品质，我觉得这部电影里面的东西，是教育孩子最好的素材。愿天下每一个孩子都像海蒂一样，纯洁善良，不被世俗的污浊所侵蚀。</p>
<p>《喊山》</p>
<p>《极限特工》</p>
<p>《宗次郎的夏天》</p>
<p>《我们的父辈》该剧以第二次世界大战为背景，讲述了5个20岁左右的德国年轻人在二战中的命运起伏。这部德国人制作的迷你剧，深刻反思了德国发起的二战。战争没有赢家，任何卷入战争国家的人民都是受害者。通过五个青梅竹马的德国年轻人参战前后命运的转折的对比，深刻揭露了战争的残酷。1970年12月7日，西德总理维利·勃兰特在华沙犹太隔离区起义纪念碑前的华沙之跪彰显了德国人的理性以及对战争反思的诚意。我觉得这部剧最牛逼的还是在于剧名叫做《我们的父辈》而不是叫那一代德国人之类的名字。换句话就是说：就算是亲老子犯错，也得检举反思道歉。同时二战发动者的日本，真的是汗颜。</p>
<p>《我和我的家乡》</p>
<p>《林正英僵尸集合》有天闲来无事，脑海中飘过了一代宗师林正英打僵尸画面，网上找了一圈，下载了几十部林正英高清电影全集，看了其中的几部。每个80、90后的童年都逃不过电视里面，林道士打僵尸前的一顿极其专业的凶悍操作。致敬一代宗师，即使是几十年前的电影，现在看起来依然趣味无穷，僵尸电影世界的魅力依然无穷。恍然间不禁感慨：</p>
<p>半碗清水照乾坤， 一张灵符命鬼神。</p>
<p>脚踏阴阳八卦步， 手执木剑斩妖魂。</p>
<p>挥泪洒酒英灵地， 道气长存天地人。</p>
<p>红绳糯米今犹在， 不见当年林正英！</p>
<p>《疯狂原始人2》</p>
<p>《纪录片：西南联大》是今年看的一部纪录片，讲述了中国教育史上的“珠穆朗玛峰”的西南联大办学历史，详情可见推文：</p>
<p>《后翼弃兵》该剧改编自沃尔特·特维斯1983年的小说，讲述一位年轻的国际象棋奇才从孤儿院逐渐登上国际舞台的故事。感叹好莱坞编剧的水准，一个国际象棋的题材，硬生生能编出一部高口碑剧。作为女性题材的典范人物剧，刻画人物的成长史极其细腻。我觉得中国影视剧制作背后的资本家，也别把眼光老是聚集在赚钱的翻拍，炒冷饭，保守主义，毫无创新。要鼓励和发掘具有创新并新鲜的题材，中国象棋不就蛮好的吗，对方出一招后翼弃兵，咱们就回一招海底捞月。</p>
<p>《恐怖星球》</p>
<p>《大鱼》</p>
<p>《活死人之地》</p>
<p>《掠食城市》</p>
<p>《中国好歌曲》</p>
<hr>
<p>我的2020年歌单top10是下面的歌：</p>
<p>MELANCHOLY</p>
<p>暧昧</p>
<p>邮差</p>
<p>一千年以前</p>
<p>No Fear In My Heart</p>
<p>Love Is Gone</p>
<p>我是一只鱼</p>
<p>唐人街</p>
<p>Good Time</p>
<p>国王与乞丐</p>
<p>每一首都代表着过去一年，不同时间段的心境，可能在夜晚，陪我度过，心情可能压抑、惆怅、喜悦、期待、迷茫、怀念........</p>
<hr>
<p>《小妇人》</p>
<p>总感觉自己一直在重温以前的经典电影，可能是因为如今的电影难出经典。</p>
<p>前几天，各大音乐平台都发布了用户的年度音乐报告。</p>
<p>最早写公众号的一个初衷，内心就有这么一种价值观：电影音乐是最廉价的艺术品，当我们一无所有的时候，它们会依然陪伴着我们，好的电影给人以人生的启迪，就好比阅读一本好书，读完可能会逐渐模糊，但会潜移默化的影响着我们，突然某一天，会产生共鸣，恍然大悟。好的音乐会给人以心灵的慰藉，人生的每一个阶段，都会有那么一首歌，几首歌，某几段旋律，契合着彼时彼刻内心的情愫。当蓦然回首，发现记忆深处已经留下烙印。</p>
<p>2020对于我，也是不平凡的一年。人生中最重要的一个人，我敬爱的奶奶在年初离开了人世。但我觉得这只是一种分别，因为奶奶会一直存在我的心灵深处，指引我向前。以前一直害怕奶奶会离开我，每次一想，都会伤心难过。直到看了《寻梦环游记》，我才明白了一个道理，忽然间明白了，释怀了一个人生困惑。因为真正的死亡是世界上没有一个人记得失去的人(<strong>The real death is that no one in the world remembers you.</strong>) ，只要有人记着，便不会消亡。</p>
<p>感谢一直陪伴我的家人们，特别是我的未婚妻，感恩家人朋友，总之，家庭是最重要的。即将而立之年，感悟到人生不易，但依然需要乐观前行，为了家人，心怀责任，须负担前行。活在当下社会，很多年轻人会感觉到压力很大，感慨生活艰难，但我们依然要乐观前行，因为没有其他更好的选择。800多年前，三十二岁的岳飞也曾感慨：“三十功名尘与土，八千里路云和月”。当回首往事的时候，不因虚度年华而悔恨，也不因碌碌无为而羞耻。学习工作，做人做事。问心无愧，对得起自己，对得起应该对得起的人即可。这世界没有末路，你我他都不曾孤独。愿每个人未来都可以身体健康，因为没有任何事情比健康都重要，其次就是人生如意。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/globalvision/</link>
            <guid>https://mobius.cool/globalvision/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>全球视野</p>
]]></description>
            <content:encoded><![CDATA[<p>全球视野</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/goodthings/</link>
            <guid>https://mobius.cool/goodthings/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>好物</p>
]]></description>
            <content:encoded><![CDATA[<p>好物</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[欢迎来到小狮子前端 ]]></title>
            <link>https://mobius.cool/guide.html</link>
            <guid>https://mobius.cool/guide.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="欢迎来到小狮子前端" tabindex="-1">欢迎来到小狮子前端 <a class="header-anchor" href="#欢迎来到小狮子前端" aria-label="Permalink to &quot;欢迎来到小狮子前端&quot;">&ZeroWidthSpace;</a></h1>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>由于文档内容还在不断更新以及建设中，因此会存在文章路径更改的情况，所以如果常逛的小伙伴，建议收藏一下我的网站：<a href="https://mobius.cool/" target="_blank" rel="noreferrer">chodocs.cn</a>，不迷路。</p>
</div>
<p>左上角有搜索功能，你有前端方面的问题，不妨可以搜索试一试。</p>
<p>ChoDocs 的内容是免费开源的，但也希望各位遵循开源精神，不进行商业行为。</p>
<p>如果你觉得内容不错的话，不妨给我们 <strong>star</strong> 支持一下，让更多的人看到这个优质内容网站。</p>
<blockquote>
<p>Give a ⭐️ if this project helped you!</p>
</blockquote>
<p><a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">https://github.com/chodocs/chodocs</a></p>
<div class="info custom-block"><p class="custom-block-title">附：</p>
<ul>
<li>
<p><a href="/chodocs.html">关于 ChoDocs</a></p>
</li>
<li>
<p><a href="/zsxq.html">影音艺</a></p>
</li>
</ul>
</div>
<h2 id="📓-内容" tabindex="-1">📓 内容 <a class="header-anchor" href="#📓-内容" aria-label="Permalink to &quot;📓 内容&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>📋 面试专栏: 海量前端面试问题解答，一站式阅读体验。</li>
<li>💬 编程学习: 同步 B 站视频，文档用于巩固知识。</li>
<li>📓 前端算法: 不再畏惧面试算法，提供刷题路线。</li>
<li>🚚 备忘录: 将日常工作中遇到的问题做一份备忘录，方便查阅。</li>
<li>💭 影音艺: 打造专业的前端技术氛围社群，低调务实。</li>
<li>🔧 编程工具: 归纳一些编程相关工具与网站，提高效率。</li>
<li>🌱 青葱岁月: 程序人生时光机，记录所有美好的时光。</li>
<li>🎉 技术视野: 跟随前沿技术，深度和广度学习。</li>
<li>🚩 拥抱开源: 文档开源，版权 ChoDocs 所有，禁商业行为。</li>
</ul>
<blockquote>
<p>学如逆水行舟，不进则退。</p>
</blockquote>
<h2 id="🏠-站点" tabindex="-1">🏠 站点 <a class="header-anchor" href="#🏠-站点" aria-label="Permalink to &quot;🏠 站点&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>🚀 基于 VitePress 搭建，快速响应</li>
<li>⚡ 拓展 Vite 生态，集成了 Vite PWA</li>
<li>📏 添加 eslint 与 git-hooks，自动格式化与修复</li>
<li>🦾 使用 TypeScript，保证类型安全</li>
<li>📦 编写自定义插件与组件，内容丰富多样</li>
<li>🌈 公开贡献者头像，共建优质内容</li>
<li>🌏 建立优秀学习氛围的影音艺</li>
<li>📡 生成 Feed，内容可订阅更新</li>
<li>📘 注重内容排版，提供好的阅读体验</li>
<li>🏆 打造一站式高质量的专业前端内容</li>
<li>💡 学习思考总结与学习动态公开分享</li>
<li>🍭 设计资源导航，分享收藏的实用网站</li>
</ul>
<h2 id="免责声明" tabindex="-1">免责声明 <a class="header-anchor" href="#免责声明" aria-label="Permalink to &quot;免责声明&quot;">&ZeroWidthSpace;</a></h2>
<p>本站以<strong>分享互联网经验、学习知识为目的</strong>，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由 CSDN、掘金、公众号等其他平台搬迁过来，仅供学习交流之用，不参与商业用途。</p>
<p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”<strong>均需要提供相关证明，否则不予处理</strong>。</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="欢迎来到小狮子前端" tabindex="-1">欢迎来到小狮子前端 <a class="header-anchor" href="#欢迎来到小狮子前端" aria-label="Permalink to &quot;欢迎来到小狮子前端&quot;">&ZeroWidthSpace;</a></h1>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>由于文档内容还在不断更新以及建设中，因此会存在文章路径更改的情况，所以如果常逛的小伙伴，建议收藏一下我的网站：<a href="https://mobius.cool/" target="_blank" rel="noreferrer">chodocs.cn</a>，不迷路。</p>
</div>
<p>左上角有搜索功能，你有前端方面的问题，不妨可以搜索试一试。</p>
<p>ChoDocs 的内容是免费开源的，但也希望各位遵循开源精神，不进行商业行为。</p>
<p>如果你觉得内容不错的话，不妨给我们 <strong>star</strong> 支持一下，让更多的人看到这个优质内容网站。</p>
<blockquote>
<p>Give a ⭐️ if this project helped you!</p>
</blockquote>
<p><a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">https://github.com/chodocs/chodocs</a></p>
<div class="info custom-block"><p class="custom-block-title">附：</p>
<ul>
<li>
<p><a href="/chodocs.html">关于 ChoDocs</a></p>
</li>
<li>
<p><a href="/zsxq.html">影音艺</a></p>
</li>
</ul>
</div>
<h2 id="📓-内容" tabindex="-1">📓 内容 <a class="header-anchor" href="#📓-内容" aria-label="Permalink to &quot;📓 内容&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>📋 面试专栏: 海量前端面试问题解答，一站式阅读体验。</li>
<li>💬 编程学习: 同步 B 站视频，文档用于巩固知识。</li>
<li>📓 前端算法: 不再畏惧面试算法，提供刷题路线。</li>
<li>🚚 备忘录: 将日常工作中遇到的问题做一份备忘录，方便查阅。</li>
<li>💭 影音艺: 打造专业的前端技术氛围社群，低调务实。</li>
<li>🔧 编程工具: 归纳一些编程相关工具与网站，提高效率。</li>
<li>🌱 青葱岁月: 程序人生时光机，记录所有美好的时光。</li>
<li>🎉 技术视野: 跟随前沿技术，深度和广度学习。</li>
<li>🚩 拥抱开源: 文档开源，版权 ChoDocs 所有，禁商业行为。</li>
</ul>
<blockquote>
<p>学如逆水行舟，不进则退。</p>
</blockquote>
<h2 id="🏠-站点" tabindex="-1">🏠 站点 <a class="header-anchor" href="#🏠-站点" aria-label="Permalink to &quot;🏠 站点&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>🚀 基于 VitePress 搭建，快速响应</li>
<li>⚡ 拓展 Vite 生态，集成了 Vite PWA</li>
<li>📏 添加 eslint 与 git-hooks，自动格式化与修复</li>
<li>🦾 使用 TypeScript，保证类型安全</li>
<li>📦 编写自定义插件与组件，内容丰富多样</li>
<li>🌈 公开贡献者头像，共建优质内容</li>
<li>🌏 建立优秀学习氛围的影音艺</li>
<li>📡 生成 Feed，内容可订阅更新</li>
<li>📘 注重内容排版，提供好的阅读体验</li>
<li>🏆 打造一站式高质量的专业前端内容</li>
<li>💡 学习思考总结与学习动态公开分享</li>
<li>🍭 设计资源导航，分享收藏的实用网站</li>
</ul>
<h2 id="免责声明" tabindex="-1">免责声明 <a class="header-anchor" href="#免责声明" aria-label="Permalink to &quot;免责声明&quot;">&ZeroWidthSpace;</a></h2>
<p>本站以<strong>分享互联网经验、学习知识为目的</strong>，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由 CSDN、掘金、公众号等其他平台搬迁过来，仅供学习交流之用，不参与商业用途。</p>
<p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”<strong>均需要提供相关证明，否则不予处理</strong>。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mobius]]></title>
            <link>https://mobius.cool/</link>
            <guid>https://mobius.cool/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<DataPanel/><VPTeamPage>
  <VPTeamPageTitle>
    <template #title>
      核心成员介绍
    </template>
  </VPTeamPageTitle>
  <VPTeamMembers
    :members="members"
  />
</VPTeamPage>
<HomeContributors/>]]></description>
            <content:encoded><![CDATA[<DataPanel/><VPTeamPage>
  <VPTeamPageTitle>
    <template #title>
      核心成员介绍
    </template>
  </VPTeamPageTitle>
  <VPTeamMembers
    :members="members"
  />
</VPTeamPage>
<HomeContributors/>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[常用一些 Git 命令 ]]></title>
            <link>https://mobius.cool/memo/git-command/</link>
            <guid>https://mobius.cool/memo/git-command/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="常用一些-git-命令" tabindex="-1">常用一些 Git 命令 <a class="header-anchor" href="#常用一些-git-命令" aria-label="Permalink to &quot;常用一些 Git 命令&quot;">&ZeroWidthSpace;</a></h1>
<VideoLink bvId="BV1ZP4y1Q76V">程序员进厂前必知必会 Git 技巧 | commit 提交规范 | rebase、amend 操作 B 站视频传送门</VideoLink><p>推荐 mac 用户安装 oh-my-zsh，在这备忘一些常用的命令，以及一些简写方式。</p>
<blockquote>
<p>以下参考自 <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git" target="_blank" rel="noreferrer">ohmyzsh git</a></p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">简写（Alias）</th>
<th style="text-align:center">对应命令</th>
<th style="text-align:center">详情</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">gaa</td>
<td style="text-align:center">git add --all</td>
<td style="text-align:center">添加当前项目所有文件修改、增删的文件到缓存区</td>
</tr>
<tr>
<td style="text-align:center">gb</td>
<td style="text-align:center">git branch</td>
<td style="text-align:center">查看分支列表</td>
</tr>
<tr>
<td style="text-align:center">gc!</td>
<td style="text-align:center">git commit -v --amend</td>
<td style="text-align:center">修正上次提交，像 reabase 一样操作，每次提交执行一次，覆盖上一次提交，即可保证只有一个 commit</td>
</tr>
<tr>
<td style="text-align:center">gcb</td>
<td style="text-align:center">git checkout -b</td>
<td style="text-align:center">基于当前分支切换新的分支</td>
</tr>
<tr>
<td style="text-align:center">gcp</td>
<td style="text-align:center">git cherry-pick</td>
<td style="text-align:center">根据 commitId 拿某一次的提交</td>
</tr>
<tr>
<td style="text-align:center">gbD</td>
<td style="text-align:center">git branch -D</td>
<td style="text-align:center">删除分支</td>
</tr>
<tr>
<td style="text-align:center">glods</td>
<td style="text-align:center">git log --graph --date=short</td>
<td style="text-align:center">查看提交记录</td>
</tr>
<tr>
<td style="text-align:center">gpf</td>
<td style="text-align:center">git push --force</td>
<td style="text-align:center">强制推送，一般用于 reabase 之后</td>
</tr>
</tbody>
</table>
<h2 id="删除其它分支" tabindex="-1">删除其它分支 <a class="header-anchor" href="#删除其它分支" aria-label="Permalink to &quot;删除其它分支&quot;">&ZeroWidthSpace;</a></h2>
<p>这个是我经常会用到的，因为本地开发多次之后，使用 <code>git branch</code> 之后会发现有很多分支还在，为了保证「干净卫生」，所以就了解一下，可以执行如下命令。</p>
<ul>
<li>增强命令（master）</li>
</ul>
<blockquote>
<p>可以删除除开 master 以外的分支，但类似 <code>mr/master/xxx</code> 这样的带有 master 的删除不了。</p>
</blockquote>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">grep</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-v</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;master&quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">xargs</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-D</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">grep</span><span style="color: #24292E"> </span><span style="color: #005CC5">-v</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;master&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">xargs</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>增强命令（main）</li>
</ul>
<blockquote>
<p>同上。</p>
</blockquote>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">main</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">grep</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-v</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;main&quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">xargs</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-D</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">main</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">grep</span><span style="color: #24292E"> </span><span style="color: #005CC5">-v</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;main&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">xargs</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>增强命令（release）</li>
</ul>
<blockquote>
<p>同上。</p>
</blockquote>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">release</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">grep</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-v</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;release&quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">xargs</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-D</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">release</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">grep</span><span style="color: #24292E"> </span><span style="color: #005CC5">-v</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;release&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">xargs</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="rebase" tabindex="-1">rebase <a class="header-anchor" href="#rebase" aria-label="Permalink to &quot;rebase&quot;">&ZeroWidthSpace;</a></h2>
<p>rebase 命令很强大，<code>git rebase -i HEAD~[num]</code> 和 <code>git pull --rebase</code> 等。</p>
<blockquote>
<p>推荐阅读 <a href="http://jartto.wang/2018/12/11/git-rebase/" target="_blank" rel="noreferrer">彻底搞懂 Git-Rebase</a></p>
</blockquote>
<h2 id="查看完整信息" tabindex="-1">查看完整信息 <a class="header-anchor" href="#查看完整信息" aria-label="Permalink to &quot;查看完整信息&quot;">&ZeroWidthSpace;</a></h2>
<p>谁用谁知道！</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="git-commit-提交规范" tabindex="-1">git commit 提交规范 <a class="header-anchor" href="#git-commit-提交规范" aria-label="Permalink to &quot;git commit 提交规范&quot;">&ZeroWidthSpace;</a></h2>
<p>这里以 coding 工作台为例子，其它代码托管平台可能需要修改一下正则。</p>
<CloudinaryImg publicId='memo/git-regex_klbyot' alt='git-regex'/><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">^(feat</span><span style="color: #F97583">|</span><span style="color: #B392F0">fix</span><span style="color: #F97583">|</span><span style="color: #B392F0">docs</span><span style="color: #F97583">|</span><span style="color: #B392F0">style</span><span style="color: #F97583">|</span><span style="color: #B392F0">refactor</span><span style="color: #F97583">|</span><span style="color: #B392F0">perf</span><span style="color: #F97583">|</span><span style="color: #79B8FF">test</span><span style="color: #F97583">|</span><span style="color: #B392F0">build</span><span style="color: #F97583">|</span><span style="color: #B392F0">revert</span><span style="color: #F97583">|</span><span style="color: #B392F0">merge</span><span style="color: #F97583">|</span><span style="color: #B392F0">chore</span><span style="color: #E1E4E8">)(</span><span style="color: #B392F0">\(.+\</span><span style="color: #E1E4E8">))</span><span style="color: #F97583">?</span><span style="color: #E1E4E8">:</span><span style="color: #79B8FF">\s</span><span style="color: #F97583">+</span><span style="color: #E1E4E8">(</span><span style="color: #79B8FF">.</span><span style="color: #E1E4E8">*)#[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">-9]+</span><span style="color: #79B8FF">\s</span><span style="color: #E1E4E8">+</span><span style="color: #F97583">|</span><span style="color: #B392F0">^(Accept</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Merge</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Request</span><span style="color: #E1E4E8">)</span><span style="color: #79B8FF">\s</span><span style="color: #E1E4E8">+#[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">-9]+:</span><span style="color: #79B8FF">\s</span><span style="color: #F97583">+</span><span style="color: #E1E4E8">(</span><span style="color: #B392F0">\(.+\s+-&gt;\s+.+\</span><span style="color: #E1E4E8">))</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">^(feat</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">fix</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">docs</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">style</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">refactor</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">perf</span><span style="color: #D73A49">|</span><span style="color: #005CC5">test</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">build</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">revert</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">merge</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">chore</span><span style="color: #24292E">)(</span><span style="color: #6F42C1">\(.+\</span><span style="color: #24292E">))</span><span style="color: #D73A49">?</span><span style="color: #24292E">:</span><span style="color: #005CC5">\s</span><span style="color: #D73A49">+</span><span style="color: #24292E">(</span><span style="color: #005CC5">.</span><span style="color: #24292E">*)#[</span><span style="color: #005CC5">0</span><span style="color: #24292E">-9]+</span><span style="color: #005CC5">\s</span><span style="color: #24292E">+</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">^(Accept</span><span style="color: #24292E"> </span><span style="color: #032F62">Merge</span><span style="color: #24292E"> </span><span style="color: #032F62">Request</span><span style="color: #24292E">)</span><span style="color: #005CC5">\s</span><span style="color: #24292E">+#[</span><span style="color: #005CC5">0</span><span style="color: #24292E">-9]+:</span><span style="color: #005CC5">\s</span><span style="color: #D73A49">+</span><span style="color: #24292E">(</span><span style="color: #6F42C1">\(.+\s+-&gt;\s+.+\</span><span style="color: #24292E">))</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="书写工具辅助" tabindex="-1">书写工具辅助 <a class="header-anchor" href="#书写工具辅助" aria-label="Permalink to &quot;书写工具辅助&quot;">&ZeroWidthSpace;</a></h3>
<p>第一种：</p>
<p>全局安装 <code>commitizen</code>，即可使用 <code>git cz</code> 命令取代 <code>git commit</code>，提供交互式选择界面，协助书写。</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-g</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commitizen</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">cz-conventional-changelog</span></span>
<span class="line"><span style="color: #79B8FF">echo</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&#39;{ &quot;path&quot;: &quot;cz-conventional-changelog&quot; }&#39;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">~/.czrc</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #005CC5">-g</span><span style="color: #24292E"> </span><span style="color: #032F62">commitizen</span><span style="color: #24292E"> </span><span style="color: #032F62">cz-conventional-changelog</span></span>
<span class="line"><span style="color: #005CC5">echo</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;{ &quot;path&quot;: &quot;cz-conventional-changelog&quot; }&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #032F62">~/.czrc</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote>
<p>参考阅读 <a href="https://coding.net/help/docs/ci/practice/lint/git-commit.html#install" target="_blank" rel="noreferrer">Commit Message</a></p>
</blockquote>
<p>第二种：</p>
<p>更花哨一点，使用 <a href="https://github.com/streamich/git-cz" target="_blank" rel="noreferrer">git-cz</a></p>
<CloudinaryImg publicId='memo/git-cz_nuarae' alt='git-cz'/><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">npx</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git-cz</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">//</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">or</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-g</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commitizen</span></span>
<span class="line"><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--save-dev</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git-cz</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">npx</span><span style="color: #24292E"> </span><span style="color: #032F62">git-cz</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">//</span><span style="color: #24292E"> </span><span style="color: #032F62">or</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #005CC5">-g</span><span style="color: #24292E"> </span><span style="color: #032F62">commitizen</span></span>
<span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #005CC5">--save-dev</span><span style="color: #24292E"> </span><span style="color: #032F62">git-cz</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="git-stash" tabindex="-1">git stash <a class="header-anchor" href="#git-stash" aria-label="Permalink to &quot;git stash&quot;">&ZeroWidthSpace;</a></h2>
<p>平常需要切换分支，但有时候又不想要立即 commit 上去，于是可以通过 <code>git stash</code> 备份一下，主要的一些命令如下：</p>
<p>备份当前改动</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看备份列表</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">list</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">list</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>恢复备份的改动</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pop</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">pop</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote>
<p>更多内容可参考 <a href="https://www.cnblogs.com/tocy/p/git-stash-reference.html" target="_blank" rel="noreferrer">git-stash 用法小结</a></p>
</blockquote>
]]></description>
            <content:encoded><![CDATA[<h1 id="常用一些-git-命令" tabindex="-1">常用一些 Git 命令 <a class="header-anchor" href="#常用一些-git-命令" aria-label="Permalink to &quot;常用一些 Git 命令&quot;">&ZeroWidthSpace;</a></h1>
<VideoLink bvId="BV1ZP4y1Q76V">程序员进厂前必知必会 Git 技巧 | commit 提交规范 | rebase、amend 操作 B 站视频传送门</VideoLink><p>推荐 mac 用户安装 oh-my-zsh，在这备忘一些常用的命令，以及一些简写方式。</p>
<blockquote>
<p>以下参考自 <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git" target="_blank" rel="noreferrer">ohmyzsh git</a></p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">简写（Alias）</th>
<th style="text-align:center">对应命令</th>
<th style="text-align:center">详情</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">gaa</td>
<td style="text-align:center">git add --all</td>
<td style="text-align:center">添加当前项目所有文件修改、增删的文件到缓存区</td>
</tr>
<tr>
<td style="text-align:center">gb</td>
<td style="text-align:center">git branch</td>
<td style="text-align:center">查看分支列表</td>
</tr>
<tr>
<td style="text-align:center">gc!</td>
<td style="text-align:center">git commit -v --amend</td>
<td style="text-align:center">修正上次提交，像 reabase 一样操作，每次提交执行一次，覆盖上一次提交，即可保证只有一个 commit</td>
</tr>
<tr>
<td style="text-align:center">gcb</td>
<td style="text-align:center">git checkout -b</td>
<td style="text-align:center">基于当前分支切换新的分支</td>
</tr>
<tr>
<td style="text-align:center">gcp</td>
<td style="text-align:center">git cherry-pick</td>
<td style="text-align:center">根据 commitId 拿某一次的提交</td>
</tr>
<tr>
<td style="text-align:center">gbD</td>
<td style="text-align:center">git branch -D</td>
<td style="text-align:center">删除分支</td>
</tr>
<tr>
<td style="text-align:center">glods</td>
<td style="text-align:center">git log --graph --date=short</td>
<td style="text-align:center">查看提交记录</td>
</tr>
<tr>
<td style="text-align:center">gpf</td>
<td style="text-align:center">git push --force</td>
<td style="text-align:center">强制推送，一般用于 reabase 之后</td>
</tr>
</tbody>
</table>
<h2 id="删除其它分支" tabindex="-1">删除其它分支 <a class="header-anchor" href="#删除其它分支" aria-label="Permalink to &quot;删除其它分支&quot;">&ZeroWidthSpace;</a></h2>
<p>这个是我经常会用到的，因为本地开发多次之后，使用 <code>git branch</code> 之后会发现有很多分支还在，为了保证「干净卫生」，所以就了解一下，可以执行如下命令。</p>
<ul>
<li>增强命令（master）</li>
</ul>
<blockquote>
<p>可以删除除开 master 以外的分支，但类似 <code>mr/master/xxx</code> 这样的带有 master 的删除不了。</p>
</blockquote>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">grep</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-v</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;master&quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">xargs</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-D</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">grep</span><span style="color: #24292E"> </span><span style="color: #005CC5">-v</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;master&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">xargs</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>增强命令（main）</li>
</ul>
<blockquote>
<p>同上。</p>
</blockquote>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">main</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">grep</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-v</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;main&quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">xargs</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-D</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">main</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">grep</span><span style="color: #24292E"> </span><span style="color: #005CC5">-v</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;main&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">xargs</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul>
<li>增强命令（release）</li>
</ul>
<blockquote>
<p>同上。</p>
</blockquote>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">release</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">grep</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-v</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;release&quot;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">|</span><span style="color: #E1E4E8"> </span><span style="color: #B392F0">xargs</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-D</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">release</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">grep</span><span style="color: #24292E"> </span><span style="color: #005CC5">-v</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;release&quot;</span><span style="color: #24292E"> </span><span style="color: #D73A49">|</span><span style="color: #24292E"> </span><span style="color: #6F42C1">xargs</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-D</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="rebase" tabindex="-1">rebase <a class="header-anchor" href="#rebase" aria-label="Permalink to &quot;rebase&quot;">&ZeroWidthSpace;</a></h2>
<p>rebase 命令很强大，<code>git rebase -i HEAD~[num]</code> 和 <code>git pull --rebase</code> 等。</p>
<blockquote>
<p>推荐阅读 <a href="http://jartto.wang/2018/12/11/git-rebase/" target="_blank" rel="noreferrer">彻底搞懂 Git-Rebase</a></p>
</blockquote>
<h2 id="查看完整信息" tabindex="-1">查看完整信息 <a class="header-anchor" href="#查看完整信息" aria-label="Permalink to &quot;查看完整信息&quot;">&ZeroWidthSpace;</a></h2>
<p>谁用谁知道！</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="git-commit-提交规范" tabindex="-1">git commit 提交规范 <a class="header-anchor" href="#git-commit-提交规范" aria-label="Permalink to &quot;git commit 提交规范&quot;">&ZeroWidthSpace;</a></h2>
<p>这里以 coding 工作台为例子，其它代码托管平台可能需要修改一下正则。</p>
<CloudinaryImg publicId='memo/git-regex_klbyot' alt='git-regex'/><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">^(feat</span><span style="color: #F97583">|</span><span style="color: #B392F0">fix</span><span style="color: #F97583">|</span><span style="color: #B392F0">docs</span><span style="color: #F97583">|</span><span style="color: #B392F0">style</span><span style="color: #F97583">|</span><span style="color: #B392F0">refactor</span><span style="color: #F97583">|</span><span style="color: #B392F0">perf</span><span style="color: #F97583">|</span><span style="color: #79B8FF">test</span><span style="color: #F97583">|</span><span style="color: #B392F0">build</span><span style="color: #F97583">|</span><span style="color: #B392F0">revert</span><span style="color: #F97583">|</span><span style="color: #B392F0">merge</span><span style="color: #F97583">|</span><span style="color: #B392F0">chore</span><span style="color: #E1E4E8">)(</span><span style="color: #B392F0">\(.+\</span><span style="color: #E1E4E8">))</span><span style="color: #F97583">?</span><span style="color: #E1E4E8">:</span><span style="color: #79B8FF">\s</span><span style="color: #F97583">+</span><span style="color: #E1E4E8">(</span><span style="color: #79B8FF">.</span><span style="color: #E1E4E8">*)#[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">-9]+</span><span style="color: #79B8FF">\s</span><span style="color: #E1E4E8">+</span><span style="color: #F97583">|</span><span style="color: #B392F0">^(Accept</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Merge</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">Request</span><span style="color: #E1E4E8">)</span><span style="color: #79B8FF">\s</span><span style="color: #E1E4E8">+#[</span><span style="color: #79B8FF">0</span><span style="color: #E1E4E8">-9]+:</span><span style="color: #79B8FF">\s</span><span style="color: #F97583">+</span><span style="color: #E1E4E8">(</span><span style="color: #B392F0">\(.+\s+-&gt;\s+.+\</span><span style="color: #E1E4E8">))</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">^(feat</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">fix</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">docs</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">style</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">refactor</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">perf</span><span style="color: #D73A49">|</span><span style="color: #005CC5">test</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">build</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">revert</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">merge</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">chore</span><span style="color: #24292E">)(</span><span style="color: #6F42C1">\(.+\</span><span style="color: #24292E">))</span><span style="color: #D73A49">?</span><span style="color: #24292E">:</span><span style="color: #005CC5">\s</span><span style="color: #D73A49">+</span><span style="color: #24292E">(</span><span style="color: #005CC5">.</span><span style="color: #24292E">*)#[</span><span style="color: #005CC5">0</span><span style="color: #24292E">-9]+</span><span style="color: #005CC5">\s</span><span style="color: #24292E">+</span><span style="color: #D73A49">|</span><span style="color: #6F42C1">^(Accept</span><span style="color: #24292E"> </span><span style="color: #032F62">Merge</span><span style="color: #24292E"> </span><span style="color: #032F62">Request</span><span style="color: #24292E">)</span><span style="color: #005CC5">\s</span><span style="color: #24292E">+#[</span><span style="color: #005CC5">0</span><span style="color: #24292E">-9]+:</span><span style="color: #005CC5">\s</span><span style="color: #D73A49">+</span><span style="color: #24292E">(</span><span style="color: #6F42C1">\(.+\s+-&gt;\s+.+\</span><span style="color: #24292E">))</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="书写工具辅助" tabindex="-1">书写工具辅助 <a class="header-anchor" href="#书写工具辅助" aria-label="Permalink to &quot;书写工具辅助&quot;">&ZeroWidthSpace;</a></h3>
<p>第一种：</p>
<p>全局安装 <code>commitizen</code>，即可使用 <code>git cz</code> 命令取代 <code>git commit</code>，提供交互式选择界面，协助书写。</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-g</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commitizen</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">cz-conventional-changelog</span></span>
<span class="line"><span style="color: #79B8FF">echo</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&#39;{ &quot;path&quot;: &quot;cz-conventional-changelog&quot; }&#39;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">~/.czrc</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #005CC5">-g</span><span style="color: #24292E"> </span><span style="color: #032F62">commitizen</span><span style="color: #24292E"> </span><span style="color: #032F62">cz-conventional-changelog</span></span>
<span class="line"><span style="color: #005CC5">echo</span><span style="color: #24292E"> </span><span style="color: #032F62">&#39;{ &quot;path&quot;: &quot;cz-conventional-changelog&quot; }&#39;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #032F62">~/.czrc</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote>
<p>参考阅读 <a href="https://coding.net/help/docs/ci/practice/lint/git-commit.html#install" target="_blank" rel="noreferrer">Commit Message</a></p>
</blockquote>
<p>第二种：</p>
<p>更花哨一点，使用 <a href="https://github.com/streamich/git-cz" target="_blank" rel="noreferrer">git-cz</a></p>
<CloudinaryImg publicId='memo/git-cz_nuarae' alt='git-cz'/><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">npx</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git-cz</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">//</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">or</span></span>
<span class="line"></span>
<span class="line"><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-g</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commitizen</span></span>
<span class="line"><span style="color: #B392F0">npm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">install</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--save-dev</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git-cz</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">npx</span><span style="color: #24292E"> </span><span style="color: #032F62">git-cz</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">//</span><span style="color: #24292E"> </span><span style="color: #032F62">or</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #005CC5">-g</span><span style="color: #24292E"> </span><span style="color: #032F62">commitizen</span></span>
<span class="line"><span style="color: #6F42C1">npm</span><span style="color: #24292E"> </span><span style="color: #032F62">install</span><span style="color: #24292E"> </span><span style="color: #005CC5">--save-dev</span><span style="color: #24292E"> </span><span style="color: #032F62">git-cz</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="git-stash" tabindex="-1">git stash <a class="header-anchor" href="#git-stash" aria-label="Permalink to &quot;git stash&quot;">&ZeroWidthSpace;</a></h2>
<p>平常需要切换分支，但有时候又不想要立即 commit 上去，于是可以通过 <code>git stash</code> 备份一下，主要的一些命令如下：</p>
<p>备份当前改动</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>查看备份列表</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">list</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">list</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>恢复备份的改动</p>
<div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pop</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">pop</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote>
<p>更多内容可参考 <a href="https://www.cnblogs.com/tocy/p/git-stash-reference.html" target="_blank" rel="noreferrer">git-stash 用法小结</a></p>
</blockquote>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/reading/</link>
            <guid>https://mobius.cool/reading/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<p>阅读</p>
]]></description>
            <content:encoded><![CDATA[<p>阅读</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/socialmedia/</link>
            <guid>https://mobius.cool/socialmedia/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="微信公众号" tabindex="-1">微信公众号 <a class="header-anchor" href="#微信公众号" aria-label="Permalink to &quot;微信公众号&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>喜欢看电影，喜欢听音乐，喜欢分享</p>
</blockquote>
<h3 id="原创文章" tabindex="-1">原创文章 <a class="header-anchor" href="#原创文章" aria-label="Permalink to &quot;原创文章&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://mp.weixin.qq.com/s/CaukbmobWx8RD8ivpZox4Q" target="_blank" rel="noreferrer">西南联大之南渡北归</a></li>
<li><a href="https://mp.weixin.qq.com/s/j0VnL0Cc6HhsLhLAFMva_w" target="_blank" rel="noreferrer">西南联大背后的人事物</a></li>
<li><a href="https://mp.weixin.qq.com/s/l6I85C7c2ppqXJY4HQilAg" target="_blank" rel="noreferrer">五尺天涯</a></li>
<li><a href="https://mp.weixin.qq.com/s/vgJJhtM4zyoMEP2RIPF8pg" target="_blank" rel="noreferrer">面包会有的，一切都会有的</a></li>
</ul>
<h3 id="电影资源" tabindex="-1">电影资源 <a class="header-anchor" href="#电影资源" aria-label="Permalink to &quot;电影资源&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="/socialmedia/wechat/resources.html">电影资源</a></p>
]]></description>
            <content:encoded><![CDATA[<h2 id="微信公众号" tabindex="-1">微信公众号 <a class="header-anchor" href="#微信公众号" aria-label="Permalink to &quot;微信公众号&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>喜欢看电影，喜欢听音乐，喜欢分享</p>
</blockquote>
<h3 id="原创文章" tabindex="-1">原创文章 <a class="header-anchor" href="#原创文章" aria-label="Permalink to &quot;原创文章&quot;">&ZeroWidthSpace;</a></h3>
<ul>
<li><a href="https://mp.weixin.qq.com/s/CaukbmobWx8RD8ivpZox4Q" target="_blank" rel="noreferrer">西南联大之南渡北归</a></li>
<li><a href="https://mp.weixin.qq.com/s/j0VnL0Cc6HhsLhLAFMva_w" target="_blank" rel="noreferrer">西南联大背后的人事物</a></li>
<li><a href="https://mp.weixin.qq.com/s/l6I85C7c2ppqXJY4HQilAg" target="_blank" rel="noreferrer">五尺天涯</a></li>
<li><a href="https://mp.weixin.qq.com/s/vgJJhtM4zyoMEP2RIPF8pg" target="_blank" rel="noreferrer">面包会有的，一切都会有的</a></li>
</ul>
<h3 id="电影资源" tabindex="-1">电影资源 <a class="header-anchor" href="#电影资源" aria-label="Permalink to &quot;电影资源&quot;">&ZeroWidthSpace;</a></h3>
<p><a href="/socialmedia/wechat/resources.html">电影资源</a></p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/socialmedia/wechat/</link>
            <guid>https://mobius.cool/socialmedia/wechat/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h3 id="微信公众号" tabindex="-1">微信公众号 <a class="header-anchor" href="#微信公众号" aria-label="Permalink to &quot;微信公众号&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>dsjdj</p>
</blockquote>
]]></description>
            <content:encoded><![CDATA[<h3 id="微信公众号" tabindex="-1">微信公众号 <a class="header-anchor" href="#微信公众号" aria-label="Permalink to &quot;微信公众号&quot;">&ZeroWidthSpace;</a></h3>
<blockquote>
<p>dsjdj</p>
</blockquote>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/socialmedia/wechat/resources.html</link>
            <guid>https://mobius.cool/socialmedia/wechat/resources.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h2 id="电影资源分享" tabindex="-1">电影资源分享 <a class="header-anchor" href="#电影资源分享" aria-label="Permalink to &quot;电影资源分享&quot;">&ZeroWidthSpace;</a></h2>
<!-- <style>
    #movie {
      width: 50%;
      height: 500px;
    }
</style> -->
<blockquote>
<p>不定期分享资源</p>
</blockquote>
<p><strong>灿烂人生</strong>: 1080P-BT(magnet:?xt=urn:btih:c05400705950041bb9e6ee790cd41eebcb3031af)</p>
<image src="https://camo.githubusercontent.com/819bd5dc219a6e12b1cae4ada09d5379cc47d5bf71dc16e95bb1e8733a6d64b6/68747470733a2f2f7777772e79696e66616e732e6d652f676f3f5f3d356232393631326630386148523063446f764c336433647935356157356d5957357a4c6d316c4c3364774c574e76626e526c626e5176645842736232466b637938794d4445334c7a41314c3341784e6a517a4f5445334e544d7a4c6d70775a773d3d"></image>]]></description>
            <content:encoded><![CDATA[<h2 id="电影资源分享" tabindex="-1">电影资源分享 <a class="header-anchor" href="#电影资源分享" aria-label="Permalink to &quot;电影资源分享&quot;">&ZeroWidthSpace;</a></h2>
<!-- <style>
    #movie {
      width: 50%;
      height: 500px;
    }
</style> -->
<blockquote>
<p>不定期分享资源</p>
</blockquote>
<p><strong>灿烂人生</strong>: 1080P-BT(magnet:?xt=urn:btih:c05400705950041bb9e6ee790cd41eebcb3031af)</p>
<image src="https://camo.githubusercontent.com/819bd5dc219a6e12b1cae4ada09d5379cc47d5bf71dc16e95bb1e8733a6d64b6/68747470733a2f2f7777772e79696e66616e732e6d652f676f3f5f3d356232393631326630386148523063446f764c336433647935356157356d5957357a4c6d316c4c3364774c574e76626e526c626e5176645842736232466b637938794d4445334c7a41314c3341784e6a517a4f5445334e544d7a4c6d70775a773d3d"></image>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/socialmedia/xhs/</link>
            <guid>https://mobius.cool/socialmedia/xhs/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h3 id="小红书" tabindex="-1">小红书 <a class="header-anchor" href="#小红书" aria-label="Permalink to &quot;小红书&quot;">&ZeroWidthSpace;</a></h3>
]]></description>
            <content:encoded><![CDATA[<h3 id="小红书" tabindex="-1">小红书 <a class="header-anchor" href="#小红书" aria-label="Permalink to &quot;小红书&quot;">&ZeroWidthSpace;</a></h3>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[无题]]></title>
            <link>https://mobius.cool/socialmedia/zsxq/</link>
            <guid>https://mobius.cool/socialmedia/zsxq/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h3 id="知识星球" tabindex="-1">知识星球 <a class="header-anchor" href="#知识星球" aria-label="Permalink to &quot;知识星球&quot;">&ZeroWidthSpace;</a></h3>
]]></description>
            <content:encoded><![CDATA[<h3 id="知识星球" tabindex="-1">知识星球 <a class="header-anchor" href="#知识星球" aria-label="Permalink to &quot;知识星球&quot;">&ZeroWidthSpace;</a></h3>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[emoji-list ]]></title>
            <link>https://mobius.cool/tool/emoji-list.html</link>
            <guid>https://mobius.cool/tool/emoji-list.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="emoji-list" tabindex="-1">emoji-list <a class="header-anchor" href="#emoji-list" aria-label="Permalink to &quot;emoji-list&quot;">&ZeroWidthSpace;</a></h1>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>emoji-list from <a href="https://github.com/caiyongji/emoji-list" target="_blank" rel="noreferrer">https://github.com/caiyongji/emoji-list</a></p>
</div>
<h2 id="people" tabindex="-1">People <a class="header-anchor" href="#people" aria-label="Permalink to &quot;People&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>:bowtie: <code>:bowtie:</code></th>
<th>😄 <code>:smile:</code></th>
<th>😆 <code>:laughing:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>😊 <code>:blush:</code></td>
<td>😃 <code>:smiley:</code></td>
<td>☺️ <code>:relaxed:</code></td>
</tr>
<tr>
<td>😏 <code>:smirk:</code></td>
<td>😍 <code>:heart_eyes:</code></td>
<td>😘 <code>:kissing_heart:</code></td>
</tr>
<tr>
<td>😚 <code>:kissing_closed_eyes:</code></td>
<td>😳 <code>:flushed:</code></td>
<td>😌 <code>:relieved:</code></td>
</tr>
<tr>
<td>😆 <code>:satisfied:</code></td>
<td>😁 <code>:grin:</code></td>
<td>😉 <code>:wink:</code></td>
</tr>
<tr>
<td>😜 <code>:stuck_out_tongue_winking_eye:</code></td>
<td>😝 <code>:stuck_out_tongue_closed_eyes:</code></td>
<td>😀 <code>:grinning:</code></td>
</tr>
<tr>
<td>😗 <code>:kissing:</code></td>
<td>😙 <code>:kissing_smiling_eyes:</code></td>
<td>😛 <code>:stuck_out_tongue:</code></td>
</tr>
<tr>
<td>😴 <code>:sleeping:</code></td>
<td>😟 <code>:worried:</code></td>
<td>😦 <code>:frowning:</code></td>
</tr>
<tr>
<td>😧 <code>:anguished:</code></td>
<td>😮 <code>:open_mouth:</code></td>
<td>😬 <code>:grimacing:</code></td>
</tr>
<tr>
<td>😕 <code>:confused:</code></td>
<td>😯 <code>:hushed:</code></td>
<td>😑 <code>:expressionless:</code></td>
</tr>
<tr>
<td>😒 <code>:unamused:</code></td>
<td>😅 <code>:sweat_smile:</code></td>
<td>😓 <code>:sweat:</code></td>
</tr>
<tr>
<td>😥 <code>:disappointed_relieved:</code></td>
<td>😩 <code>:weary:</code></td>
<td>😔 <code>:pensive:</code></td>
</tr>
<tr>
<td>😞 <code>:disappointed:</code></td>
<td>😖 <code>:confounded:</code></td>
<td>😨 <code>:fearful:</code></td>
</tr>
<tr>
<td>😰 <code>:cold_sweat:</code></td>
<td>😣 <code>:persevere:</code></td>
<td>😢 <code>:cry:</code></td>
</tr>
<tr>
<td>😭 <code>:sob:</code></td>
<td>😂 <code>:joy:</code></td>
<td>😲 <code>:astonished:</code></td>
</tr>
<tr>
<td>😱 <code>:scream:</code></td>
<td>:neckbeard: <code>:neckbeard:</code></td>
<td>😫 <code>:tired_face:</code></td>
</tr>
<tr>
<td>😠 <code>:angry:</code></td>
<td>😡 <code>:rage:</code></td>
<td>😤 <code>:triumph:</code></td>
</tr>
<tr>
<td>😪 <code>:sleepy:</code></td>
<td>😋 <code>:yum:</code></td>
<td>😷 <code>:mask:</code></td>
</tr>
<tr>
<td>😎 <code>:sunglasses:</code></td>
<td>😵 <code>:dizzy_face:</code></td>
<td>👿 <code>:imp:</code></td>
</tr>
<tr>
<td>😈 <code>:smiling_imp:</code></td>
<td>😐 <code>:neutral_face:</code></td>
<td>😶 <code>:no_mouth:</code></td>
</tr>
<tr>
<td>😇 <code>:innocent:</code></td>
<td>👽 <code>:alien:</code></td>
<td>💛 <code>:yellow_heart:</code></td>
</tr>
<tr>
<td>💙 <code>:blue_heart:</code></td>
<td>💜 <code>:purple_heart:</code></td>
<td>❤️ <code>:heart:</code></td>
</tr>
<tr>
<td>💚 <code>:green_heart:</code></td>
<td>💔 <code>:broken_heart:</code></td>
<td>💓 <code>:heartbeat:</code></td>
</tr>
<tr>
<td>💗 <code>:heartpulse:</code></td>
<td>💕 <code>:two_hearts:</code></td>
<td>💞 <code>:revolving_hearts:</code></td>
</tr>
<tr>
<td>💘 <code>:cupid:</code></td>
<td>💖 <code>:sparkling_heart:</code></td>
<td>✨ <code>:sparkles:</code></td>
</tr>
<tr>
<td>⭐ <code>:star:</code></td>
<td>🌟 <code>:star2:</code></td>
<td>💫 <code>:dizzy:</code></td>
</tr>
<tr>
<td>💥 <code>:boom:</code></td>
<td>💥 <code>:collision:</code></td>
<td>💢 <code>:anger:</code></td>
</tr>
<tr>
<td>❗ <code>:exclamation:</code></td>
<td>❓ <code>:question:</code></td>
<td>❕ <code>:grey_exclamation:</code></td>
</tr>
<tr>
<td>❔ <code>:grey_question:</code></td>
<td>💤 <code>:zzz:</code></td>
<td>💨 <code>:dash:</code></td>
</tr>
<tr>
<td>💦 <code>:sweat_drops:</code></td>
<td>🎶 <code>:notes:</code></td>
<td>🎵 <code>:musical_note:</code></td>
</tr>
<tr>
<td>🔥 <code>:fire:</code></td>
<td>💩 <code>:hankey:</code></td>
<td>💩 <code>:poop:</code></td>
</tr>
<tr>
<td>💩 <code>:shit:</code></td>
<td>👍 <code>:+1:</code></td>
<td>👍 <code>:thumbsup:</code></td>
</tr>
<tr>
<td>👎 <code>:-1:</code></td>
<td>👎 <code>:thumbsdown:</code></td>
<td>👌 <code>:ok_hand:</code></td>
</tr>
<tr>
<td>👊 <code>:punch:</code></td>
<td>👊 <code>:facepunch:</code></td>
<td>✊ <code>:fist:</code></td>
</tr>
<tr>
<td>✌️ <code>:v:</code></td>
<td>👋 <code>:wave:</code></td>
<td>✋ <code>:hand:</code></td>
</tr>
<tr>
<td>✋ <code>:raised_hand:</code></td>
<td>👐 <code>:open_hands:</code></td>
<td>☝️ <code>:point_up:</code></td>
</tr>
<tr>
<td>👇 <code>:point_down:</code></td>
<td>👈 <code>:point_left:</code></td>
<td>👉 <code>:point_right:</code></td>
</tr>
<tr>
<td>🙌 <code>:raised_hands:</code></td>
<td>🙏 <code>:pray:</code></td>
<td>👆 <code>:point_up_2:</code></td>
</tr>
<tr>
<td>👏 <code>:clap:</code></td>
<td>💪 <code>:muscle:</code></td>
<td>🤘 <code>:metal:</code></td>
</tr>
<tr>
<td>🖕 <code>:fu:</code></td>
<td>🚶 <code>:walking:</code></td>
<td>🏃 <code>:runner:</code></td>
</tr>
<tr>
<td>🏃 <code>:running:</code></td>
<td>👫 <code>:couple:</code></td>
<td>👪 <code>:family:</code></td>
</tr>
<tr>
<td>👬 <code>:two_men_holding_hands:</code></td>
<td>👭 <code>:two_women_holding_hands:</code></td>
<td>💃 <code>:dancer:</code></td>
</tr>
<tr>
<td>👯 <code>:dancers:</code></td>
<td>🙆‍♀️ <code>:ok_woman:</code></td>
<td>🙅 <code>:no_good:</code></td>
</tr>
<tr>
<td>💁 <code>:information_desk_person:</code></td>
<td>🙋 <code>:raising_hand:</code></td>
<td>👰‍♀️ <code>:bride_with_veil:</code></td>
</tr>
<tr>
<td>:person_with_pouting_face: <code>:person_with_pouting_face:</code></td>
<td>:person_frowning: <code>:person_frowning:</code></td>
<td>🙇 <code>:bow:</code></td>
</tr>
<tr>
<td>💏 <code>:couplekiss:</code></td>
<td>💑 <code>:couple_with_heart:</code></td>
<td>💆 <code>:massage:</code></td>
</tr>
<tr>
<td>💇 <code>:haircut:</code></td>
<td>💅 <code>:nail_care:</code></td>
<td>👦 <code>:boy:</code></td>
</tr>
<tr>
<td>👧 <code>:girl:</code></td>
<td>👩 <code>:woman:</code></td>
<td>👨 <code>:man:</code></td>
</tr>
<tr>
<td>👶 <code>:baby:</code></td>
<td>👵 <code>:older_woman:</code></td>
<td>👴 <code>:older_man:</code></td>
</tr>
<tr>
<td>:person_with_blond_hair: <code>:person_with_blond_hair:</code></td>
<td>👲 <code>:man_with_gua_pi_mao:</code></td>
<td>👳‍♂️ <code>:man_with_turban:</code></td>
</tr>
<tr>
<td>👷 <code>:construction_worker:</code></td>
<td>👮 <code>:cop:</code></td>
<td>👼 <code>:angel:</code></td>
</tr>
<tr>
<td>👸 <code>:princess:</code></td>
<td>😺 <code>:smiley_cat:</code></td>
<td>😸 <code>:smile_cat:</code></td>
</tr>
<tr>
<td>😻 <code>:heart_eyes_cat:</code></td>
<td>😽 <code>:kissing_cat:</code></td>
<td>😼 <code>:smirk_cat:</code></td>
</tr>
<tr>
<td>🙀 <code>:scream_cat:</code></td>
<td>😿 <code>:crying_cat_face:</code></td>
<td>😹 <code>:joy_cat:</code></td>
</tr>
<tr>
<td>😾 <code>:pouting_cat:</code></td>
<td>👹 <code>:japanese_ogre:</code></td>
<td>👺 <code>:japanese_goblin:</code></td>
</tr>
<tr>
<td>🙈 <code>:see_no_evil:</code></td>
<td>🙉 <code>:hear_no_evil:</code></td>
<td>🙊 <code>:speak_no_evil:</code></td>
</tr>
<tr>
<td>💂‍♂️ <code>:guardsman:</code></td>
<td>💀 <code>:skull:</code></td>
<td>🐾 <code>:feet:</code></td>
</tr>
<tr>
<td>👄 <code>:lips:</code></td>
<td>💋 <code>:kiss:</code></td>
<td>💧 <code>:droplet:</code></td>
</tr>
<tr>
<td>👂 <code>:ear:</code></td>
<td>👀 <code>:eyes:</code></td>
<td>👃 <code>:nose:</code></td>
</tr>
<tr>
<td>👅 <code>:tongue:</code></td>
<td>💌 <code>:love_letter:</code></td>
<td>👤 <code>:bust_in_silhouette:</code></td>
</tr>
<tr>
<td>👥 <code>:busts_in_silhouette:</code></td>
<td>💬 <code>:speech_balloon:</code></td>
<td>💭 <code>:thought_balloon:</code></td>
</tr>
<tr>
<td>:feelsgood: <code>:feelsgood:</code></td>
<td>:finnadie: <code>:finnadie:</code></td>
<td>:goberserk: <code>:goberserk:</code></td>
</tr>
<tr>
<td>:godmode: <code>:godmode:</code></td>
<td>:hurtrealbad: <code>:hurtrealbad:</code></td>
<td>:rage1: <code>:rage1:</code></td>
</tr>
<tr>
<td>:rage2: <code>:rage2:</code></td>
<td>:rage3: <code>:rage3:</code></td>
<td>:rage4: <code>:rage4:</code></td>
</tr>
<tr>
<td>:suspect: <code>:suspect:</code></td>
<td>:trollface: <code>:trollface:</code></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="nature" tabindex="-1">Nature <a class="header-anchor" href="#nature" aria-label="Permalink to &quot;Nature&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>☀️ <code>:sunny:</code></th>
<th>☔ <code>:umbrella:</code></th>
<th>☁️ <code>:cloud:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>❄️ <code>:snowflake:</code></td>
<td>⛄ <code>:snowman:</code></td>
<td>⚡ <code>:zap:</code></td>
</tr>
<tr>
<td>🌀 <code>:cyclone:</code></td>
<td>🌁 <code>:foggy:</code></td>
<td>🌊 <code>:ocean:</code></td>
</tr>
<tr>
<td>🐱 <code>:cat:</code></td>
<td>🐶 <code>:dog:</code></td>
<td>🐭 <code>:mouse:</code></td>
</tr>
<tr>
<td>🐹 <code>:hamster:</code></td>
<td>🐰 <code>:rabbit:</code></td>
<td>🐺 <code>:wolf:</code></td>
</tr>
<tr>
<td>🐸 <code>:frog:</code></td>
<td>🐯 <code>:tiger:</code></td>
<td>🐨 <code>:koala:</code></td>
</tr>
<tr>
<td>🐻 <code>:bear:</code></td>
<td>🐷 <code>:pig:</code></td>
<td>🐽 <code>:pig_nose:</code></td>
</tr>
<tr>
<td>🐮 <code>:cow:</code></td>
<td>🐗 <code>:boar:</code></td>
<td>🐵 <code>:monkey_face:</code></td>
</tr>
<tr>
<td>🐒 <code>:monkey:</code></td>
<td>🐴 <code>:horse:</code></td>
<td>🐎 <code>:racehorse:</code></td>
</tr>
<tr>
<td>🐫 <code>:camel:</code></td>
<td>🐑 <code>:sheep:</code></td>
<td>🐘 <code>:elephant:</code></td>
</tr>
<tr>
<td>🐼 <code>:panda_face:</code></td>
<td>🐍 <code>:snake:</code></td>
<td>🐦 <code>:bird:</code></td>
</tr>
<tr>
<td>🐤 <code>:baby_chick:</code></td>
<td>🐥 <code>:hatched_chick:</code></td>
<td>🐣 <code>:hatching_chick:</code></td>
</tr>
<tr>
<td>🐔 <code>:chicken:</code></td>
<td>🐧 <code>:penguin:</code></td>
<td>🐢 <code>:turtle:</code></td>
</tr>
<tr>
<td>🐛 <code>:bug:</code></td>
<td>🐝 <code>:honeybee:</code></td>
<td>🐜 <code>:ant:</code></td>
</tr>
<tr>
<td>🪲 <code>:beetle:</code></td>
<td>🐌 <code>:snail:</code></td>
<td>🐙 <code>:octopus:</code></td>
</tr>
<tr>
<td>🐠 <code>:tropical_fish:</code></td>
<td>🐟 <code>:fish:</code></td>
<td>🐳 <code>:whale:</code></td>
</tr>
<tr>
<td>🐋 <code>:whale2:</code></td>
<td>🐬 <code>:dolphin:</code></td>
<td>🐄 <code>:cow2:</code></td>
</tr>
<tr>
<td>🐏 <code>:ram:</code></td>
<td>🐀 <code>:rat:</code></td>
<td>🐃 <code>:water_buffalo:</code></td>
</tr>
<tr>
<td>🐅 <code>:tiger2:</code></td>
<td>🐇 <code>:rabbit2:</code></td>
<td>🐉 <code>:dragon:</code></td>
</tr>
<tr>
<td>🐐 <code>:goat:</code></td>
<td>🐓 <code>:rooster:</code></td>
<td>🐕 <code>:dog2:</code></td>
</tr>
<tr>
<td>🐖 <code>:pig2:</code></td>
<td>🐁 <code>:mouse2:</code></td>
<td>🐂 <code>:ox:</code></td>
</tr>
<tr>
<td>🐲 <code>:dragon_face:</code></td>
<td>🐡 <code>:blowfish:</code></td>
<td>🐊 <code>:crocodile:</code></td>
</tr>
<tr>
<td>🐪 <code>:dromedary_camel:</code></td>
<td>🐆 <code>:leopard:</code></td>
<td>🐈 <code>:cat2:</code></td>
</tr>
<tr>
<td>🐩 <code>:poodle:</code></td>
<td>🐾 <code>:paw_prints:</code></td>
<td>💐 <code>:bouquet:</code></td>
</tr>
<tr>
<td>🌸 <code>:cherry_blossom:</code></td>
<td>🌷 <code>:tulip:</code></td>
<td>🍀 <code>:four_leaf_clover:</code></td>
</tr>
<tr>
<td>🌹 <code>:rose:</code></td>
<td>🌻 <code>:sunflower:</code></td>
<td>🌺 <code>:hibiscus:</code></td>
</tr>
<tr>
<td>🍁 <code>:maple_leaf:</code></td>
<td>🍃 <code>:leaves:</code></td>
<td>🍂 <code>:fallen_leaf:</code></td>
</tr>
<tr>
<td>🌿 <code>:herb:</code></td>
<td>🍄 <code>:mushroom:</code></td>
<td>🌵 <code>:cactus:</code></td>
</tr>
<tr>
<td>🌴 <code>:palm_tree:</code></td>
<td>🌲 <code>:evergreen_tree:</code></td>
<td>🌳 <code>:deciduous_tree:</code></td>
</tr>
<tr>
<td>🌰 <code>:chestnut:</code></td>
<td>🌱 <code>:seedling:</code></td>
<td>🌼 <code>:blossom:</code></td>
</tr>
<tr>
<td>🌾 <code>:ear_of_rice:</code></td>
<td>🐚 <code>:shell:</code></td>
<td>🌐 <code>:globe_with_meridians:</code></td>
</tr>
<tr>
<td>🌞 <code>:sun_with_face:</code></td>
<td>🌝 <code>:full_moon_with_face:</code></td>
<td>🌚 <code>:new_moon_with_face:</code></td>
</tr>
<tr>
<td>🌑 <code>:new_moon:</code></td>
<td>🌒 <code>:waxing_crescent_moon:</code></td>
<td>🌓 <code>:first_quarter_moon:</code></td>
</tr>
<tr>
<td>🌔 <code>:waxing_gibbous_moon:</code></td>
<td>🌕 <code>:full_moon:</code></td>
<td>🌖 <code>:waning_gibbous_moon:</code></td>
</tr>
<tr>
<td>🌗 <code>:last_quarter_moon:</code></td>
<td>🌘 <code>:waning_crescent_moon:</code></td>
<td>🌜 <code>:last_quarter_moon_with_face:</code></td>
</tr>
<tr>
<td>🌛 <code>:first_quarter_moon_with_face:</code></td>
<td>🌔 <code>:moon:</code></td>
<td>🌍 <code>:earth_africa:</code></td>
</tr>
<tr>
<td>🌎 <code>:earth_americas:</code></td>
<td>🌏 <code>:earth_asia:</code></td>
<td>🌋 <code>:volcano:</code></td>
</tr>
<tr>
<td>🌌 <code>:milky_way:</code></td>
<td>⛅ <code>:partly_sunny:</code></td>
<td>:octocat: <code>:octocat:</code></td>
</tr>
<tr>
<td>:squirrel: <code>:squirrel:</code></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="objects" tabindex="-1">Objects <a class="header-anchor" href="#objects" aria-label="Permalink to &quot;Objects&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>🎍 <code>:bamboo:</code></th>
<th>💝 <code>:gift_heart:</code></th>
<th>🎎 <code>:dolls:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>🎒 <code>:school_satchel:</code></td>
<td>🎓 <code>:mortar_board:</code></td>
<td>🎏 <code>:flags:</code></td>
</tr>
<tr>
<td>🎆 <code>:fireworks:</code></td>
<td>🎇 <code>:sparkler:</code></td>
<td>🎐 <code>:wind_chime:</code></td>
</tr>
<tr>
<td>🎑 <code>:rice_scene:</code></td>
<td>🎃 <code>:jack_o_lantern:</code></td>
<td>👻 <code>:ghost:</code></td>
</tr>
<tr>
<td>🎅 <code>:santa:</code></td>
<td>🎄 <code>:christmas_tree:</code></td>
<td>🎁 <code>:gift:</code></td>
</tr>
<tr>
<td>🔔 <code>:bell:</code></td>
<td>🔕 <code>:no_bell:</code></td>
<td>🎋 <code>:tanabata_tree:</code></td>
</tr>
<tr>
<td>🎉 <code>:tada:</code></td>
<td>🎊 <code>:confetti_ball:</code></td>
<td>🎈 <code>:balloon:</code></td>
</tr>
<tr>
<td>🔮 <code>:crystal_ball:</code></td>
<td>💿 <code>:cd:</code></td>
<td>📀 <code>:dvd:</code></td>
</tr>
<tr>
<td>💾 <code>:floppy_disk:</code></td>
<td>📷 <code>:camera:</code></td>
<td>📹 <code>:video_camera:</code></td>
</tr>
<tr>
<td>🎥 <code>:movie_camera:</code></td>
<td>💻 <code>:computer:</code></td>
<td>📺 <code>:tv:</code></td>
</tr>
<tr>
<td>📱 <code>:iphone:</code></td>
<td>☎️ <code>:phone:</code></td>
<td>☎️ <code>:telephone:</code></td>
</tr>
<tr>
<td>📞 <code>:telephone_receiver:</code></td>
<td>📟 <code>:pager:</code></td>
<td>📠 <code>:fax:</code></td>
</tr>
<tr>
<td>💽 <code>:minidisc:</code></td>
<td>📼 <code>:vhs:</code></td>
<td>🔉 <code>:sound:</code></td>
</tr>
<tr>
<td>🔈 <code>:speaker:</code></td>
<td>🔇 <code>:mute:</code></td>
<td>📢 <code>:loudspeaker:</code></td>
</tr>
<tr>
<td>📣 <code>:mega:</code></td>
<td>⌛ <code>:hourglass:</code></td>
<td>⏳ <code>:hourglass_flowing_sand:</code></td>
</tr>
<tr>
<td>⏰ <code>:alarm_clock:</code></td>
<td>⌚ <code>:watch:</code></td>
<td>📻 <code>:radio:</code></td>
</tr>
<tr>
<td>📡 <code>:satellite:</code></td>
<td>➿ <code>:loop:</code></td>
<td>🔍 <code>:mag:</code></td>
</tr>
<tr>
<td>🔎 <code>:mag_right:</code></td>
<td>🔓 <code>:unlock:</code></td>
<td>🔒 <code>:lock:</code></td>
</tr>
<tr>
<td>🔏 <code>:lock_with_ink_pen:</code></td>
<td>🔐 <code>:closed_lock_with_key:</code></td>
<td>🔑 <code>:key:</code></td>
</tr>
<tr>
<td>💡 <code>:bulb:</code></td>
<td>🔦 <code>:flashlight:</code></td>
<td>🔆 <code>:high_brightness:</code></td>
</tr>
<tr>
<td>🔅 <code>:low_brightness:</code></td>
<td>🔌 <code>:electric_plug:</code></td>
<td>🔋 <code>:battery:</code></td>
</tr>
<tr>
<td>📲 <code>:calling:</code></td>
<td>📧 <code>:email:</code></td>
<td>📫 <code>:mailbox:</code></td>
</tr>
<tr>
<td>📮 <code>:postbox:</code></td>
<td>🛀 <code>:bath:</code></td>
<td>🛁 <code>:bathtub:</code></td>
</tr>
<tr>
<td>🚿 <code>:shower:</code></td>
<td>🚽 <code>:toilet:</code></td>
<td>🔧 <code>:wrench:</code></td>
</tr>
<tr>
<td>🔩 <code>:nut_and_bolt:</code></td>
<td>🔨 <code>:hammer:</code></td>
<td>💺 <code>:seat:</code></td>
</tr>
<tr>
<td>💰 <code>:moneybag:</code></td>
<td>💴 <code>:yen:</code></td>
<td>💵 <code>:dollar:</code></td>
</tr>
<tr>
<td>💷 <code>:pound:</code></td>
<td>💶 <code>:euro:</code></td>
<td>💳 <code>:credit_card:</code></td>
</tr>
<tr>
<td>💸 <code>:money_with_wings:</code></td>
<td>📧 <code>:e-mail:</code></td>
<td>📥 <code>:inbox_tray:</code></td>
</tr>
<tr>
<td>📤 <code>:outbox_tray:</code></td>
<td>✉️ <code>:envelope:</code></td>
<td>📨 <code>:incoming_envelope:</code></td>
</tr>
<tr>
<td>📯 <code>:postal_horn:</code></td>
<td>📪 <code>:mailbox_closed:</code></td>
<td>📬 <code>:mailbox_with_mail:</code></td>
</tr>
<tr>
<td>📭 <code>:mailbox_with_no_mail:</code></td>
<td>🚪 <code>:door:</code></td>
<td>🚬 <code>:smoking:</code></td>
</tr>
<tr>
<td>💣 <code>:bomb:</code></td>
<td>🔫 <code>:gun:</code></td>
<td>🔪 <code>:hocho:</code></td>
</tr>
<tr>
<td>💊 <code>:pill:</code></td>
<td>💉 <code>:syringe:</code></td>
<td>📄 <code>:page_facing_up:</code></td>
</tr>
<tr>
<td>📃 <code>:page_with_curl:</code></td>
<td>📑 <code>:bookmark_tabs:</code></td>
<td>📊 <code>:bar_chart:</code></td>
</tr>
<tr>
<td>📈 <code>:chart_with_upwards_trend:</code></td>
<td>📉 <code>:chart_with_downwards_trend:</code></td>
<td>📜 <code>:scroll:</code></td>
</tr>
<tr>
<td>📋 <code>:clipboard:</code></td>
<td>📆 <code>:calendar:</code></td>
<td>📅 <code>:date:</code></td>
</tr>
<tr>
<td>📇 <code>:card_index:</code></td>
<td>📁 <code>:file_folder:</code></td>
<td>📂 <code>:open_file_folder:</code></td>
</tr>
<tr>
<td>✂️ <code>:scissors:</code></td>
<td>📌 <code>:pushpin:</code></td>
<td>📎 <code>:paperclip:</code></td>
</tr>
<tr>
<td>✒️ <code>:black_nib:</code></td>
<td>✏️ <code>:pencil2:</code></td>
<td>📏 <code>:straight_ruler:</code></td>
</tr>
<tr>
<td>📐 <code>:triangular_ruler:</code></td>
<td>📕 <code>:closed_book:</code></td>
<td>📗 <code>:green_book:</code></td>
</tr>
<tr>
<td>📘 <code>:blue_book:</code></td>
<td>📙 <code>:orange_book:</code></td>
<td>📓 <code>:notebook:</code></td>
</tr>
<tr>
<td>📔 <code>:notebook_with_decorative_cover:</code></td>
<td>📒 <code>:ledger:</code></td>
<td>📚 <code>:books:</code></td>
</tr>
<tr>
<td>🔖 <code>:bookmark:</code></td>
<td>📛 <code>:name_badge:</code></td>
<td>🔬 <code>:microscope:</code></td>
</tr>
<tr>
<td>🔭 <code>:telescope:</code></td>
<td>📰 <code>:newspaper:</code></td>
<td>🏈 <code>:football:</code></td>
</tr>
<tr>
<td>🏀 <code>:basketball:</code></td>
<td>⚽ <code>:soccer:</code></td>
<td>⚾ <code>:baseball:</code></td>
</tr>
<tr>
<td>🎾 <code>:tennis:</code></td>
<td>🎱 <code>:8ball:</code></td>
<td>🏉 <code>:rugby_football:</code></td>
</tr>
<tr>
<td>🎳 <code>:bowling:</code></td>
<td>⛳ <code>:golf:</code></td>
<td>🚵 <code>:mountain_bicyclist:</code></td>
</tr>
<tr>
<td>🚴 <code>:bicyclist:</code></td>
<td>🏇 <code>:horse_racing:</code></td>
<td>🏂 <code>:snowboarder:</code></td>
</tr>
<tr>
<td>🏊 <code>:swimmer:</code></td>
<td>🏄 <code>:surfer:</code></td>
<td>🎿 <code>:ski:</code></td>
</tr>
<tr>
<td>♠️ <code>:spades:</code></td>
<td>♥️ <code>:hearts:</code></td>
<td>♣️ <code>:clubs:</code></td>
</tr>
<tr>
<td>♦️ <code>:diamonds:</code></td>
<td>💎 <code>:gem:</code></td>
<td>💍 <code>:ring:</code></td>
</tr>
<tr>
<td>🏆 <code>:trophy:</code></td>
<td>🎼 <code>:musical_score:</code></td>
<td>🎹 <code>:musical_keyboard:</code></td>
</tr>
<tr>
<td>🎻 <code>:violin:</code></td>
<td>👾 <code>:space_invader:</code></td>
<td>🎮 <code>:video_game:</code></td>
</tr>
<tr>
<td>🃏 <code>:black_joker:</code></td>
<td>🎴 <code>:flower_playing_cards:</code></td>
<td>🎲 <code>:game_die:</code></td>
</tr>
<tr>
<td>🎯 <code>:dart:</code></td>
<td>🀄 <code>:mahjong:</code></td>
<td>🎬 <code>:clapper:</code></td>
</tr>
<tr>
<td>📝 <code>:memo:</code></td>
<td>📝 <code>:pencil:</code></td>
<td>📖 <code>:book:</code></td>
</tr>
<tr>
<td>🎨 <code>:art:</code></td>
<td>🎤 <code>:microphone:</code></td>
<td>🎧 <code>:headphones:</code></td>
</tr>
<tr>
<td>🎺 <code>:trumpet:</code></td>
<td>🎷 <code>:saxophone:</code></td>
<td>🎸 <code>:guitar:</code></td>
</tr>
<tr>
<td>👞 <code>:shoe:</code></td>
<td>👡 <code>:sandal:</code></td>
<td>👠 <code>:high_heel:</code></td>
</tr>
<tr>
<td>💄 <code>:lipstick:</code></td>
<td>👢 <code>:boot:</code></td>
<td>👕 <code>:shirt:</code></td>
</tr>
<tr>
<td>👕 <code>:tshirt:</code></td>
<td>👔 <code>:necktie:</code></td>
<td>👚 <code>:womans_clothes:</code></td>
</tr>
<tr>
<td>👗 <code>:dress:</code></td>
<td>🎽 <code>:running_shirt_with_sash:</code></td>
<td>👖 <code>:jeans:</code></td>
</tr>
<tr>
<td>👘 <code>:kimono:</code></td>
<td>👙 <code>:bikini:</code></td>
<td>🎀 <code>:ribbon:</code></td>
</tr>
<tr>
<td>🎩 <code>:tophat:</code></td>
<td>👑 <code>:crown:</code></td>
<td>👒 <code>:womans_hat:</code></td>
</tr>
<tr>
<td>👞 <code>:mans_shoe:</code></td>
<td>🌂 <code>:closed_umbrella:</code></td>
<td>💼 <code>:briefcase:</code></td>
</tr>
<tr>
<td>👜 <code>:handbag:</code></td>
<td>👝 <code>:pouch:</code></td>
<td>👛 <code>:purse:</code></td>
</tr>
<tr>
<td>👓 <code>:eyeglasses:</code></td>
<td>🎣 <code>:fishing_pole_and_fish:</code></td>
<td>☕ <code>:coffee:</code></td>
</tr>
<tr>
<td>🍵 <code>:tea:</code></td>
<td>🍶 <code>:sake:</code></td>
<td>🍼 <code>:baby_bottle:</code></td>
</tr>
<tr>
<td>🍺 <code>:beer:</code></td>
<td>🍻 <code>:beers:</code></td>
<td>🍸 <code>:cocktail:</code></td>
</tr>
<tr>
<td>🍹 <code>:tropical_drink:</code></td>
<td>🍷 <code>:wine_glass:</code></td>
<td>🍴 <code>:fork_and_knife:</code></td>
</tr>
<tr>
<td>🍕 <code>:pizza:</code></td>
<td>🍔 <code>:hamburger:</code></td>
<td>🍟 <code>:fries:</code></td>
</tr>
<tr>
<td>🍗 <code>:poultry_leg:</code></td>
<td>🍖 <code>:meat_on_bone:</code></td>
<td>🍝 <code>:spaghetti:</code></td>
</tr>
<tr>
<td>🍛 <code>:curry:</code></td>
<td>🍤 <code>:fried_shrimp:</code></td>
<td>🍱 <code>:bento:</code></td>
</tr>
<tr>
<td>🍣 <code>:sushi:</code></td>
<td>🍥 <code>:fish_cake:</code></td>
<td>🍙 <code>:rice_ball:</code></td>
</tr>
<tr>
<td>🍘 <code>:rice_cracker:</code></td>
<td>🍚 <code>:rice:</code></td>
<td>🍜 <code>:ramen:</code></td>
</tr>
<tr>
<td>🍲 <code>:stew:</code></td>
<td>🍢 <code>:oden:</code></td>
<td>🍡 <code>:dango:</code></td>
</tr>
<tr>
<td>🥚 <code>:egg:</code></td>
<td>🍞 <code>:bread:</code></td>
<td>🍩 <code>:doughnut:</code></td>
</tr>
<tr>
<td>🍮 <code>:custard:</code></td>
<td>🍦 <code>:icecream:</code></td>
<td>🍨 <code>:ice_cream:</code></td>
</tr>
<tr>
<td>🍧 <code>:shaved_ice:</code></td>
<td>🎂 <code>:birthday:</code></td>
<td>🍰 <code>:cake:</code></td>
</tr>
<tr>
<td>🍪 <code>:cookie:</code></td>
<td>🍫 <code>:chocolate_bar:</code></td>
<td>🍬 <code>:candy:</code></td>
</tr>
<tr>
<td>🍭 <code>:lollipop:</code></td>
<td>🍯 <code>:honey_pot:</code></td>
<td>🍎 <code>:apple:</code></td>
</tr>
<tr>
<td>🍏 <code>:green_apple:</code></td>
<td>🍊 <code>:tangerine:</code></td>
<td>🍋 <code>:lemon:</code></td>
</tr>
<tr>
<td>🍒 <code>:cherries:</code></td>
<td>🍇 <code>:grapes:</code></td>
<td>🍉 <code>:watermelon:</code></td>
</tr>
<tr>
<td>🍓 <code>:strawberry:</code></td>
<td>🍑 <code>:peach:</code></td>
<td>🍈 <code>:melon:</code></td>
</tr>
<tr>
<td>🍌 <code>:banana:</code></td>
<td>🍐 <code>:pear:</code></td>
<td>🍍 <code>:pineapple:</code></td>
</tr>
<tr>
<td>🍠 <code>:sweet_potato:</code></td>
<td>🍆 <code>:eggplant:</code></td>
<td>🍅 <code>:tomato:</code></td>
</tr>
<tr>
<td>🌽 <code>:corn:</code></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="places" tabindex="-1">Places <a class="header-anchor" href="#places" aria-label="Permalink to &quot;Places&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>🏠 <code>:house:</code></th>
<th>🏡 <code>:house_with_garden:</code></th>
<th>🏫 <code>:school:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>🏢 <code>:office:</code></td>
<td>🏣 <code>:post_office:</code></td>
<td>🏥 <code>:hospital:</code></td>
</tr>
<tr>
<td>🏦 <code>:bank:</code></td>
<td>🏪 <code>:convenience_store:</code></td>
<td>🏩 <code>:love_hotel:</code></td>
</tr>
<tr>
<td>🏨 <code>:hotel:</code></td>
<td>💒 <code>:wedding:</code></td>
<td>⛪ <code>:church:</code></td>
</tr>
<tr>
<td>🏬 <code>:department_store:</code></td>
<td>🏤 <code>:european_post_office:</code></td>
<td>🌇 <code>:city_sunrise:</code></td>
</tr>
<tr>
<td>🌆 <code>:city_sunset:</code></td>
<td>🏯 <code>:japanese_castle:</code></td>
<td>🏰 <code>:european_castle:</code></td>
</tr>
<tr>
<td>⛺ <code>:tent:</code></td>
<td>🏭 <code>:factory:</code></td>
<td>🗼 <code>:tokyo_tower:</code></td>
</tr>
<tr>
<td>🗾 <code>:japan:</code></td>
<td>🗻 <code>:mount_fuji:</code></td>
<td>🌄 <code>:sunrise_over_mountains:</code></td>
</tr>
<tr>
<td>🌅 <code>:sunrise:</code></td>
<td>🌠 <code>:stars:</code></td>
<td>🗽 <code>:statue_of_liberty:</code></td>
</tr>
<tr>
<td>🌉 <code>:bridge_at_night:</code></td>
<td>🎠 <code>:carousel_horse:</code></td>
<td>🌈 <code>:rainbow:</code></td>
</tr>
<tr>
<td>🎡 <code>:ferris_wheel:</code></td>
<td>⛲ <code>:fountain:</code></td>
<td>🎢 <code>:roller_coaster:</code></td>
</tr>
<tr>
<td>🚢 <code>:ship:</code></td>
<td>🚤 <code>:speedboat:</code></td>
<td>⛵ <code>:boat:</code></td>
</tr>
<tr>
<td>⛵ <code>:sailboat:</code></td>
<td>🚣 <code>:rowboat:</code></td>
<td>⚓ <code>:anchor:</code></td>
</tr>
<tr>
<td>🚀 <code>:rocket:</code></td>
<td>✈️ <code>:airplane:</code></td>
<td>🚁 <code>:helicopter:</code></td>
</tr>
<tr>
<td>🚂 <code>:steam_locomotive:</code></td>
<td>🚊 <code>:tram:</code></td>
<td>🚞 <code>:mountain_railway:</code></td>
</tr>
<tr>
<td>🚲 <code>:bike:</code></td>
<td>🚡 <code>:aerial_tramway:</code></td>
<td>🚟 <code>:suspension_railway:</code></td>
</tr>
<tr>
<td>🚠 <code>:mountain_cableway:</code></td>
<td>🚜 <code>:tractor:</code></td>
<td>🚙 <code>:blue_car:</code></td>
</tr>
<tr>
<td>🚘 <code>:oncoming_automobile:</code></td>
<td>🚗 <code>:car:</code></td>
<td>🚗 <code>:red_car:</code></td>
</tr>
<tr>
<td>🚕 <code>:taxi:</code></td>
<td>🚖 <code>:oncoming_taxi:</code></td>
<td>🚛 <code>:articulated_lorry:</code></td>
</tr>
<tr>
<td>🚌 <code>:bus:</code></td>
<td>🚍 <code>:oncoming_bus:</code></td>
<td>🚨 <code>:rotating_light:</code></td>
</tr>
<tr>
<td>🚓 <code>:police_car:</code></td>
<td>🚔 <code>:oncoming_police_car:</code></td>
<td>🚒 <code>:fire_engine:</code></td>
</tr>
<tr>
<td>🚑 <code>:ambulance:</code></td>
<td>🚐 <code>:minibus:</code></td>
<td>🚚 <code>:truck:</code></td>
</tr>
<tr>
<td>🚋 <code>:train:</code></td>
<td>🚉 <code>:station:</code></td>
<td>🚆 <code>:train2:</code></td>
</tr>
<tr>
<td>🚅 <code>:bullettrain_front:</code></td>
<td>🚄 <code>:bullettrain_side:</code></td>
<td>🚈 <code>:light_rail:</code></td>
</tr>
<tr>
<td>🚝 <code>:monorail:</code></td>
<td>🚃 <code>:railway_car:</code></td>
<td>🚎 <code>:trolleybus:</code></td>
</tr>
<tr>
<td>🎫 <code>:ticket:</code></td>
<td>⛽ <code>:fuelpump:</code></td>
<td>🚦 <code>:vertical_traffic_light:</code></td>
</tr>
<tr>
<td>🚥 <code>:traffic_light:</code></td>
<td>⚠️ <code>:warning:</code></td>
<td>🚧 <code>:construction:</code></td>
</tr>
<tr>
<td>🔰 <code>:beginner:</code></td>
<td>🏧 <code>:atm:</code></td>
<td>🎰 <code>:slot_machine:</code></td>
</tr>
<tr>
<td>🚏 <code>:busstop:</code></td>
<td>💈 <code>:barber:</code></td>
<td>♨️ <code>:hotsprings:</code></td>
</tr>
<tr>
<td>🏁 <code>:checkered_flag:</code></td>
<td>🎌 <code>:crossed_flags:</code></td>
<td>🏮 <code>:izakaya_lantern:</code></td>
</tr>
<tr>
<td>🗿 <code>:moyai:</code></td>
<td>🎪 <code>:circus_tent:</code></td>
<td>🎭 <code>:performing_arts:</code></td>
</tr>
<tr>
<td>📍 <code>:round_pushpin:</code></td>
<td>🚩 <code>:triangular_flag_on_post:</code></td>
<td>🇯🇵 <code>:jp:</code></td>
</tr>
<tr>
<td>🇰🇷 <code>:kr:</code></td>
<td>🇨🇳 <code>:cn:</code></td>
<td>🇺🇸 <code>:us:</code></td>
</tr>
<tr>
<td>🇫🇷 <code>:fr:</code></td>
<td>🇪🇸 <code>:es:</code></td>
<td>🇮🇹 <code>:it:</code></td>
</tr>
<tr>
<td>🇷🇺 <code>:ru:</code></td>
<td>🇬🇧 <code>:gb:</code></td>
<td>🇬🇧 <code>:uk:</code></td>
</tr>
<tr>
<td>🇩🇪 <code>:de:</code></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="symbols" tabindex="-1">Symbols <a class="header-anchor" href="#symbols" aria-label="Permalink to &quot;Symbols&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>1️⃣ <code>:one:</code></th>
<th>2️⃣ <code>:two:</code></th>
<th>3️⃣ <code>:three:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>4️⃣ <code>:four:</code></td>
<td>5️⃣ <code>:five:</code></td>
<td>6️⃣ <code>:six:</code></td>
</tr>
<tr>
<td>7️⃣ <code>:seven:</code></td>
<td>8️⃣ <code>:eight:</code></td>
<td>9️⃣ <code>:nine:</code></td>
</tr>
<tr>
<td>🔟 <code>:keycap_ten:</code></td>
<td>🔢 <code>:1234:</code></td>
<td>0️⃣ <code>:zero:</code></td>
</tr>
<tr>
<td>#️⃣ <code>:hash:</code></td>
<td>🔣 <code>:symbols:</code></td>
<td>◀️ <code>:arrow_backward:</code></td>
</tr>
<tr>
<td>⬇️ <code>:arrow_down:</code></td>
<td>▶️ <code>:arrow_forward:</code></td>
<td>⬅️ <code>:arrow_left:</code></td>
</tr>
<tr>
<td>🔠 <code>:capital_abcd:</code></td>
<td>🔡 <code>:abcd:</code></td>
<td>🔤 <code>:abc:</code></td>
</tr>
<tr>
<td>↙️ <code>:arrow_lower_left:</code></td>
<td>↘️ <code>:arrow_lower_right:</code></td>
<td>➡️ <code>:arrow_right:</code></td>
</tr>
<tr>
<td>⬆️ <code>:arrow_up:</code></td>
<td>↖️ <code>:arrow_upper_left:</code></td>
<td>↗️ <code>:arrow_upper_right:</code></td>
</tr>
<tr>
<td>⏬ <code>:arrow_double_down:</code></td>
<td>⏫ <code>:arrow_double_up:</code></td>
<td>🔽 <code>:arrow_down_small:</code></td>
</tr>
<tr>
<td>⤵️ <code>:arrow_heading_down:</code></td>
<td>⤴️ <code>:arrow_heading_up:</code></td>
<td>↩️ <code>:leftwards_arrow_with_hook:</code></td>
</tr>
<tr>
<td>↪️ <code>:arrow_right_hook:</code></td>
<td>↔️ <code>:left_right_arrow:</code></td>
<td>↕️ <code>:arrow_up_down:</code></td>
</tr>
<tr>
<td>🔼 <code>:arrow_up_small:</code></td>
<td>🔃 <code>:arrows_clockwise:</code></td>
<td>🔄 <code>:arrows_counterclockwise:</code></td>
</tr>
<tr>
<td>⏪ <code>:rewind:</code></td>
<td>⏩ <code>:fast_forward:</code></td>
<td>ℹ️ <code>:information_source:</code></td>
</tr>
<tr>
<td>🆗 <code>:ok:</code></td>
<td>🔀 <code>:twisted_rightwards_arrows:</code></td>
<td>🔁 <code>:repeat:</code></td>
</tr>
<tr>
<td>🔂 <code>:repeat_one:</code></td>
<td>🆕 <code>:new:</code></td>
<td>🔝 <code>:top:</code></td>
</tr>
<tr>
<td>🆙 <code>:up:</code></td>
<td>🆒 <code>:cool:</code></td>
<td>🆓 <code>:free:</code></td>
</tr>
<tr>
<td>🆖 <code>:ng:</code></td>
<td>🎦 <code>:cinema:</code></td>
<td>🈁 <code>:koko:</code></td>
</tr>
<tr>
<td>📶 <code>:signal_strength:</code></td>
<td>:u5272: <code>:u5272:</code></td>
<td>:u5408: <code>:u5408:</code></td>
</tr>
<tr>
<td>:u55b6: <code>:u55b6:</code></td>
<td>:u6307: <code>:u6307:</code></td>
<td>:u6708: <code>:u6708:</code></td>
</tr>
<tr>
<td>:u6709: <code>:u6709:</code></td>
<td>🈵 <code>:u6e80:</code></td>
<td>:u7121: <code>:u7121:</code></td>
</tr>
<tr>
<td>:u7533: <code>:u7533:</code></td>
<td>:u7a7a: <code>:u7a7a:</code></td>
<td>:u7981: <code>:u7981:</code></td>
</tr>
<tr>
<td>🈂️ <code>:sa:</code></td>
<td>🚻 <code>:restroom:</code></td>
<td>🚹 <code>:mens:</code></td>
</tr>
<tr>
<td>🚺 <code>:womens:</code></td>
<td>🚼 <code>:baby_symbol:</code></td>
<td>🚭 <code>:no_smoking:</code></td>
</tr>
<tr>
<td>🅿️ <code>:parking:</code></td>
<td>♿ <code>:wheelchair:</code></td>
<td>🚇 <code>:metro:</code></td>
</tr>
<tr>
<td>🛄 <code>:baggage_claim:</code></td>
<td>🉑 <code>:accept:</code></td>
<td>🚾 <code>:wc:</code></td>
</tr>
<tr>
<td>🚰 <code>:potable_water:</code></td>
<td>🚮 <code>:put_litter_in_its_place:</code></td>
<td>㊙️ <code>:secret:</code></td>
</tr>
<tr>
<td>㊗️ <code>:congratulations:</code></td>
<td>Ⓜ️ <code>:m:</code></td>
<td>🛂 <code>:passport_control:</code></td>
</tr>
<tr>
<td>🛅 <code>:left_luggage:</code></td>
<td>🛃 <code>:customs:</code></td>
<td>🉐 <code>:ideograph_advantage:</code></td>
</tr>
<tr>
<td>🆑 <code>:cl:</code></td>
<td>🆘 <code>:sos:</code></td>
<td>🆔 <code>:id:</code></td>
</tr>
<tr>
<td>🚫 <code>:no_entry_sign:</code></td>
<td>🔞 <code>:underage:</code></td>
<td>📵 <code>:no_mobile_phones:</code></td>
</tr>
<tr>
<td>🚯 <code>:do_not_litter:</code></td>
<td>🚱 <code>:non-potable_water:</code></td>
<td>🚳 <code>:no_bicycles:</code></td>
</tr>
<tr>
<td>🚷 <code>:no_pedestrians:</code></td>
<td>🚸 <code>:children_crossing:</code></td>
<td>⛔ <code>:no_entry:</code></td>
</tr>
<tr>
<td>✳️ <code>:eight_spoked_asterisk:</code></td>
<td>✴️ <code>:eight_pointed_black_star:</code></td>
<td>💟 <code>:heart_decoration:</code></td>
</tr>
<tr>
<td>🆚 <code>:vs:</code></td>
<td>📳 <code>:vibration_mode:</code></td>
<td>📴 <code>:mobile_phone_off:</code></td>
</tr>
<tr>
<td>💹 <code>:chart:</code></td>
<td>💱 <code>:currency_exchange:</code></td>
<td>♈ <code>:aries:</code></td>
</tr>
<tr>
<td>♉ <code>:taurus:</code></td>
<td>♊ <code>:gemini:</code></td>
<td>♋ <code>:cancer:</code></td>
</tr>
<tr>
<td>♌ <code>:leo:</code></td>
<td>♍ <code>:virgo:</code></td>
<td>♎ <code>:libra:</code></td>
</tr>
<tr>
<td>♏ <code>:scorpius:</code></td>
<td>♐ <code>:sagittarius:</code></td>
<td>♑ <code>:capricorn:</code></td>
</tr>
<tr>
<td>♒ <code>:aquarius:</code></td>
<td>♓ <code>:pisces:</code></td>
<td>⛎ <code>:ophiuchus:</code></td>
</tr>
<tr>
<td>🔯 <code>:six_pointed_star:</code></td>
<td>❎ <code>:negative_squared_cross_mark:</code></td>
<td>🅰️ <code>:a:</code></td>
</tr>
<tr>
<td>🅱️ <code>:b:</code></td>
<td>🆎 <code>:ab:</code></td>
<td>🅾️ <code>:o2:</code></td>
</tr>
<tr>
<td>💠 <code>:diamond_shape_with_a_dot_inside:</code></td>
<td>♻️ <code>:recycle:</code></td>
<td>🔚 <code>:end:</code></td>
</tr>
<tr>
<td>🔛 <code>:on:</code></td>
<td>🔜 <code>:soon:</code></td>
<td>🕐 <code>:clock1:</code></td>
</tr>
<tr>
<td>🕜 <code>:clock130:</code></td>
<td>🕙 <code>:clock10:</code></td>
<td>🕥 <code>:clock1030:</code></td>
</tr>
<tr>
<td>🕚 <code>:clock11:</code></td>
<td>🕦 <code>:clock1130:</code></td>
<td>🕛 <code>:clock12:</code></td>
</tr>
<tr>
<td>🕧 <code>:clock1230:</code></td>
<td>🕑 <code>:clock2:</code></td>
<td>🕝 <code>:clock230:</code></td>
</tr>
<tr>
<td>🕒 <code>:clock3:</code></td>
<td>🕞 <code>:clock330:</code></td>
<td>🕓 <code>:clock4:</code></td>
</tr>
<tr>
<td>🕟 <code>:clock430:</code></td>
<td>🕔 <code>:clock5:</code></td>
<td>🕠 <code>:clock530:</code></td>
</tr>
<tr>
<td>🕕 <code>:clock6:</code></td>
<td>🕡 <code>:clock630:</code></td>
<td>🕖 <code>:clock7:</code></td>
</tr>
<tr>
<td>🕢 <code>:clock730:</code></td>
<td>🕗 <code>:clock8:</code></td>
<td>🕣 <code>:clock830:</code></td>
</tr>
<tr>
<td>🕘 <code>:clock9:</code></td>
<td>🕤 <code>:clock930:</code></td>
<td>💲 <code>:heavy_dollar_sign:</code></td>
</tr>
<tr>
<td>©️ <code>:copyright:</code></td>
<td>®️ <code>:registered:</code></td>
<td>™️ <code>:tm:</code></td>
</tr>
<tr>
<td>❌ <code>:x:</code></td>
<td>❗ <code>:heavy_exclamation_mark:</code></td>
<td>‼️ <code>:bangbang:</code></td>
</tr>
<tr>
<td>⁉️ <code>:interrobang:</code></td>
<td>⭕ <code>:o:</code></td>
<td>✖️ <code>:heavy_multiplication_x:</code></td>
</tr>
<tr>
<td>➕ <code>:heavy_plus_sign:</code></td>
<td>➖ <code>:heavy_minus_sign:</code></td>
<td>➗ <code>:heavy_division_sign:</code></td>
</tr>
<tr>
<td>💮 <code>:white_flower:</code></td>
<td>💯 <code>:100:</code></td>
<td>✔️ <code>:heavy_check_mark:</code></td>
</tr>
<tr>
<td>☑️ <code>:ballot_box_with_check:</code></td>
<td>🔘 <code>:radio_button:</code></td>
<td>🔗 <code>:link:</code></td>
</tr>
<tr>
<td>➰ <code>:curly_loop:</code></td>
<td>〰️ <code>:wavy_dash:</code></td>
<td>〽️ <code>:part_alternation_mark:</code></td>
</tr>
<tr>
<td>🔱 <code>:trident:</code></td>
<td>:black_square: <code>:black_square:</code></td>
<td>:white_square: <code>:white_square:</code></td>
</tr>
<tr>
<td>✅ <code>:white_check_mark:</code></td>
<td>🔲 <code>:black_square_button:</code></td>
<td>🔳 <code>:white_square_button:</code></td>
</tr>
<tr>
<td>⚫ <code>:black_circle:</code></td>
<td>⚪ <code>:white_circle:</code></td>
<td>🔴 <code>:red_circle:</code></td>
</tr>
<tr>
<td>🔵 <code>:large_blue_circle:</code></td>
<td>🔷 <code>:large_blue_diamond:</code></td>
<td>🔶 <code>:large_orange_diamond:</code></td>
</tr>
<tr>
<td>🔹 <code>:small_blue_diamond:</code></td>
<td>🔸 <code>:small_orange_diamond:</code></td>
<td>🔺 <code>:small_red_triangle:</code></td>
</tr>
<tr>
<td>🔻 <code>:small_red_triangle_down:</code></td>
<td>:shipit: <code>:shipit:</code></td>
<td></td>
</tr>
</tbody>
</table>
]]></description>
            <content:encoded><![CDATA[<h1 id="emoji-list" tabindex="-1">emoji-list <a class="header-anchor" href="#emoji-list" aria-label="Permalink to &quot;emoji-list&quot;">&ZeroWidthSpace;</a></h1>
<div class="info custom-block"><p class="custom-block-title">INFO</p>
<p>emoji-list from <a href="https://github.com/caiyongji/emoji-list" target="_blank" rel="noreferrer">https://github.com/caiyongji/emoji-list</a></p>
</div>
<h2 id="people" tabindex="-1">People <a class="header-anchor" href="#people" aria-label="Permalink to &quot;People&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>:bowtie: <code>:bowtie:</code></th>
<th>😄 <code>:smile:</code></th>
<th>😆 <code>:laughing:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>😊 <code>:blush:</code></td>
<td>😃 <code>:smiley:</code></td>
<td>☺️ <code>:relaxed:</code></td>
</tr>
<tr>
<td>😏 <code>:smirk:</code></td>
<td>😍 <code>:heart_eyes:</code></td>
<td>😘 <code>:kissing_heart:</code></td>
</tr>
<tr>
<td>😚 <code>:kissing_closed_eyes:</code></td>
<td>😳 <code>:flushed:</code></td>
<td>😌 <code>:relieved:</code></td>
</tr>
<tr>
<td>😆 <code>:satisfied:</code></td>
<td>😁 <code>:grin:</code></td>
<td>😉 <code>:wink:</code></td>
</tr>
<tr>
<td>😜 <code>:stuck_out_tongue_winking_eye:</code></td>
<td>😝 <code>:stuck_out_tongue_closed_eyes:</code></td>
<td>😀 <code>:grinning:</code></td>
</tr>
<tr>
<td>😗 <code>:kissing:</code></td>
<td>😙 <code>:kissing_smiling_eyes:</code></td>
<td>😛 <code>:stuck_out_tongue:</code></td>
</tr>
<tr>
<td>😴 <code>:sleeping:</code></td>
<td>😟 <code>:worried:</code></td>
<td>😦 <code>:frowning:</code></td>
</tr>
<tr>
<td>😧 <code>:anguished:</code></td>
<td>😮 <code>:open_mouth:</code></td>
<td>😬 <code>:grimacing:</code></td>
</tr>
<tr>
<td>😕 <code>:confused:</code></td>
<td>😯 <code>:hushed:</code></td>
<td>😑 <code>:expressionless:</code></td>
</tr>
<tr>
<td>😒 <code>:unamused:</code></td>
<td>😅 <code>:sweat_smile:</code></td>
<td>😓 <code>:sweat:</code></td>
</tr>
<tr>
<td>😥 <code>:disappointed_relieved:</code></td>
<td>😩 <code>:weary:</code></td>
<td>😔 <code>:pensive:</code></td>
</tr>
<tr>
<td>😞 <code>:disappointed:</code></td>
<td>😖 <code>:confounded:</code></td>
<td>😨 <code>:fearful:</code></td>
</tr>
<tr>
<td>😰 <code>:cold_sweat:</code></td>
<td>😣 <code>:persevere:</code></td>
<td>😢 <code>:cry:</code></td>
</tr>
<tr>
<td>😭 <code>:sob:</code></td>
<td>😂 <code>:joy:</code></td>
<td>😲 <code>:astonished:</code></td>
</tr>
<tr>
<td>😱 <code>:scream:</code></td>
<td>:neckbeard: <code>:neckbeard:</code></td>
<td>😫 <code>:tired_face:</code></td>
</tr>
<tr>
<td>😠 <code>:angry:</code></td>
<td>😡 <code>:rage:</code></td>
<td>😤 <code>:triumph:</code></td>
</tr>
<tr>
<td>😪 <code>:sleepy:</code></td>
<td>😋 <code>:yum:</code></td>
<td>😷 <code>:mask:</code></td>
</tr>
<tr>
<td>😎 <code>:sunglasses:</code></td>
<td>😵 <code>:dizzy_face:</code></td>
<td>👿 <code>:imp:</code></td>
</tr>
<tr>
<td>😈 <code>:smiling_imp:</code></td>
<td>😐 <code>:neutral_face:</code></td>
<td>😶 <code>:no_mouth:</code></td>
</tr>
<tr>
<td>😇 <code>:innocent:</code></td>
<td>👽 <code>:alien:</code></td>
<td>💛 <code>:yellow_heart:</code></td>
</tr>
<tr>
<td>💙 <code>:blue_heart:</code></td>
<td>💜 <code>:purple_heart:</code></td>
<td>❤️ <code>:heart:</code></td>
</tr>
<tr>
<td>💚 <code>:green_heart:</code></td>
<td>💔 <code>:broken_heart:</code></td>
<td>💓 <code>:heartbeat:</code></td>
</tr>
<tr>
<td>💗 <code>:heartpulse:</code></td>
<td>💕 <code>:two_hearts:</code></td>
<td>💞 <code>:revolving_hearts:</code></td>
</tr>
<tr>
<td>💘 <code>:cupid:</code></td>
<td>💖 <code>:sparkling_heart:</code></td>
<td>✨ <code>:sparkles:</code></td>
</tr>
<tr>
<td>⭐ <code>:star:</code></td>
<td>🌟 <code>:star2:</code></td>
<td>💫 <code>:dizzy:</code></td>
</tr>
<tr>
<td>💥 <code>:boom:</code></td>
<td>💥 <code>:collision:</code></td>
<td>💢 <code>:anger:</code></td>
</tr>
<tr>
<td>❗ <code>:exclamation:</code></td>
<td>❓ <code>:question:</code></td>
<td>❕ <code>:grey_exclamation:</code></td>
</tr>
<tr>
<td>❔ <code>:grey_question:</code></td>
<td>💤 <code>:zzz:</code></td>
<td>💨 <code>:dash:</code></td>
</tr>
<tr>
<td>💦 <code>:sweat_drops:</code></td>
<td>🎶 <code>:notes:</code></td>
<td>🎵 <code>:musical_note:</code></td>
</tr>
<tr>
<td>🔥 <code>:fire:</code></td>
<td>💩 <code>:hankey:</code></td>
<td>💩 <code>:poop:</code></td>
</tr>
<tr>
<td>💩 <code>:shit:</code></td>
<td>👍 <code>:+1:</code></td>
<td>👍 <code>:thumbsup:</code></td>
</tr>
<tr>
<td>👎 <code>:-1:</code></td>
<td>👎 <code>:thumbsdown:</code></td>
<td>👌 <code>:ok_hand:</code></td>
</tr>
<tr>
<td>👊 <code>:punch:</code></td>
<td>👊 <code>:facepunch:</code></td>
<td>✊ <code>:fist:</code></td>
</tr>
<tr>
<td>✌️ <code>:v:</code></td>
<td>👋 <code>:wave:</code></td>
<td>✋ <code>:hand:</code></td>
</tr>
<tr>
<td>✋ <code>:raised_hand:</code></td>
<td>👐 <code>:open_hands:</code></td>
<td>☝️ <code>:point_up:</code></td>
</tr>
<tr>
<td>👇 <code>:point_down:</code></td>
<td>👈 <code>:point_left:</code></td>
<td>👉 <code>:point_right:</code></td>
</tr>
<tr>
<td>🙌 <code>:raised_hands:</code></td>
<td>🙏 <code>:pray:</code></td>
<td>👆 <code>:point_up_2:</code></td>
</tr>
<tr>
<td>👏 <code>:clap:</code></td>
<td>💪 <code>:muscle:</code></td>
<td>🤘 <code>:metal:</code></td>
</tr>
<tr>
<td>🖕 <code>:fu:</code></td>
<td>🚶 <code>:walking:</code></td>
<td>🏃 <code>:runner:</code></td>
</tr>
<tr>
<td>🏃 <code>:running:</code></td>
<td>👫 <code>:couple:</code></td>
<td>👪 <code>:family:</code></td>
</tr>
<tr>
<td>👬 <code>:two_men_holding_hands:</code></td>
<td>👭 <code>:two_women_holding_hands:</code></td>
<td>💃 <code>:dancer:</code></td>
</tr>
<tr>
<td>👯 <code>:dancers:</code></td>
<td>🙆‍♀️ <code>:ok_woman:</code></td>
<td>🙅 <code>:no_good:</code></td>
</tr>
<tr>
<td>💁 <code>:information_desk_person:</code></td>
<td>🙋 <code>:raising_hand:</code></td>
<td>👰‍♀️ <code>:bride_with_veil:</code></td>
</tr>
<tr>
<td>:person_with_pouting_face: <code>:person_with_pouting_face:</code></td>
<td>:person_frowning: <code>:person_frowning:</code></td>
<td>🙇 <code>:bow:</code></td>
</tr>
<tr>
<td>💏 <code>:couplekiss:</code></td>
<td>💑 <code>:couple_with_heart:</code></td>
<td>💆 <code>:massage:</code></td>
</tr>
<tr>
<td>💇 <code>:haircut:</code></td>
<td>💅 <code>:nail_care:</code></td>
<td>👦 <code>:boy:</code></td>
</tr>
<tr>
<td>👧 <code>:girl:</code></td>
<td>👩 <code>:woman:</code></td>
<td>👨 <code>:man:</code></td>
</tr>
<tr>
<td>👶 <code>:baby:</code></td>
<td>👵 <code>:older_woman:</code></td>
<td>👴 <code>:older_man:</code></td>
</tr>
<tr>
<td>:person_with_blond_hair: <code>:person_with_blond_hair:</code></td>
<td>👲 <code>:man_with_gua_pi_mao:</code></td>
<td>👳‍♂️ <code>:man_with_turban:</code></td>
</tr>
<tr>
<td>👷 <code>:construction_worker:</code></td>
<td>👮 <code>:cop:</code></td>
<td>👼 <code>:angel:</code></td>
</tr>
<tr>
<td>👸 <code>:princess:</code></td>
<td>😺 <code>:smiley_cat:</code></td>
<td>😸 <code>:smile_cat:</code></td>
</tr>
<tr>
<td>😻 <code>:heart_eyes_cat:</code></td>
<td>😽 <code>:kissing_cat:</code></td>
<td>😼 <code>:smirk_cat:</code></td>
</tr>
<tr>
<td>🙀 <code>:scream_cat:</code></td>
<td>😿 <code>:crying_cat_face:</code></td>
<td>😹 <code>:joy_cat:</code></td>
</tr>
<tr>
<td>😾 <code>:pouting_cat:</code></td>
<td>👹 <code>:japanese_ogre:</code></td>
<td>👺 <code>:japanese_goblin:</code></td>
</tr>
<tr>
<td>🙈 <code>:see_no_evil:</code></td>
<td>🙉 <code>:hear_no_evil:</code></td>
<td>🙊 <code>:speak_no_evil:</code></td>
</tr>
<tr>
<td>💂‍♂️ <code>:guardsman:</code></td>
<td>💀 <code>:skull:</code></td>
<td>🐾 <code>:feet:</code></td>
</tr>
<tr>
<td>👄 <code>:lips:</code></td>
<td>💋 <code>:kiss:</code></td>
<td>💧 <code>:droplet:</code></td>
</tr>
<tr>
<td>👂 <code>:ear:</code></td>
<td>👀 <code>:eyes:</code></td>
<td>👃 <code>:nose:</code></td>
</tr>
<tr>
<td>👅 <code>:tongue:</code></td>
<td>💌 <code>:love_letter:</code></td>
<td>👤 <code>:bust_in_silhouette:</code></td>
</tr>
<tr>
<td>👥 <code>:busts_in_silhouette:</code></td>
<td>💬 <code>:speech_balloon:</code></td>
<td>💭 <code>:thought_balloon:</code></td>
</tr>
<tr>
<td>:feelsgood: <code>:feelsgood:</code></td>
<td>:finnadie: <code>:finnadie:</code></td>
<td>:goberserk: <code>:goberserk:</code></td>
</tr>
<tr>
<td>:godmode: <code>:godmode:</code></td>
<td>:hurtrealbad: <code>:hurtrealbad:</code></td>
<td>:rage1: <code>:rage1:</code></td>
</tr>
<tr>
<td>:rage2: <code>:rage2:</code></td>
<td>:rage3: <code>:rage3:</code></td>
<td>:rage4: <code>:rage4:</code></td>
</tr>
<tr>
<td>:suspect: <code>:suspect:</code></td>
<td>:trollface: <code>:trollface:</code></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="nature" tabindex="-1">Nature <a class="header-anchor" href="#nature" aria-label="Permalink to &quot;Nature&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>☀️ <code>:sunny:</code></th>
<th>☔ <code>:umbrella:</code></th>
<th>☁️ <code>:cloud:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>❄️ <code>:snowflake:</code></td>
<td>⛄ <code>:snowman:</code></td>
<td>⚡ <code>:zap:</code></td>
</tr>
<tr>
<td>🌀 <code>:cyclone:</code></td>
<td>🌁 <code>:foggy:</code></td>
<td>🌊 <code>:ocean:</code></td>
</tr>
<tr>
<td>🐱 <code>:cat:</code></td>
<td>🐶 <code>:dog:</code></td>
<td>🐭 <code>:mouse:</code></td>
</tr>
<tr>
<td>🐹 <code>:hamster:</code></td>
<td>🐰 <code>:rabbit:</code></td>
<td>🐺 <code>:wolf:</code></td>
</tr>
<tr>
<td>🐸 <code>:frog:</code></td>
<td>🐯 <code>:tiger:</code></td>
<td>🐨 <code>:koala:</code></td>
</tr>
<tr>
<td>🐻 <code>:bear:</code></td>
<td>🐷 <code>:pig:</code></td>
<td>🐽 <code>:pig_nose:</code></td>
</tr>
<tr>
<td>🐮 <code>:cow:</code></td>
<td>🐗 <code>:boar:</code></td>
<td>🐵 <code>:monkey_face:</code></td>
</tr>
<tr>
<td>🐒 <code>:monkey:</code></td>
<td>🐴 <code>:horse:</code></td>
<td>🐎 <code>:racehorse:</code></td>
</tr>
<tr>
<td>🐫 <code>:camel:</code></td>
<td>🐑 <code>:sheep:</code></td>
<td>🐘 <code>:elephant:</code></td>
</tr>
<tr>
<td>🐼 <code>:panda_face:</code></td>
<td>🐍 <code>:snake:</code></td>
<td>🐦 <code>:bird:</code></td>
</tr>
<tr>
<td>🐤 <code>:baby_chick:</code></td>
<td>🐥 <code>:hatched_chick:</code></td>
<td>🐣 <code>:hatching_chick:</code></td>
</tr>
<tr>
<td>🐔 <code>:chicken:</code></td>
<td>🐧 <code>:penguin:</code></td>
<td>🐢 <code>:turtle:</code></td>
</tr>
<tr>
<td>🐛 <code>:bug:</code></td>
<td>🐝 <code>:honeybee:</code></td>
<td>🐜 <code>:ant:</code></td>
</tr>
<tr>
<td>🪲 <code>:beetle:</code></td>
<td>🐌 <code>:snail:</code></td>
<td>🐙 <code>:octopus:</code></td>
</tr>
<tr>
<td>🐠 <code>:tropical_fish:</code></td>
<td>🐟 <code>:fish:</code></td>
<td>🐳 <code>:whale:</code></td>
</tr>
<tr>
<td>🐋 <code>:whale2:</code></td>
<td>🐬 <code>:dolphin:</code></td>
<td>🐄 <code>:cow2:</code></td>
</tr>
<tr>
<td>🐏 <code>:ram:</code></td>
<td>🐀 <code>:rat:</code></td>
<td>🐃 <code>:water_buffalo:</code></td>
</tr>
<tr>
<td>🐅 <code>:tiger2:</code></td>
<td>🐇 <code>:rabbit2:</code></td>
<td>🐉 <code>:dragon:</code></td>
</tr>
<tr>
<td>🐐 <code>:goat:</code></td>
<td>🐓 <code>:rooster:</code></td>
<td>🐕 <code>:dog2:</code></td>
</tr>
<tr>
<td>🐖 <code>:pig2:</code></td>
<td>🐁 <code>:mouse2:</code></td>
<td>🐂 <code>:ox:</code></td>
</tr>
<tr>
<td>🐲 <code>:dragon_face:</code></td>
<td>🐡 <code>:blowfish:</code></td>
<td>🐊 <code>:crocodile:</code></td>
</tr>
<tr>
<td>🐪 <code>:dromedary_camel:</code></td>
<td>🐆 <code>:leopard:</code></td>
<td>🐈 <code>:cat2:</code></td>
</tr>
<tr>
<td>🐩 <code>:poodle:</code></td>
<td>🐾 <code>:paw_prints:</code></td>
<td>💐 <code>:bouquet:</code></td>
</tr>
<tr>
<td>🌸 <code>:cherry_blossom:</code></td>
<td>🌷 <code>:tulip:</code></td>
<td>🍀 <code>:four_leaf_clover:</code></td>
</tr>
<tr>
<td>🌹 <code>:rose:</code></td>
<td>🌻 <code>:sunflower:</code></td>
<td>🌺 <code>:hibiscus:</code></td>
</tr>
<tr>
<td>🍁 <code>:maple_leaf:</code></td>
<td>🍃 <code>:leaves:</code></td>
<td>🍂 <code>:fallen_leaf:</code></td>
</tr>
<tr>
<td>🌿 <code>:herb:</code></td>
<td>🍄 <code>:mushroom:</code></td>
<td>🌵 <code>:cactus:</code></td>
</tr>
<tr>
<td>🌴 <code>:palm_tree:</code></td>
<td>🌲 <code>:evergreen_tree:</code></td>
<td>🌳 <code>:deciduous_tree:</code></td>
</tr>
<tr>
<td>🌰 <code>:chestnut:</code></td>
<td>🌱 <code>:seedling:</code></td>
<td>🌼 <code>:blossom:</code></td>
</tr>
<tr>
<td>🌾 <code>:ear_of_rice:</code></td>
<td>🐚 <code>:shell:</code></td>
<td>🌐 <code>:globe_with_meridians:</code></td>
</tr>
<tr>
<td>🌞 <code>:sun_with_face:</code></td>
<td>🌝 <code>:full_moon_with_face:</code></td>
<td>🌚 <code>:new_moon_with_face:</code></td>
</tr>
<tr>
<td>🌑 <code>:new_moon:</code></td>
<td>🌒 <code>:waxing_crescent_moon:</code></td>
<td>🌓 <code>:first_quarter_moon:</code></td>
</tr>
<tr>
<td>🌔 <code>:waxing_gibbous_moon:</code></td>
<td>🌕 <code>:full_moon:</code></td>
<td>🌖 <code>:waning_gibbous_moon:</code></td>
</tr>
<tr>
<td>🌗 <code>:last_quarter_moon:</code></td>
<td>🌘 <code>:waning_crescent_moon:</code></td>
<td>🌜 <code>:last_quarter_moon_with_face:</code></td>
</tr>
<tr>
<td>🌛 <code>:first_quarter_moon_with_face:</code></td>
<td>🌔 <code>:moon:</code></td>
<td>🌍 <code>:earth_africa:</code></td>
</tr>
<tr>
<td>🌎 <code>:earth_americas:</code></td>
<td>🌏 <code>:earth_asia:</code></td>
<td>🌋 <code>:volcano:</code></td>
</tr>
<tr>
<td>🌌 <code>:milky_way:</code></td>
<td>⛅ <code>:partly_sunny:</code></td>
<td>:octocat: <code>:octocat:</code></td>
</tr>
<tr>
<td>:squirrel: <code>:squirrel:</code></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="objects" tabindex="-1">Objects <a class="header-anchor" href="#objects" aria-label="Permalink to &quot;Objects&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>🎍 <code>:bamboo:</code></th>
<th>💝 <code>:gift_heart:</code></th>
<th>🎎 <code>:dolls:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>🎒 <code>:school_satchel:</code></td>
<td>🎓 <code>:mortar_board:</code></td>
<td>🎏 <code>:flags:</code></td>
</tr>
<tr>
<td>🎆 <code>:fireworks:</code></td>
<td>🎇 <code>:sparkler:</code></td>
<td>🎐 <code>:wind_chime:</code></td>
</tr>
<tr>
<td>🎑 <code>:rice_scene:</code></td>
<td>🎃 <code>:jack_o_lantern:</code></td>
<td>👻 <code>:ghost:</code></td>
</tr>
<tr>
<td>🎅 <code>:santa:</code></td>
<td>🎄 <code>:christmas_tree:</code></td>
<td>🎁 <code>:gift:</code></td>
</tr>
<tr>
<td>🔔 <code>:bell:</code></td>
<td>🔕 <code>:no_bell:</code></td>
<td>🎋 <code>:tanabata_tree:</code></td>
</tr>
<tr>
<td>🎉 <code>:tada:</code></td>
<td>🎊 <code>:confetti_ball:</code></td>
<td>🎈 <code>:balloon:</code></td>
</tr>
<tr>
<td>🔮 <code>:crystal_ball:</code></td>
<td>💿 <code>:cd:</code></td>
<td>📀 <code>:dvd:</code></td>
</tr>
<tr>
<td>💾 <code>:floppy_disk:</code></td>
<td>📷 <code>:camera:</code></td>
<td>📹 <code>:video_camera:</code></td>
</tr>
<tr>
<td>🎥 <code>:movie_camera:</code></td>
<td>💻 <code>:computer:</code></td>
<td>📺 <code>:tv:</code></td>
</tr>
<tr>
<td>📱 <code>:iphone:</code></td>
<td>☎️ <code>:phone:</code></td>
<td>☎️ <code>:telephone:</code></td>
</tr>
<tr>
<td>📞 <code>:telephone_receiver:</code></td>
<td>📟 <code>:pager:</code></td>
<td>📠 <code>:fax:</code></td>
</tr>
<tr>
<td>💽 <code>:minidisc:</code></td>
<td>📼 <code>:vhs:</code></td>
<td>🔉 <code>:sound:</code></td>
</tr>
<tr>
<td>🔈 <code>:speaker:</code></td>
<td>🔇 <code>:mute:</code></td>
<td>📢 <code>:loudspeaker:</code></td>
</tr>
<tr>
<td>📣 <code>:mega:</code></td>
<td>⌛ <code>:hourglass:</code></td>
<td>⏳ <code>:hourglass_flowing_sand:</code></td>
</tr>
<tr>
<td>⏰ <code>:alarm_clock:</code></td>
<td>⌚ <code>:watch:</code></td>
<td>📻 <code>:radio:</code></td>
</tr>
<tr>
<td>📡 <code>:satellite:</code></td>
<td>➿ <code>:loop:</code></td>
<td>🔍 <code>:mag:</code></td>
</tr>
<tr>
<td>🔎 <code>:mag_right:</code></td>
<td>🔓 <code>:unlock:</code></td>
<td>🔒 <code>:lock:</code></td>
</tr>
<tr>
<td>🔏 <code>:lock_with_ink_pen:</code></td>
<td>🔐 <code>:closed_lock_with_key:</code></td>
<td>🔑 <code>:key:</code></td>
</tr>
<tr>
<td>💡 <code>:bulb:</code></td>
<td>🔦 <code>:flashlight:</code></td>
<td>🔆 <code>:high_brightness:</code></td>
</tr>
<tr>
<td>🔅 <code>:low_brightness:</code></td>
<td>🔌 <code>:electric_plug:</code></td>
<td>🔋 <code>:battery:</code></td>
</tr>
<tr>
<td>📲 <code>:calling:</code></td>
<td>📧 <code>:email:</code></td>
<td>📫 <code>:mailbox:</code></td>
</tr>
<tr>
<td>📮 <code>:postbox:</code></td>
<td>🛀 <code>:bath:</code></td>
<td>🛁 <code>:bathtub:</code></td>
</tr>
<tr>
<td>🚿 <code>:shower:</code></td>
<td>🚽 <code>:toilet:</code></td>
<td>🔧 <code>:wrench:</code></td>
</tr>
<tr>
<td>🔩 <code>:nut_and_bolt:</code></td>
<td>🔨 <code>:hammer:</code></td>
<td>💺 <code>:seat:</code></td>
</tr>
<tr>
<td>💰 <code>:moneybag:</code></td>
<td>💴 <code>:yen:</code></td>
<td>💵 <code>:dollar:</code></td>
</tr>
<tr>
<td>💷 <code>:pound:</code></td>
<td>💶 <code>:euro:</code></td>
<td>💳 <code>:credit_card:</code></td>
</tr>
<tr>
<td>💸 <code>:money_with_wings:</code></td>
<td>📧 <code>:e-mail:</code></td>
<td>📥 <code>:inbox_tray:</code></td>
</tr>
<tr>
<td>📤 <code>:outbox_tray:</code></td>
<td>✉️ <code>:envelope:</code></td>
<td>📨 <code>:incoming_envelope:</code></td>
</tr>
<tr>
<td>📯 <code>:postal_horn:</code></td>
<td>📪 <code>:mailbox_closed:</code></td>
<td>📬 <code>:mailbox_with_mail:</code></td>
</tr>
<tr>
<td>📭 <code>:mailbox_with_no_mail:</code></td>
<td>🚪 <code>:door:</code></td>
<td>🚬 <code>:smoking:</code></td>
</tr>
<tr>
<td>💣 <code>:bomb:</code></td>
<td>🔫 <code>:gun:</code></td>
<td>🔪 <code>:hocho:</code></td>
</tr>
<tr>
<td>💊 <code>:pill:</code></td>
<td>💉 <code>:syringe:</code></td>
<td>📄 <code>:page_facing_up:</code></td>
</tr>
<tr>
<td>📃 <code>:page_with_curl:</code></td>
<td>📑 <code>:bookmark_tabs:</code></td>
<td>📊 <code>:bar_chart:</code></td>
</tr>
<tr>
<td>📈 <code>:chart_with_upwards_trend:</code></td>
<td>📉 <code>:chart_with_downwards_trend:</code></td>
<td>📜 <code>:scroll:</code></td>
</tr>
<tr>
<td>📋 <code>:clipboard:</code></td>
<td>📆 <code>:calendar:</code></td>
<td>📅 <code>:date:</code></td>
</tr>
<tr>
<td>📇 <code>:card_index:</code></td>
<td>📁 <code>:file_folder:</code></td>
<td>📂 <code>:open_file_folder:</code></td>
</tr>
<tr>
<td>✂️ <code>:scissors:</code></td>
<td>📌 <code>:pushpin:</code></td>
<td>📎 <code>:paperclip:</code></td>
</tr>
<tr>
<td>✒️ <code>:black_nib:</code></td>
<td>✏️ <code>:pencil2:</code></td>
<td>📏 <code>:straight_ruler:</code></td>
</tr>
<tr>
<td>📐 <code>:triangular_ruler:</code></td>
<td>📕 <code>:closed_book:</code></td>
<td>📗 <code>:green_book:</code></td>
</tr>
<tr>
<td>📘 <code>:blue_book:</code></td>
<td>📙 <code>:orange_book:</code></td>
<td>📓 <code>:notebook:</code></td>
</tr>
<tr>
<td>📔 <code>:notebook_with_decorative_cover:</code></td>
<td>📒 <code>:ledger:</code></td>
<td>📚 <code>:books:</code></td>
</tr>
<tr>
<td>🔖 <code>:bookmark:</code></td>
<td>📛 <code>:name_badge:</code></td>
<td>🔬 <code>:microscope:</code></td>
</tr>
<tr>
<td>🔭 <code>:telescope:</code></td>
<td>📰 <code>:newspaper:</code></td>
<td>🏈 <code>:football:</code></td>
</tr>
<tr>
<td>🏀 <code>:basketball:</code></td>
<td>⚽ <code>:soccer:</code></td>
<td>⚾ <code>:baseball:</code></td>
</tr>
<tr>
<td>🎾 <code>:tennis:</code></td>
<td>🎱 <code>:8ball:</code></td>
<td>🏉 <code>:rugby_football:</code></td>
</tr>
<tr>
<td>🎳 <code>:bowling:</code></td>
<td>⛳ <code>:golf:</code></td>
<td>🚵 <code>:mountain_bicyclist:</code></td>
</tr>
<tr>
<td>🚴 <code>:bicyclist:</code></td>
<td>🏇 <code>:horse_racing:</code></td>
<td>🏂 <code>:snowboarder:</code></td>
</tr>
<tr>
<td>🏊 <code>:swimmer:</code></td>
<td>🏄 <code>:surfer:</code></td>
<td>🎿 <code>:ski:</code></td>
</tr>
<tr>
<td>♠️ <code>:spades:</code></td>
<td>♥️ <code>:hearts:</code></td>
<td>♣️ <code>:clubs:</code></td>
</tr>
<tr>
<td>♦️ <code>:diamonds:</code></td>
<td>💎 <code>:gem:</code></td>
<td>💍 <code>:ring:</code></td>
</tr>
<tr>
<td>🏆 <code>:trophy:</code></td>
<td>🎼 <code>:musical_score:</code></td>
<td>🎹 <code>:musical_keyboard:</code></td>
</tr>
<tr>
<td>🎻 <code>:violin:</code></td>
<td>👾 <code>:space_invader:</code></td>
<td>🎮 <code>:video_game:</code></td>
</tr>
<tr>
<td>🃏 <code>:black_joker:</code></td>
<td>🎴 <code>:flower_playing_cards:</code></td>
<td>🎲 <code>:game_die:</code></td>
</tr>
<tr>
<td>🎯 <code>:dart:</code></td>
<td>🀄 <code>:mahjong:</code></td>
<td>🎬 <code>:clapper:</code></td>
</tr>
<tr>
<td>📝 <code>:memo:</code></td>
<td>📝 <code>:pencil:</code></td>
<td>📖 <code>:book:</code></td>
</tr>
<tr>
<td>🎨 <code>:art:</code></td>
<td>🎤 <code>:microphone:</code></td>
<td>🎧 <code>:headphones:</code></td>
</tr>
<tr>
<td>🎺 <code>:trumpet:</code></td>
<td>🎷 <code>:saxophone:</code></td>
<td>🎸 <code>:guitar:</code></td>
</tr>
<tr>
<td>👞 <code>:shoe:</code></td>
<td>👡 <code>:sandal:</code></td>
<td>👠 <code>:high_heel:</code></td>
</tr>
<tr>
<td>💄 <code>:lipstick:</code></td>
<td>👢 <code>:boot:</code></td>
<td>👕 <code>:shirt:</code></td>
</tr>
<tr>
<td>👕 <code>:tshirt:</code></td>
<td>👔 <code>:necktie:</code></td>
<td>👚 <code>:womans_clothes:</code></td>
</tr>
<tr>
<td>👗 <code>:dress:</code></td>
<td>🎽 <code>:running_shirt_with_sash:</code></td>
<td>👖 <code>:jeans:</code></td>
</tr>
<tr>
<td>👘 <code>:kimono:</code></td>
<td>👙 <code>:bikini:</code></td>
<td>🎀 <code>:ribbon:</code></td>
</tr>
<tr>
<td>🎩 <code>:tophat:</code></td>
<td>👑 <code>:crown:</code></td>
<td>👒 <code>:womans_hat:</code></td>
</tr>
<tr>
<td>👞 <code>:mans_shoe:</code></td>
<td>🌂 <code>:closed_umbrella:</code></td>
<td>💼 <code>:briefcase:</code></td>
</tr>
<tr>
<td>👜 <code>:handbag:</code></td>
<td>👝 <code>:pouch:</code></td>
<td>👛 <code>:purse:</code></td>
</tr>
<tr>
<td>👓 <code>:eyeglasses:</code></td>
<td>🎣 <code>:fishing_pole_and_fish:</code></td>
<td>☕ <code>:coffee:</code></td>
</tr>
<tr>
<td>🍵 <code>:tea:</code></td>
<td>🍶 <code>:sake:</code></td>
<td>🍼 <code>:baby_bottle:</code></td>
</tr>
<tr>
<td>🍺 <code>:beer:</code></td>
<td>🍻 <code>:beers:</code></td>
<td>🍸 <code>:cocktail:</code></td>
</tr>
<tr>
<td>🍹 <code>:tropical_drink:</code></td>
<td>🍷 <code>:wine_glass:</code></td>
<td>🍴 <code>:fork_and_knife:</code></td>
</tr>
<tr>
<td>🍕 <code>:pizza:</code></td>
<td>🍔 <code>:hamburger:</code></td>
<td>🍟 <code>:fries:</code></td>
</tr>
<tr>
<td>🍗 <code>:poultry_leg:</code></td>
<td>🍖 <code>:meat_on_bone:</code></td>
<td>🍝 <code>:spaghetti:</code></td>
</tr>
<tr>
<td>🍛 <code>:curry:</code></td>
<td>🍤 <code>:fried_shrimp:</code></td>
<td>🍱 <code>:bento:</code></td>
</tr>
<tr>
<td>🍣 <code>:sushi:</code></td>
<td>🍥 <code>:fish_cake:</code></td>
<td>🍙 <code>:rice_ball:</code></td>
</tr>
<tr>
<td>🍘 <code>:rice_cracker:</code></td>
<td>🍚 <code>:rice:</code></td>
<td>🍜 <code>:ramen:</code></td>
</tr>
<tr>
<td>🍲 <code>:stew:</code></td>
<td>🍢 <code>:oden:</code></td>
<td>🍡 <code>:dango:</code></td>
</tr>
<tr>
<td>🥚 <code>:egg:</code></td>
<td>🍞 <code>:bread:</code></td>
<td>🍩 <code>:doughnut:</code></td>
</tr>
<tr>
<td>🍮 <code>:custard:</code></td>
<td>🍦 <code>:icecream:</code></td>
<td>🍨 <code>:ice_cream:</code></td>
</tr>
<tr>
<td>🍧 <code>:shaved_ice:</code></td>
<td>🎂 <code>:birthday:</code></td>
<td>🍰 <code>:cake:</code></td>
</tr>
<tr>
<td>🍪 <code>:cookie:</code></td>
<td>🍫 <code>:chocolate_bar:</code></td>
<td>🍬 <code>:candy:</code></td>
</tr>
<tr>
<td>🍭 <code>:lollipop:</code></td>
<td>🍯 <code>:honey_pot:</code></td>
<td>🍎 <code>:apple:</code></td>
</tr>
<tr>
<td>🍏 <code>:green_apple:</code></td>
<td>🍊 <code>:tangerine:</code></td>
<td>🍋 <code>:lemon:</code></td>
</tr>
<tr>
<td>🍒 <code>:cherries:</code></td>
<td>🍇 <code>:grapes:</code></td>
<td>🍉 <code>:watermelon:</code></td>
</tr>
<tr>
<td>🍓 <code>:strawberry:</code></td>
<td>🍑 <code>:peach:</code></td>
<td>🍈 <code>:melon:</code></td>
</tr>
<tr>
<td>🍌 <code>:banana:</code></td>
<td>🍐 <code>:pear:</code></td>
<td>🍍 <code>:pineapple:</code></td>
</tr>
<tr>
<td>🍠 <code>:sweet_potato:</code></td>
<td>🍆 <code>:eggplant:</code></td>
<td>🍅 <code>:tomato:</code></td>
</tr>
<tr>
<td>🌽 <code>:corn:</code></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="places" tabindex="-1">Places <a class="header-anchor" href="#places" aria-label="Permalink to &quot;Places&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>🏠 <code>:house:</code></th>
<th>🏡 <code>:house_with_garden:</code></th>
<th>🏫 <code>:school:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>🏢 <code>:office:</code></td>
<td>🏣 <code>:post_office:</code></td>
<td>🏥 <code>:hospital:</code></td>
</tr>
<tr>
<td>🏦 <code>:bank:</code></td>
<td>🏪 <code>:convenience_store:</code></td>
<td>🏩 <code>:love_hotel:</code></td>
</tr>
<tr>
<td>🏨 <code>:hotel:</code></td>
<td>💒 <code>:wedding:</code></td>
<td>⛪ <code>:church:</code></td>
</tr>
<tr>
<td>🏬 <code>:department_store:</code></td>
<td>🏤 <code>:european_post_office:</code></td>
<td>🌇 <code>:city_sunrise:</code></td>
</tr>
<tr>
<td>🌆 <code>:city_sunset:</code></td>
<td>🏯 <code>:japanese_castle:</code></td>
<td>🏰 <code>:european_castle:</code></td>
</tr>
<tr>
<td>⛺ <code>:tent:</code></td>
<td>🏭 <code>:factory:</code></td>
<td>🗼 <code>:tokyo_tower:</code></td>
</tr>
<tr>
<td>🗾 <code>:japan:</code></td>
<td>🗻 <code>:mount_fuji:</code></td>
<td>🌄 <code>:sunrise_over_mountains:</code></td>
</tr>
<tr>
<td>🌅 <code>:sunrise:</code></td>
<td>🌠 <code>:stars:</code></td>
<td>🗽 <code>:statue_of_liberty:</code></td>
</tr>
<tr>
<td>🌉 <code>:bridge_at_night:</code></td>
<td>🎠 <code>:carousel_horse:</code></td>
<td>🌈 <code>:rainbow:</code></td>
</tr>
<tr>
<td>🎡 <code>:ferris_wheel:</code></td>
<td>⛲ <code>:fountain:</code></td>
<td>🎢 <code>:roller_coaster:</code></td>
</tr>
<tr>
<td>🚢 <code>:ship:</code></td>
<td>🚤 <code>:speedboat:</code></td>
<td>⛵ <code>:boat:</code></td>
</tr>
<tr>
<td>⛵ <code>:sailboat:</code></td>
<td>🚣 <code>:rowboat:</code></td>
<td>⚓ <code>:anchor:</code></td>
</tr>
<tr>
<td>🚀 <code>:rocket:</code></td>
<td>✈️ <code>:airplane:</code></td>
<td>🚁 <code>:helicopter:</code></td>
</tr>
<tr>
<td>🚂 <code>:steam_locomotive:</code></td>
<td>🚊 <code>:tram:</code></td>
<td>🚞 <code>:mountain_railway:</code></td>
</tr>
<tr>
<td>🚲 <code>:bike:</code></td>
<td>🚡 <code>:aerial_tramway:</code></td>
<td>🚟 <code>:suspension_railway:</code></td>
</tr>
<tr>
<td>🚠 <code>:mountain_cableway:</code></td>
<td>🚜 <code>:tractor:</code></td>
<td>🚙 <code>:blue_car:</code></td>
</tr>
<tr>
<td>🚘 <code>:oncoming_automobile:</code></td>
<td>🚗 <code>:car:</code></td>
<td>🚗 <code>:red_car:</code></td>
</tr>
<tr>
<td>🚕 <code>:taxi:</code></td>
<td>🚖 <code>:oncoming_taxi:</code></td>
<td>🚛 <code>:articulated_lorry:</code></td>
</tr>
<tr>
<td>🚌 <code>:bus:</code></td>
<td>🚍 <code>:oncoming_bus:</code></td>
<td>🚨 <code>:rotating_light:</code></td>
</tr>
<tr>
<td>🚓 <code>:police_car:</code></td>
<td>🚔 <code>:oncoming_police_car:</code></td>
<td>🚒 <code>:fire_engine:</code></td>
</tr>
<tr>
<td>🚑 <code>:ambulance:</code></td>
<td>🚐 <code>:minibus:</code></td>
<td>🚚 <code>:truck:</code></td>
</tr>
<tr>
<td>🚋 <code>:train:</code></td>
<td>🚉 <code>:station:</code></td>
<td>🚆 <code>:train2:</code></td>
</tr>
<tr>
<td>🚅 <code>:bullettrain_front:</code></td>
<td>🚄 <code>:bullettrain_side:</code></td>
<td>🚈 <code>:light_rail:</code></td>
</tr>
<tr>
<td>🚝 <code>:monorail:</code></td>
<td>🚃 <code>:railway_car:</code></td>
<td>🚎 <code>:trolleybus:</code></td>
</tr>
<tr>
<td>🎫 <code>:ticket:</code></td>
<td>⛽ <code>:fuelpump:</code></td>
<td>🚦 <code>:vertical_traffic_light:</code></td>
</tr>
<tr>
<td>🚥 <code>:traffic_light:</code></td>
<td>⚠️ <code>:warning:</code></td>
<td>🚧 <code>:construction:</code></td>
</tr>
<tr>
<td>🔰 <code>:beginner:</code></td>
<td>🏧 <code>:atm:</code></td>
<td>🎰 <code>:slot_machine:</code></td>
</tr>
<tr>
<td>🚏 <code>:busstop:</code></td>
<td>💈 <code>:barber:</code></td>
<td>♨️ <code>:hotsprings:</code></td>
</tr>
<tr>
<td>🏁 <code>:checkered_flag:</code></td>
<td>🎌 <code>:crossed_flags:</code></td>
<td>🏮 <code>:izakaya_lantern:</code></td>
</tr>
<tr>
<td>🗿 <code>:moyai:</code></td>
<td>🎪 <code>:circus_tent:</code></td>
<td>🎭 <code>:performing_arts:</code></td>
</tr>
<tr>
<td>📍 <code>:round_pushpin:</code></td>
<td>🚩 <code>:triangular_flag_on_post:</code></td>
<td>🇯🇵 <code>:jp:</code></td>
</tr>
<tr>
<td>🇰🇷 <code>:kr:</code></td>
<td>🇨🇳 <code>:cn:</code></td>
<td>🇺🇸 <code>:us:</code></td>
</tr>
<tr>
<td>🇫🇷 <code>:fr:</code></td>
<td>🇪🇸 <code>:es:</code></td>
<td>🇮🇹 <code>:it:</code></td>
</tr>
<tr>
<td>🇷🇺 <code>:ru:</code></td>
<td>🇬🇧 <code>:gb:</code></td>
<td>🇬🇧 <code>:uk:</code></td>
</tr>
<tr>
<td>🇩🇪 <code>:de:</code></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h2 id="symbols" tabindex="-1">Symbols <a class="header-anchor" href="#symbols" aria-label="Permalink to &quot;Symbols&quot;">&ZeroWidthSpace;</a></h2>
<table>
<thead>
<tr>
<th>1️⃣ <code>:one:</code></th>
<th>2️⃣ <code>:two:</code></th>
<th>3️⃣ <code>:three:</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>4️⃣ <code>:four:</code></td>
<td>5️⃣ <code>:five:</code></td>
<td>6️⃣ <code>:six:</code></td>
</tr>
<tr>
<td>7️⃣ <code>:seven:</code></td>
<td>8️⃣ <code>:eight:</code></td>
<td>9️⃣ <code>:nine:</code></td>
</tr>
<tr>
<td>🔟 <code>:keycap_ten:</code></td>
<td>🔢 <code>:1234:</code></td>
<td>0️⃣ <code>:zero:</code></td>
</tr>
<tr>
<td>#️⃣ <code>:hash:</code></td>
<td>🔣 <code>:symbols:</code></td>
<td>◀️ <code>:arrow_backward:</code></td>
</tr>
<tr>
<td>⬇️ <code>:arrow_down:</code></td>
<td>▶️ <code>:arrow_forward:</code></td>
<td>⬅️ <code>:arrow_left:</code></td>
</tr>
<tr>
<td>🔠 <code>:capital_abcd:</code></td>
<td>🔡 <code>:abcd:</code></td>
<td>🔤 <code>:abc:</code></td>
</tr>
<tr>
<td>↙️ <code>:arrow_lower_left:</code></td>
<td>↘️ <code>:arrow_lower_right:</code></td>
<td>➡️ <code>:arrow_right:</code></td>
</tr>
<tr>
<td>⬆️ <code>:arrow_up:</code></td>
<td>↖️ <code>:arrow_upper_left:</code></td>
<td>↗️ <code>:arrow_upper_right:</code></td>
</tr>
<tr>
<td>⏬ <code>:arrow_double_down:</code></td>
<td>⏫ <code>:arrow_double_up:</code></td>
<td>🔽 <code>:arrow_down_small:</code></td>
</tr>
<tr>
<td>⤵️ <code>:arrow_heading_down:</code></td>
<td>⤴️ <code>:arrow_heading_up:</code></td>
<td>↩️ <code>:leftwards_arrow_with_hook:</code></td>
</tr>
<tr>
<td>↪️ <code>:arrow_right_hook:</code></td>
<td>↔️ <code>:left_right_arrow:</code></td>
<td>↕️ <code>:arrow_up_down:</code></td>
</tr>
<tr>
<td>🔼 <code>:arrow_up_small:</code></td>
<td>🔃 <code>:arrows_clockwise:</code></td>
<td>🔄 <code>:arrows_counterclockwise:</code></td>
</tr>
<tr>
<td>⏪ <code>:rewind:</code></td>
<td>⏩ <code>:fast_forward:</code></td>
<td>ℹ️ <code>:information_source:</code></td>
</tr>
<tr>
<td>🆗 <code>:ok:</code></td>
<td>🔀 <code>:twisted_rightwards_arrows:</code></td>
<td>🔁 <code>:repeat:</code></td>
</tr>
<tr>
<td>🔂 <code>:repeat_one:</code></td>
<td>🆕 <code>:new:</code></td>
<td>🔝 <code>:top:</code></td>
</tr>
<tr>
<td>🆙 <code>:up:</code></td>
<td>🆒 <code>:cool:</code></td>
<td>🆓 <code>:free:</code></td>
</tr>
<tr>
<td>🆖 <code>:ng:</code></td>
<td>🎦 <code>:cinema:</code></td>
<td>🈁 <code>:koko:</code></td>
</tr>
<tr>
<td>📶 <code>:signal_strength:</code></td>
<td>:u5272: <code>:u5272:</code></td>
<td>:u5408: <code>:u5408:</code></td>
</tr>
<tr>
<td>:u55b6: <code>:u55b6:</code></td>
<td>:u6307: <code>:u6307:</code></td>
<td>:u6708: <code>:u6708:</code></td>
</tr>
<tr>
<td>:u6709: <code>:u6709:</code></td>
<td>🈵 <code>:u6e80:</code></td>
<td>:u7121: <code>:u7121:</code></td>
</tr>
<tr>
<td>:u7533: <code>:u7533:</code></td>
<td>:u7a7a: <code>:u7a7a:</code></td>
<td>:u7981: <code>:u7981:</code></td>
</tr>
<tr>
<td>🈂️ <code>:sa:</code></td>
<td>🚻 <code>:restroom:</code></td>
<td>🚹 <code>:mens:</code></td>
</tr>
<tr>
<td>🚺 <code>:womens:</code></td>
<td>🚼 <code>:baby_symbol:</code></td>
<td>🚭 <code>:no_smoking:</code></td>
</tr>
<tr>
<td>🅿️ <code>:parking:</code></td>
<td>♿ <code>:wheelchair:</code></td>
<td>🚇 <code>:metro:</code></td>
</tr>
<tr>
<td>🛄 <code>:baggage_claim:</code></td>
<td>🉑 <code>:accept:</code></td>
<td>🚾 <code>:wc:</code></td>
</tr>
<tr>
<td>🚰 <code>:potable_water:</code></td>
<td>🚮 <code>:put_litter_in_its_place:</code></td>
<td>㊙️ <code>:secret:</code></td>
</tr>
<tr>
<td>㊗️ <code>:congratulations:</code></td>
<td>Ⓜ️ <code>:m:</code></td>
<td>🛂 <code>:passport_control:</code></td>
</tr>
<tr>
<td>🛅 <code>:left_luggage:</code></td>
<td>🛃 <code>:customs:</code></td>
<td>🉐 <code>:ideograph_advantage:</code></td>
</tr>
<tr>
<td>🆑 <code>:cl:</code></td>
<td>🆘 <code>:sos:</code></td>
<td>🆔 <code>:id:</code></td>
</tr>
<tr>
<td>🚫 <code>:no_entry_sign:</code></td>
<td>🔞 <code>:underage:</code></td>
<td>📵 <code>:no_mobile_phones:</code></td>
</tr>
<tr>
<td>🚯 <code>:do_not_litter:</code></td>
<td>🚱 <code>:non-potable_water:</code></td>
<td>🚳 <code>:no_bicycles:</code></td>
</tr>
<tr>
<td>🚷 <code>:no_pedestrians:</code></td>
<td>🚸 <code>:children_crossing:</code></td>
<td>⛔ <code>:no_entry:</code></td>
</tr>
<tr>
<td>✳️ <code>:eight_spoked_asterisk:</code></td>
<td>✴️ <code>:eight_pointed_black_star:</code></td>
<td>💟 <code>:heart_decoration:</code></td>
</tr>
<tr>
<td>🆚 <code>:vs:</code></td>
<td>📳 <code>:vibration_mode:</code></td>
<td>📴 <code>:mobile_phone_off:</code></td>
</tr>
<tr>
<td>💹 <code>:chart:</code></td>
<td>💱 <code>:currency_exchange:</code></td>
<td>♈ <code>:aries:</code></td>
</tr>
<tr>
<td>♉ <code>:taurus:</code></td>
<td>♊ <code>:gemini:</code></td>
<td>♋ <code>:cancer:</code></td>
</tr>
<tr>
<td>♌ <code>:leo:</code></td>
<td>♍ <code>:virgo:</code></td>
<td>♎ <code>:libra:</code></td>
</tr>
<tr>
<td>♏ <code>:scorpius:</code></td>
<td>♐ <code>:sagittarius:</code></td>
<td>♑ <code>:capricorn:</code></td>
</tr>
<tr>
<td>♒ <code>:aquarius:</code></td>
<td>♓ <code>:pisces:</code></td>
<td>⛎ <code>:ophiuchus:</code></td>
</tr>
<tr>
<td>🔯 <code>:six_pointed_star:</code></td>
<td>❎ <code>:negative_squared_cross_mark:</code></td>
<td>🅰️ <code>:a:</code></td>
</tr>
<tr>
<td>🅱️ <code>:b:</code></td>
<td>🆎 <code>:ab:</code></td>
<td>🅾️ <code>:o2:</code></td>
</tr>
<tr>
<td>💠 <code>:diamond_shape_with_a_dot_inside:</code></td>
<td>♻️ <code>:recycle:</code></td>
<td>🔚 <code>:end:</code></td>
</tr>
<tr>
<td>🔛 <code>:on:</code></td>
<td>🔜 <code>:soon:</code></td>
<td>🕐 <code>:clock1:</code></td>
</tr>
<tr>
<td>🕜 <code>:clock130:</code></td>
<td>🕙 <code>:clock10:</code></td>
<td>🕥 <code>:clock1030:</code></td>
</tr>
<tr>
<td>🕚 <code>:clock11:</code></td>
<td>🕦 <code>:clock1130:</code></td>
<td>🕛 <code>:clock12:</code></td>
</tr>
<tr>
<td>🕧 <code>:clock1230:</code></td>
<td>🕑 <code>:clock2:</code></td>
<td>🕝 <code>:clock230:</code></td>
</tr>
<tr>
<td>🕒 <code>:clock3:</code></td>
<td>🕞 <code>:clock330:</code></td>
<td>🕓 <code>:clock4:</code></td>
</tr>
<tr>
<td>🕟 <code>:clock430:</code></td>
<td>🕔 <code>:clock5:</code></td>
<td>🕠 <code>:clock530:</code></td>
</tr>
<tr>
<td>🕕 <code>:clock6:</code></td>
<td>🕡 <code>:clock630:</code></td>
<td>🕖 <code>:clock7:</code></td>
</tr>
<tr>
<td>🕢 <code>:clock730:</code></td>
<td>🕗 <code>:clock8:</code></td>
<td>🕣 <code>:clock830:</code></td>
</tr>
<tr>
<td>🕘 <code>:clock9:</code></td>
<td>🕤 <code>:clock930:</code></td>
<td>💲 <code>:heavy_dollar_sign:</code></td>
</tr>
<tr>
<td>©️ <code>:copyright:</code></td>
<td>®️ <code>:registered:</code></td>
<td>™️ <code>:tm:</code></td>
</tr>
<tr>
<td>❌ <code>:x:</code></td>
<td>❗ <code>:heavy_exclamation_mark:</code></td>
<td>‼️ <code>:bangbang:</code></td>
</tr>
<tr>
<td>⁉️ <code>:interrobang:</code></td>
<td>⭕ <code>:o:</code></td>
<td>✖️ <code>:heavy_multiplication_x:</code></td>
</tr>
<tr>
<td>➕ <code>:heavy_plus_sign:</code></td>
<td>➖ <code>:heavy_minus_sign:</code></td>
<td>➗ <code>:heavy_division_sign:</code></td>
</tr>
<tr>
<td>💮 <code>:white_flower:</code></td>
<td>💯 <code>:100:</code></td>
<td>✔️ <code>:heavy_check_mark:</code></td>
</tr>
<tr>
<td>☑️ <code>:ballot_box_with_check:</code></td>
<td>🔘 <code>:radio_button:</code></td>
<td>🔗 <code>:link:</code></td>
</tr>
<tr>
<td>➰ <code>:curly_loop:</code></td>
<td>〰️ <code>:wavy_dash:</code></td>
<td>〽️ <code>:part_alternation_mark:</code></td>
</tr>
<tr>
<td>🔱 <code>:trident:</code></td>
<td>:black_square: <code>:black_square:</code></td>
<td>:white_square: <code>:white_square:</code></td>
</tr>
<tr>
<td>✅ <code>:white_check_mark:</code></td>
<td>🔲 <code>:black_square_button:</code></td>
<td>🔳 <code>:white_square_button:</code></td>
</tr>
<tr>
<td>⚫ <code>:black_circle:</code></td>
<td>⚪ <code>:white_circle:</code></td>
<td>🔴 <code>:red_circle:</code></td>
</tr>
<tr>
<td>🔵 <code>:large_blue_circle:</code></td>
<td>🔷 <code>:large_blue_diamond:</code></td>
<td>🔶 <code>:large_orange_diamond:</code></td>
</tr>
<tr>
<td>🔹 <code>:small_blue_diamond:</code></td>
<td>🔸 <code>:small_orange_diamond:</code></td>
<td>🔺 <code>:small_red_triangle:</code></td>
</tr>
<tr>
<td>🔻 <code>:small_red_triangle_down:</code></td>
<td>:shipit: <code>:shipit:</code></td>
<td></td>
</tr>
</tbody>
</table>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[FinalCut 快捷键 ]]></title>
            <link>https://mobius.cool/tool/finalcut/</link>
            <guid>https://mobius.cool/tool/finalcut/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="finalcut-快捷键" tabindex="-1">FinalCut 快捷键 <a class="header-anchor" href="#finalcut-快捷键" aria-label="Permalink to &quot;FinalCut 快捷键&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="按键归纳" tabindex="-1">按键归纳 <a class="header-anchor" href="#按键归纳" aria-label="Permalink to &quot;按键归纳&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>方式有很多，按自己习惯用就好。</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">描述</th>
<th style="text-align:center">对应按键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">片段插入时间线</td>
<td style="text-align:center">E</td>
</tr>
<tr>
<td style="text-align:center">快速切割</td>
<td style="text-align:center">command + B</td>
</tr>
<tr>
<td style="text-align:center">多个片段叠加切割</td>
<td style="text-align:center">shift + command + B</td>
</tr>
<tr>
<td style="text-align:center">显示片段播放速度（变速）</td>
<td style="text-align:center">command + R</td>
</tr>
<tr>
<td style="text-align:center">变速时创建切割点</td>
<td style="text-align:center">shift + B</td>
</tr>
<tr>
<td style="text-align:center">放大/缩小时间线</td>
<td style="text-align:center">command +（-）</td>
</tr>
<tr>
<td style="text-align:center">插入空隙片段</td>
<td style="text-align:center">option + W</td>
</tr>
<tr>
<td style="text-align:center">调整音乐音量</td>
<td style="text-align:center">按住 R 选中调整的范围，可直接上下改变音量</td>
</tr>
<tr>
<td style="text-align:center">快速创建交叉叠化转场效果</td>
<td style="text-align:center">command + T</td>
</tr>
<tr>
<td style="text-align:center">复制片段</td>
<td style="text-align:center">command + C</td>
</tr>
<tr>
<td style="text-align:center">粘贴片段属性</td>
<td style="text-align:center">shift + command + V</td>
</tr>
</tbody>
</table>
]]></description>
            <content:encoded><![CDATA[<h1 id="finalcut-快捷键" tabindex="-1">FinalCut 快捷键 <a class="header-anchor" href="#finalcut-快捷键" aria-label="Permalink to &quot;FinalCut 快捷键&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="按键归纳" tabindex="-1">按键归纳 <a class="header-anchor" href="#按键归纳" aria-label="Permalink to &quot;按键归纳&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>方式有很多，按自己习惯用就好。</p>
</blockquote>
<table>
<thead>
<tr>
<th style="text-align:center">描述</th>
<th style="text-align:center">对应按键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">片段插入时间线</td>
<td style="text-align:center">E</td>
</tr>
<tr>
<td style="text-align:center">快速切割</td>
<td style="text-align:center">command + B</td>
</tr>
<tr>
<td style="text-align:center">多个片段叠加切割</td>
<td style="text-align:center">shift + command + B</td>
</tr>
<tr>
<td style="text-align:center">显示片段播放速度（变速）</td>
<td style="text-align:center">command + R</td>
</tr>
<tr>
<td style="text-align:center">变速时创建切割点</td>
<td style="text-align:center">shift + B</td>
</tr>
<tr>
<td style="text-align:center">放大/缩小时间线</td>
<td style="text-align:center">command +（-）</td>
</tr>
<tr>
<td style="text-align:center">插入空隙片段</td>
<td style="text-align:center">option + W</td>
</tr>
<tr>
<td style="text-align:center">调整音乐音量</td>
<td style="text-align:center">按住 R 选中调整的范围，可直接上下改变音量</td>
</tr>
<tr>
<td style="text-align:center">快速创建交叉叠化转场效果</td>
<td style="text-align:center">command + T</td>
</tr>
<tr>
<td style="text-align:center">复制片段</td>
<td style="text-align:center">command + C</td>
</tr>
<tr>
<td style="text-align:center">粘贴片段属性</td>
<td style="text-align:center">shift + command + V</td>
</tr>
</tbody>
</table>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[版本管理，Git 基础 ]]></title>
            <link>https://mobius.cool/tool/git/</link>
            <guid>https://mobius.cool/tool/git/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="版本管理-git-基础" tabindex="-1">版本管理，Git 基础 <a class="header-anchor" href="#版本管理-git-基础" aria-label="Permalink to &quot;版本管理，Git 基础&quot;">&ZeroWidthSpace;</a></h1>
<p>在学习版本管理之前，我们先认识一下什么是版本管理。那么我们首先需要了解什么是版本吧。</p>
<p>顺着这个思路，我们首先要知道，怎么去定一个版本，以及版本的格式是什么样的，它是不是遵循某种规范等等。这些问题在下面都会有详细的说明。</p>
<p>首先我们要了解语义化版本：</p>
<h2 id="语义化版本" tabindex="-1">语义化版本 <a class="header-anchor" href="#语义化版本" aria-label="Permalink to &quot;语义化版本&quot;">&ZeroWidthSpace;</a></h2>
<p>语义化版本是一个版本号的规范，他由 npm 的创始人提出，目的是为了解决版本号的混乱问题。其规范我们在下面详细说明。</p>
<p>相信在不少开源项目中，你都会看到这样的版本号：</p>
<ul>
<li>2.6.0</li>
<li>2.6.0-beta.1</li>
<li>2.0.0-rc.8</li>
<li>2.0.0-alpha.8</li>
</ul>
<p>他们都是符合语义化版本格式规范的版本号。那么不同的版本号又代表了什么呢？我们在下面详细说明。</p>
<h3 id="理解版本格式" tabindex="-1">理解版本格式 <a class="header-anchor" href="#理解版本格式" aria-label="Permalink to &quot;理解版本格式&quot;">&ZeroWidthSpace;</a></h3>
<p>版本格式：主版本号.次版本号.修订号，版本号递增规则如下：</p>
<ul>
<li>主版本号：当你做了不兼容的 API 修改</li>
<li>次版本号：当你做了向下兼容的功能性新增</li>
<li>修订号：当你做了向下兼容的问题修正先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。</li>
</ul>
<p>对于加在后面的延伸信息，我介绍几个常见的，并且他们之间是有顺序的：</p>
<ul>
<li>1.alpha：内部测试版本，可能会存在很多 bug，除非内部测试人员，否则不要使用。</li>
<li>2.beta：公测版本，消除了严重的错误，但还是存在一些缺陷，需要测试人员进一步测试，如果反馈的问题比较多，就需要再次进行 beta 版本的发布，直到基本上不存在问题。</li>
<li>3.rc：发行候选版本，基本上不存在问题，除非是重大问题，否则不会对代码进行修改，这个版本就是最终发布的版本。</li>
<li>4.release</li>
</ul>
<h3 id="发布版本可能遇到的问题" tabindex="-1">发布版本可能遇到的问题 <a class="header-anchor" href="#发布版本可能遇到的问题" aria-label="Permalink to &quot;发布版本可能遇到的问题&quot;">&ZeroWidthSpace;</a></h3>
<p>以下问题及解答来自<a href="https://semver.org/lang/zh-CN/" target="_blank" rel="noreferrer">语义化官方</a>：</p>
<p><strong>在 0.y.z 初始开发阶段，我该如何进行版本控制？</strong></p>
<p>最简单的做法是以 0.1.0 作为你的初始化开发版本，并在后续的每次发行时递增次版本号。</p>
<p><strong>对于公共 API，若即使是最小但不向下兼容的改变都需要产生新的主版本号，岂不是很快就达到 42.0.0 版？</strong></p>
<p>这是开发的责任感和前瞻性的问题。不兼容的改变不应该轻易被加入到有许多依赖代码的软件中。升级所付出的代价可能是巨大的。要递增主版本号来发行不兼容的改版，意味着你必须为这些改变所带来的影响深思熟虑，并且评估所涉及的成本及效益比。</p>
<p><strong>如果我变更了公共 API 但无意中未遵循版本号的改动怎么办呢？（意即在修订等级的发布中，误将重大且不兼容的改变加到代码之中）</strong></p>
<p>自行做最佳的判断。如果你有庞大的使用者群在依照公共 API 的意图而变更行为后会大受影响，那么最好做一次主版本的发布，即使严格来说这个修复仅是修订等级的发布。记住， 语义化的版本控制就是透过版本号的改变来传达意义。若这些改变对你的使用者是重要的，那就透过版本号来向他们说明。</p>
<p><strong>我该如何处理即将弃用的功能？</strong></p>
<p>弃用现存的功能是软件开发中的家常便饭，也通常是向前发展所必须的。当你弃用部份公共 API 时，你应该做两件事：</p>
<p>（1）更新你的文档让使用者知道这个改变，</p>
<p>（2）在适当的时机将弃用的功能透过新的次版本号发布。</p>
<p>在新的主版本完全移除弃用功能前，至少要有一个次版本包含这个弃用信息，这样使用者才能平顺地转移到新版 API。</p>
<p><strong>“v1.2.3” 是一个语义化版本号吗？</strong></p>
<p>“v1.2.3” 并不是的一个语义化的版本号。但是，在语义化版本号之前增加前缀 “v” 是用来表示版本号的常用做法。在版本控制系统中，将 “version” 缩写为 “v” 是很常见的。比如：git tag v1.2.3 -m &quot;Release version 1.2.3&quot; 中，“v1.2.3” 表示标签名称，而 “1.2.3” 是语义化版本号。</p>
<h2 id="版本控制工具-git" tabindex="-1">版本控制工具 Git <a class="header-anchor" href="#版本控制工具-git" aria-label="Permalink to &quot;版本控制工具 Git&quot;">&ZeroWidthSpace;</a></h2>
<p>版本控制工具涉及到很多内容，我们分为三个部分来讲解：</p>
<p>1、首先要知道一些常用的 Git 平台：</p>
<p>giihub、gitlab、gitee、coding、bitbucket、gitea、gogs、gitcafe、git.oschina、git.</p>
<p>2.然后要了解一些 git 的基础命令等，这个是重点。</p>
<p>3.最后是 gitflow 工作流，管理分支的一种方式。</p>
<h2 id="git-基础" tabindex="-1">git 基础 <a class="header-anchor" href="#git-基础" aria-label="Permalink to &quot;git 基础&quot;">&ZeroWidthSpace;</a></h2>
<p>理解 Git 平台的工作使用流程，以 GitHub 为例:</p>
<p>我们使用 GitHub 创建一个仓库，<a href="https://github.com/new" target="_blank" rel="noreferrer">https://github.com/new</a> , 填写仓库名称，并编辑仓库的描述，选择公开或私有，然后点击创建仓库。我们会进到一个仓库的页面，默认是在 Code tab 下。</p>
<h3 id="code-tab" tabindex="-1">Code tab <a class="header-anchor" href="#code-tab" aria-label="Permalink to &quot;Code tab&quot;">&ZeroWidthSpace;</a></h3>
<p>初始时是没有任何 code 的，我们需要把本地的代码上传到这个仓库中。默认会提示你有两种方式：</p>
<ul>
<li>
<p>…or create a new repository on the command line：在命令行中创建一个新的仓库。</p>
</li>
<li>
<p>…or push an existing repository from the command line：从命令行中推送一个已经存在的仓库。注意：这个仓库是已经存在的，也就是说你本地已经有了这个仓库，只是还没有上传到远程仓库中。</p>
</li>
<li>
<p>…or import code from another repository：从其它仓库导入代码。这种方式是从其它仓库导入代码，例如从 gitlab 中导入代码。相对来说比较少用。</p>
</li>
</ul>
<p>创建提交之后，我们就可以在本地的命令行中使用 git 命令来操作这个仓库了。</p>
<h3 id="issues-tab" tabindex="-1">Issues tab <a class="header-anchor" href="#issues-tab" aria-label="Permalink to &quot;Issues tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Issues 是用来记录项目的问题的，可以用来记录 bug，或者是一些新的需求等。我们或者仓库中的其它成员都可以点击 New issue 来创建一个新的 issue，填写 issue 的标题和内容，然后点击 Submit new issue 来提交 issue。</p>
<h3 id="pull-requests-tab" tabindex="-1">Pull requests tab <a class="header-anchor" href="#pull-requests-tab" aria-label="Permalink to &quot;Pull requests tab&quot;">&ZeroWidthSpace;</a></h3>
<p>当设置了仓库权限，将分支保护设置为需要 review 时，我们在提交代码时，就需要先创建一个 pull request，然后再由仓库的管理员来 review 代码，如果代码没有问题，就可以合并到主分支中。</p>
<blockquote>
<p>在工作中我们经常将其称为 pr，即 pull request 的缩写。</p>
</blockquote>
<h3 id="projects-tab" tabindex="-1">Projects tab <a class="header-anchor" href="#projects-tab" aria-label="Permalink to &quot;Projects tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Projects 是用来管理项目的，可以创建多个项目，每个项目可以创建多个任务，每个任务可以设置任务的状态，例如 To do、In progress、Done 等。</p>
<h3 id="security-tab" tabindex="-1">Security tab <a class="header-anchor" href="#security-tab" aria-label="Permalink to &quot;Security tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Security 是用来管理项目的安全的，可以查看项目的安全警告，例如项目中使用的依赖有安全漏洞等。</p>
<h3 id="insights-tab" tabindex="-1">Insights tab <a class="header-anchor" href="#insights-tab" aria-label="Permalink to &quot;Insights tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Insights 是用来查看项目的统计信息的，例如项目的活跃程度、贡献者、流量等。</p>
<h3 id="settings-tab" tabindex="-1">Settings tab <a class="header-anchor" href="#settings-tab" aria-label="Permalink to &quot;Settings tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Settings 是用来管理项目的设置的，例如项目的名称、描述、权限、分支保护、Webhooks 等。</p>
<p>这这个面板中，我们比较常关注的是 Setting 中的安全设置，可以设置仓库的访问权限，例如公开或私有，以及分支保护，例如是否需要 review，是否需要签名，是否需要强制检查等。如果不进行这些设置的话，仓库中的任何人都可以直接提交代码到主分支中，这样就会导致代码的质量无法保证。</p>
<p>1、设置仓库的访问权限：</p>
<p>如果仓库是公开的，任何人都可以访问，如果仓库是私有的，只有仓库的成员才能访问。那么怎么成为仓库的成员呢？我们可以在 Collaborations 里的 Manage access 中添加仓库的成员，添加成员时，可以设置成员的权限，例如只读或者是写入等。</p>
<p>2、设置分支保护：</p>
<p>可以在 General 里的 Pull requests 中的 Branch protection rules 中设置分支保护，例如设置主分支的保护，可以设置是否需要 review，是否需要签名，是否需要强制检查等。</p>
<h2 id="git-基础-1" tabindex="-1">git 基础 <a class="header-anchor" href="#git-基础-1" aria-label="Permalink to &quot;git 基础&quot;">&ZeroWidthSpace;</a></h2>
<p>这里我们要知道的是 git 的工作区、暂存区和版本库的概念，以及我们在使用一些命令时，要知道这些命令是对哪个区域进行操作的。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg" alt=""></p>
<blockquote>
<p>图片来自，菜鸟教程网站</p>
</blockquote>
<p><strong>工作区</strong></p>
<p>我们在电脑上能看到的目录就是工作区，工作区里有一个隐藏目录 .git，这个不算工作区，而是 git 的版本库。</p>
<p><strong>版本库</strong></p>
<p>工作区有一个隐藏目录 .git，这个不算工作区，而是 git 的版本库。在版本库中主要包括 stage（或者叫 index）暂存区，还有 git 自动创建的第一个分支 master 目录树。</p>
<p>暂存区中的内容是通过 git add 命令添加的。并且会在我们使用 git commit 命令后提交到当前分支。</p>
<blockquote>
<p>注意我们提交后，记录的是快照（文件的变化），而不是整个文件，否则 git 仓库将会非常大</p>
</blockquote>
<h2 id="git-命令-常用" tabindex="-1">git 命令（常用） <a class="header-anchor" href="#git-命令-常用" aria-label="Permalink to &quot;git 命令（常用）&quot;">&ZeroWidthSpace;</a></h2>
<p>注意，这里我们只是概况的讲解一下 git 的常用命令，具体的使用我们会结合使用场景在后面一章讲到。</p>
<h3 id="git-clone" tabindex="-1">git clone <a class="header-anchor" href="#git-clone" aria-label="Permalink to &quot;git clone&quot;">&ZeroWidthSpace;</a></h3>
<p>克隆一个远程仓库到本地。需要注意的是 windows 下如果使用 git clone 命令，需要先安装 git 客户端，否则会报错。如果是使用的 ssh 方式，需要先配置好 ssh key。</p>
<blockquote>
<p>安装 git 客户端：<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">https://git-scm.com/downloads</a></p>
</blockquote>
<blockquote>
<p>配置 ssh key：<a href="https://help.github.com/en/articles/connecting-to-github-with-ssh" target="_blank" rel="noreferrer">https://help.github.com/en/articles/connecting-to-github-with-ssh</a></p>
</blockquote>
<h3 id="git-init" tabindex="-1">git init <a class="header-anchor" href="#git-init" aria-label="Permalink to &quot;git init&quot;">&ZeroWidthSpace;</a></h3>
<p>初始化一个本地仓库，会在当前目录下生成一个 .git 的隐藏文件夹，这个文件夹是 git 用来跟踪管理版本的。一般只有在创建新仓库的时候才会使用这个命令。</p>
<h3 id="git-add" tabindex="-1">git add <a class="header-anchor" href="#git-add" aria-label="Permalink to &quot;git add&quot;">&ZeroWidthSpace;</a></h3>
<p>将文件添加到暂存区，可以使用 git add . 来添加当前目录下的所有文件，也可以使用 git add [file] 来添加指定的文件。如果你使用 VSCode 的话，可以在左侧的源代码管理中看到添加的文件。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">.</span></span>
<span class="line"><span style="color: #6A737D"># 或者</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">README.md</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">.</span></span>
<span class="line"><span style="color: #6A737D"># 或者</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">README.md</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>
<p>使用 vscode 可以可视化的看到文件的状态，例如修改的文件、添加的文件、删除的文件等。并且我们也可以在这里提交代码，不需要使用命令行。这个我们会在下一章讲，前提是我们需要了解 git 的命令。</p>
</blockquote>
<h3 id="git-remote" tabindex="-1">git remote <a class="header-anchor" href="#git-remote" aria-label="Permalink to &quot;git remote&quot;">&ZeroWidthSpace;</a></h3>
<p>查看当前仓库的远程仓库信息，如果没有配置远程仓库，会显示为空。也可以使用 git remote add origin [url] 来添加远程仓库、git remote rm origin 删除远程仓库。详细可通过 git remote --help 查看。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">remote</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git@github.com:chovue/vue3-management-system.git</span></span>
<span class="line"><span style="color: #6A737D"># 或者删除</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">remote</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">rm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">remote</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">git@github.com:chovue/vue3-management-system.git</span></span>
<span class="line"><span style="color: #6A737D"># 或者删除</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">remote</span><span style="color: #24292E"> </span><span style="color: #032F62">rm</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="git-status" tabindex="-1">git status <a class="header-anchor" href="#git-status" aria-label="Permalink to &quot;git status&quot;">&ZeroWidthSpace;</a></h3>
<p>查看当前仓库的状态，例如修改的文件、添加的文件、删除的文件等。</p>
<h3 id="git-commit" tabindex="-1">git commit <a class="header-anchor" href="#git-commit" aria-label="Permalink to &quot;git commit&quot;">&ZeroWidthSpace;</a></h3>
<p>提交代码，需要先 git add 添加文件到暂存区，然后再使用 git commit -m [message] 来提交代码。如果你使用 VSCode 的话，可以在左侧的源代码管理中看到提交的记录。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commit</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-m</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;first commit&quot;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">commit</span><span style="color: #24292E"> </span><span style="color: #005CC5">-m</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;first commit&quot;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="git-push" tabindex="-1">git push <a class="header-anchor" href="#git-push" aria-label="Permalink to &quot;git push&quot;">&ZeroWidthSpace;</a></h3>
<p>将本地仓库的代码推送到远程仓库，需要先 git add 添加文件到暂存区，然后再使用 git commit -m [message] 来提交代码，最后使用 git push origin [branch] 来推送代码到远程仓库。</p>
<blockquote>
<p>需要注意的是，如果是第一次推送代码，需要先 git push -u origin [branch]，这样才能将本地仓库的代码推送到远程仓库。</p>
</blockquote>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 第一次推送master分支,并关联本地和远程分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-u</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 之后可以直接推送master分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 强制推送,会覆盖远程分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-f</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送所有本地分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--all</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 同时推送标签</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--tags</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除远程dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-d</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 第一次推送master分支,并关联本地和远程分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-u</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 之后可以直接推送master分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 强制推送,会覆盖远程分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-f</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送所有本地分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">--all</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 同时推送标签</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">--tags</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除远程dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-d</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>上述列举的是相对常见的一些参数，这里一一解释一下：</p>
<ul>
<li>
<p><code>-u</code> 或 <code>--set-upstream</code> 参数， 是指将本地分支与远程分支关联起来，这样在下次推送代码时，就不需要指定分支了。</p>
</li>
<li>
<p><code>-f</code> 或 <code>--force</code> 参数，表示强制推送，一般不建议使用，因为这样会覆盖远程仓库的代码。</p>
</li>
<li>
<p><code>--all</code>: 推送所有本地分支到远程。</p>
</li>
<li>
<p><code>--tags</code> 参数，一并推送本地创建的标签。</p>
</li>
<li>
<p><code>-d</code> 或 <code>--delete</code>: 删除远程分支。</p>
</li>
</ul>
<h3 id="git-pull" tabindex="-1">git pull <a class="header-anchor" href="#git-pull" aria-label="Permalink to &quot;git pull&quot;">&ZeroWidthSpace;</a></h3>
<p>将远程仓库的代码拉取到本地,其实就是 git fetch 和 git merge 的组合。</p>
<p>pull 常用的参数有:</p>
<ul>
<li>-r 或 --rebase: rebase 当前分支到服务器上最新的 commit,与其他开发者的 commit 并发展开。这将会修改历史,并在 pull 之后要做 rebase 之前的 commit。</li>
<li>--autostash: 会在 rebase 期间自动暂存本地改动(stash),完成 rebase 后还原(stash pop),避免冲突。</li>
<li>--allow-unrelated-histories: 允许在没有任何共同提交的情况下,合并两个不同的提交历史。</li>
</ul>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master并rebase到本地</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-r</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 拉取远程master,且在rebase过程中自动stash和pop</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--rebase</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--autostash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 两个独立仓库,允许合并不同的提交历史</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--allow-unrelated-histories</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master并rebase到本地</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span><span style="color: #24292E"> </span><span style="color: #005CC5">-r</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 拉取远程master,且在rebase过程中自动stash和pop</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span><span style="color: #24292E"> </span><span style="color: #005CC5">--rebase</span><span style="color: #24292E"> </span><span style="color: #005CC5">--autostash</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 两个独立仓库,允许合并不同的提交历史</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span><span style="color: #24292E"> </span><span style="color: #005CC5">--allow-unrelated-histories</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="git-checkout" tabindex="-1">git checkout <a class="header-anchor" href="#git-checkout" aria-label="Permalink to &quot;git checkout&quot;">&ZeroWidthSpace;</a></h3>
<p>切换分支，可以使用 git checkout [branch] 来切换分支，也可以使用 git checkout -b [branch] 来创建并切换分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 创建并切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-b</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 创建并切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #005CC5">-b</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-brach" tabindex="-1">git brach <a class="header-anchor" href="#git-brach" aria-label="Permalink to &quot;git brach&quot;">&ZeroWidthSpace;</a></h3>
<p>查看当前仓库的分支信息，可以使用 git branch -a 来查看所有分支，也可以使用 git branch -r 来查看远程分支，使用 git branch -d [branch] 来删除分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看所有分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看远程分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-r</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-d</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看所有分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看远程分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-r</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-d</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="git-fetch" tabindex="-1">git fetch <a class="header-anchor" href="#git-fetch" aria-label="Permalink to &quot;git fetch&quot;">&ZeroWidthSpace;</a></h3>
<p>拉取远程仓库的代码，可以使用 git fetch [remote] [branch] 来拉取远程仓库的代码，例如 git fetch origin master 来拉取远程仓库的 master 分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">fetch</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">fetch</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="git-merge" tabindex="-1">git merge <a class="header-anchor" href="#git-merge" aria-label="Permalink to &quot;git merge&quot;">&ZeroWidthSpace;</a></h3>
<p>合并分支，可以使用 git merge [branch] 来合并分支，例如合并 dev 分支到 master 分支，需要先切换到 master 分支，然后再使用 git merge dev 来合并分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到master分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">merge</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到master分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">merge</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-rebase" tabindex="-1">git rebase <a class="header-anchor" href="#git-rebase" aria-label="Permalink to &quot;git rebase&quot;">&ZeroWidthSpace;</a></h3>
<p>将本地的提交移到另一个分支上，可以使用 git rebase [branch] 来将当前分支的提交移到指定的分支上，例如将当前分支的提交移到 master 分支上，需要先切换到当前分支，然后再使用 git rebase master 来将当前分支的提交移到 master 分支上。</p>
<blockquote>
<p>注意：如果当前分支和 master 分支都有提交，那么当前分支的提交会移到 master 分支的最后面。并且使用 git rebase 之后，当前分支的提交记录会被修改。</p>
</blockquote>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将dev分支的提交移到master分支上</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">rebase</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将dev分支的提交移到master分支上</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">rebase</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-cherry-pick" tabindex="-1">git cherry-pick <a class="header-anchor" href="#git-cherry-pick" aria-label="Permalink to &quot;git cherry-pick&quot;">&ZeroWidthSpace;</a></h3>
<p>将指定的提交合并到当前分支，可以使用 git cherry-pick [commit] 来将指定的提交合并到当前分支，例如将 123456 这次提交合并到当前分支，需要先切换到当前分支，然后再使用 git cherry-pick 123456 来将 123456 这次提交合并到当前分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将123456这次提交合并到当前分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">cherry-pick</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">123456</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将123456这次提交合并到当前分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">cherry-pick</span><span style="color: #24292E"> </span><span style="color: #005CC5">123456</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-log" tabindex="-1">git log <a class="header-anchor" href="#git-log" aria-label="Permalink to &quot;git log&quot;">&ZeroWidthSpace;</a></h3>
<p>查看提交记录，可以使用 git log 来查看所有的提交记录，也可以使用 git log --oneline 来查看简洁的提交记录。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看所有提交记录</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看简洁的提交记录</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">log</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--oneline</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看所有提交记录</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看简洁的提交记录</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">log</span><span style="color: #24292E"> </span><span style="color: #005CC5">--oneline</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-diff" tabindex="-1">git diff <a class="header-anchor" href="#git-diff" aria-label="Permalink to &quot;git diff&quot;">&ZeroWidthSpace;</a></h3>
<p>查看文件的差异，可以使用 git diff [file] 来查看指定文件的差异，也可以使用 git diff [branch1] [branch2] 来查看两个分支的差异。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark has-diff vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看指定文件的差异</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">diff</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">README.md</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看两个分支的差异</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">diff</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light has-diff vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看指定文件的差异</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">diff</span><span style="color: #24292E"> </span><span style="color: #032F62">README.md</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看两个分支的差异</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">diff</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-reset" tabindex="-1">git reset <a class="header-anchor" href="#git-reset" aria-label="Permalink to &quot;git reset&quot;">&ZeroWidthSpace;</a></h3>
<p>回退版本，可以使用 git reset --hard [commit] 来回退到指定的版本。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 回退到指定的版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">3628164</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上一个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">HEAD^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上上一个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">HEAD^^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到前100个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">HEAD~100</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 回退到指定的版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #005CC5">3628164</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上一个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #032F62">HEAD^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上上一个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #032F62">HEAD^^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到前100个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #032F62">HEAD~100</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="git-reflog" tabindex="-1">git reflog <a class="header-anchor" href="#git-reflog" aria-label="Permalink to &quot;git reflog&quot;">&ZeroWidthSpace;</a></h3>
<p>查看命令历史，可以使用 git reflog 来查看所有的命令历史，例如回退到指定的版本，但是又不知道版本号，可以通过 git reflog 来查看所有的命令历史，然后再使用 git reset --hard [commit] 来回退到指定的版本。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看所有的命令历史</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看所有的命令历史</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="git-tag" tabindex="-1">git tag <a class="header-anchor" href="#git-tag" aria-label="Permalink to &quot;git tag&quot;">&ZeroWidthSpace;</a></h3>
<p>打标签，可以使用 git tag [tag] 来打标签，例如 git tag v1.0.0 来打 v1.0.0 的标签，也可以使用 git tag -a [tag] -m [message] 来打带有说明的标签。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 打v1.0.0标签</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">tag</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">v1.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 打带有说明的标签</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">tag</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-a</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">v1.0.0</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-m</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;说明&quot;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 打v1.0.0标签</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">tag</span><span style="color: #24292E"> </span><span style="color: #032F62">v1.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 打带有说明的标签</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">tag</span><span style="color: #24292E"> </span><span style="color: #005CC5">-a</span><span style="color: #24292E"> </span><span style="color: #032F62">v1.0.0</span><span style="color: #24292E"> </span><span style="color: #005CC5">-m</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;说明&quot;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-show" tabindex="-1">git show <a class="header-anchor" href="#git-show" aria-label="Permalink to &quot;git show&quot;">&ZeroWidthSpace;</a></h3>
<p>查看标签信息，可以使用 git show [tag] 来查看标签的信息。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看v1.0.0标签的信息</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">show</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">v1.0.0</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看v1.0.0标签的信息</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">show</span><span style="color: #24292E"> </span><span style="color: #032F62">v1.0.0</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="场景应用" tabindex="-1">场景应用 <a class="header-anchor" href="#场景应用" aria-label="Permalink to &quot;场景应用&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-修复-bug-时的分支管理" tabindex="-1">1. 修复 bug 时的分支管理 <a class="header-anchor" href="#_1-修复-bug-时的分支管理" aria-label="Permalink to &quot;1. 修复 bug 时的分支管理&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 创建bug分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-b</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 在bug分支上修复bug,并提交</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">.</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commit</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-m</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;fix bug xxx&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 提交修复bug后的代码到远程bug分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换到主分支（主分支受保护则提pr，不进行以下步骤）</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并bug分支到主分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">merge</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除bug分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-d</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 创建bug分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #005CC5">-b</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 在bug分支上修复bug,并提交</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">.</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">commit</span><span style="color: #24292E"> </span><span style="color: #005CC5">-m</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;fix bug xxx&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 提交修复bug后的代码到远程bug分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换到主分支（主分支受保护则提pr，不进行以下步骤）</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并bug分支到主分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">merge</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除bug分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-d</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_2-合并其他开发者的代码" tabindex="-1">2. 合并其他开发者的代码 <a class="header-anchor" href="#_2-合并其他开发者的代码" aria-label="Permalink to &quot;2. 合并其他开发者的代码&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 获取最新代码</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 解决合并冲突,然后提交</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">.</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commit</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送到远程仓库</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 获取最新代码</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 解决合并冲突,然后提交</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">.</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">commit</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送到远程仓库</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-暂存未完成的工作" tabindex="-1">3. 暂存未完成的工作 <a class="header-anchor" href="#_3-暂存未完成的工作" aria-label="Permalink to &quot;3. 暂存未完成的工作&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 暂存当前文件</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">或</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">save</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 此时工作区清空,可以进行其他工作</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复暂存的工作</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pop</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看暂存列表</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">list</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 详细查看某个暂存</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">show</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">stash@{n</span><span style="color: #E1E4E8">}</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除某个暂存</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">drop</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">stash@{n</span><span style="color: #E1E4E8">}</span><span style="color: #F97583">&gt;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 暂存当前文件</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">或</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">save</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 此时工作区清空,可以进行其他工作</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复暂存的工作</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">pop</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看暂存列表</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">list</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 详细查看某个暂存</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">show</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">stash@{n</span><span style="color: #24292E">}</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除某个暂存</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">drop</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">stash@{n</span><span style="color: #24292E">}</span><span style="color: #D73A49">&gt;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_4-添加已有仓库作为远程仓库" tabindex="-1">4. 添加已有仓库作为远程仓库 <a class="header-anchor" href="#_4-添加已有仓库作为远程仓库" aria-label="Permalink to &quot;4. 添加已有仓库作为远程仓库&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 进入已有本地仓库</span></span>
<span class="line"><span style="color: #79B8FF">cd</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">myproj</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 添加远程仓库</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">remote</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">UR</span><span style="color: #E1E4E8">L</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送主分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-u</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 进入已有本地仓库</span></span>
<span class="line"><span style="color: #005CC5">cd</span><span style="color: #24292E"> </span><span style="color: #032F62">myproj</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 添加远程仓库</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">remote</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">UR</span><span style="color: #24292E">L</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送主分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-u</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-回退操作" tabindex="-1">5. 回退操作 <a class="header-anchor" href="#_5-回退操作" aria-label="Permalink to &quot;5. 回退操作&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark has-diff vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看提交日志</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 比较修改</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">diff</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到某个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复被回退的版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span></code></pre><pre v-pre class="shiki github-light has-diff vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看提交日志</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 比较修改</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">diff</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到某个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复被回退的版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_6-其它意外情况" tabindex="-1">6.其它意外情况 <a class="header-anchor" href="#_6-其它意外情况" aria-label="Permalink to &quot;6.其它意外情况&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 需要其它分支上的部分代码</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">cherry-pick</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">branch-nam</span><span style="color: #E1E4E8">e</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删文件</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">file-nam</span><span style="color: #E1E4E8">e</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并多次提交（git rebase - 变基一个分支上的提交到另一个分支。这会取出提交,然后将其重新放置在另一个分支顶部,从而创造一个直线的项目历史。）</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">rebase</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-i</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 需要其它分支上的部分代码</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">cherry-pick</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">branch-nam</span><span style="color: #24292E">e</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删文件</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">file-nam</span><span style="color: #24292E">e</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并多次提交（git rebase - 变基一个分支上的提交到另一个分支。这会取出提交,然后将其重新放置在另一个分支顶部,从而创造一个直线的项目历史。）</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">rebase</span><span style="color: #24292E"> </span><span style="color: #005CC5">-i</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="使用-git-图形界面工具" tabindex="-1">使用 Git 图形界面工具 <a class="header-anchor" href="#使用-git-图形界面工具" aria-label="Permalink to &quot;使用 Git 图形界面工具&quot;">&ZeroWidthSpace;</a></h2>
<p>对于 git 基础基本掌握的同学来说，使用命令行操作 git 是最方便的，但是对于刚刚接触 git 的同学来说，命令行操作 git 是一件很痛苦的事情，这一章就来介绍 git 图形界面工具吧。</p>
<h3 id="vscode-源代码管理" tabindex="-1">VSCode 源代码管理 <a class="header-anchor" href="#vscode-源代码管理" aria-label="Permalink to &quot;VSCode 源代码管理&quot;">&ZeroWidthSpace;</a></h3>
<p>这是 VSCode 自带的源代码管理工具，可以在左侧的源代码管理面板中看到，也可以使用快捷键 Ctrl + Shift + G 来打开源代码管理面板。</p>
<blockquote>
<p>Git 图形界面工具可以在一定程度上代替 Git 命令行完成部分简单操作,但无法完全替代。</p>
</blockquote>
<p>在 VSCode 的 Git 图形界面中,有几个操作起来比命令行更简单易用:</p>
<ol>
<li>查看文件状态和变更</li>
</ol>
<p>在 VSCode 中可以很直观地看到工作区中的文件状态(新增、修改、删除),可以大致了解这次提交会被包含的更改内容。这比在命令行使用 git status 查看文件状态更加直观。</p>
<ol start="2">
<li>可视化地暂存和取消暂存文件</li>
</ol>
<p>可以在 VSCode 界面中直接勾选要暂存的文件,取消勾选即可取消暂存。这比在命令行使用 git add 和 git reset HEAD 要直观很多。</p>
<ol start="3">
<li>可视化地浏览提交日志</li>
</ol>
<p>在 VSCode 中可以以可视化的方式浏览提交历史,看提交摘要和具体的文件变化。这比在命令行使用 git log 查看日志要更加直观。</p>
<ol start="4">
<li>切换和创建分支</li>
</ol>
<p>在 VSCode 中可以很直观地看到本地分支和远程分支,可以直接在界面中创建、切换和删除分支。这比在命令行直接操作要更加容易上手。</p>
<ol start="5">
<li>快速推送和拉取</li>
</ol>
<p>可以直接在 VSCode 中一键完成推送(push)和拉取(pull)操作。无需输入任何 Git 命令,简单易用。</p>
<ol start="6">
<li>可视化地处理合并冲突</li>
</ol>
<p>在 VSCode 中可以直接在编辑器中看到合并冲突的文件,并可视化地编辑文件解决冲突。这比解决命令行的合并冲突文件要直观很多。所以,总体来说,VSCode 的 Git 图形界面在查看文件状态、操作暂存区、浏览提交日志、管理分支和快速推拉等方面使用起来更加简单易用。但是,像 rebase、stash 等较复杂的 Git 操作,在 VSCode 中实现起来就不会如此直观了。</p>
<h3 id="分支管理工具-gitlens" tabindex="-1">分支管理工具 GitLens <a class="header-anchor" href="#分支管理工具-gitlens" aria-label="Permalink to &quot;分支管理工具 GitLens&quot;">&ZeroWidthSpace;</a></h3>
<p>在 VSCode 上,一个广受好评的 Git 分支管理插件是 GitLens。下载安装之后，其现在不会默认显示在侧边栏，我们可以在侧边栏右键选择 gitlen 显示在侧边栏中。其默认在源代码管理侧栏上一起显示所有视图，包括：</p>
<ul>
<li>COMMITS：显示当前分支的提交历史</li>
<li>FILE HISTORY：显示当前文件的提交历史</li>
<li>BRANCHES：显示本地和远程分支</li>
<li>REMOTES：显示远程仓库</li>
<li>STASHES：显示暂存列表</li>
<li>TAGS：显示标签列表</li>
<li>CONTRIBUTORS：显示贡献者列表</li>
<li>SEARCH &amp; COMPARE：显示搜索和比较视图</li>
</ul>
<p>它可以实现:</p>
<ol>
<li>
<p>查看所有本地和远程分支,并直接在 VSCode 中创建、切换和删除分支。在 VSCode 的最下方的状态栏中,可以看到当前所在分支的信息。点击分支名称,即可查看分支信息和切换分支（有冲突则弹框报错）。</p>
</li>
<li>
<p>查看各个分支最后一次提交信息,方便比较不同分支的进展。点击下方状态栏的 gitlen 图标,可以查看分支的提交历史构成的图谱。点击某个提交,可以查看该提交的详细信息,包括作者、提交时间、提交摘要、变更文件等。点击某个提交的变更文件,可以查看该文件的具体变更内容。</p>
</li>
<li>
<p>查看文件在不同分支中的最新版本,快速比较不同分支的文件差异。在当前文件（注意需要是有多次提交改动的文件，新增文件无此按钮）右上方的带箭头的小圆球（Open Changes with Previous Revision），以将当前文件修订与先前的提交修订进行比较。</p>
</li>
<li>
<p>在文件中，我们也可以看到当前文件的提交历史，以及当前文件的作者信息。鼠标悬停在某一行代码上，可以看到该行代码的作者信息。</p>
</li>
</ol>
<p>除此之外，还有一些其它功能，这里就不一一介绍了，详细可以在插件的<a href="https://github.com/gitkraken/vscode-gitlens/tree/main" target="_blank" rel="noreferrer">官方文档</a>中查看。</p>
<h2 id="git-flow" tabindex="-1">git flow <a class="header-anchor" href="#git-flow" aria-label="Permalink to &quot;git flow&quot;">&ZeroWidthSpace;</a></h2>
<p>git flow 是一种 Git 分支管理工作流,它定义了一个围绕项目发布的严格分支模型,旨在帮助管理大型项目的开发和维护。git flow 的核心是围绕项目发布定义的一个严格的分支模型。它提供了一些高级命令,帮助我们完成分支的创建、合并等操作。</p>
<p>其意义在于：</p>
<ul>
<li>
<p>多人协作开发，权限控制</p>
</li>
<li>
<p>避免冲突</p>
</li>
<li>
<p>项目版本管理，方便溯源和回退</p>
</li>
</ul>
<h3 id="持续集成-flow" tabindex="-1">持续集成 flow <a class="header-anchor" href="#持续集成-flow" aria-label="Permalink to &quot;持续集成 flow&quot;">&ZeroWidthSpace;</a></h3>
<p>团队开发成员经常集成他们的工作,通常每个成员每天至少集成一次,也就是说每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译、发布、自动化测试）来验证,从而尽早地发现集成错误。许多团队发现这种方法可以显著减少集成问题并加快开发速度。</p>
<p><img src="https://user-images.githubusercontent.com/51811652/236365791-edd0e3d5-9ade-4856-a909-749d0cb72de2.png" alt="image"></p>
<p>优点：</p>
<ul>
<li>
<p>适用于持续集成多环境场景，版本相对比较稳定，而且需要小版本的更新迭代的场景。</p>
</li>
<li>
<p>上游分支向下游发展</p>
</li>
<li>
<p>Bug=&gt;New Feature=&gt;master=&gt;pre branch=&gt;target branch</p>
</li>
</ul>
<p>自动化流程工具 CI/CD，检测到代码变更，自动触发构建，自动化测试，自动化部署。</p>
<h3 id="版本控制-flow" tabindex="-1">版本控制 flow <a class="header-anchor" href="#版本控制-flow" aria-label="Permalink to &quot;版本控制 flow&quot;">&ZeroWidthSpace;</a></h3>
<p>Vue 和 React 都是采用的这种模型，这种模型适用于版本控制的场景，在 master 分支检出，bug 修复在分支：</p>
<p>master -&gt; Stable -&gt; new branch -&gt; bug fix -&gt; version</p>
<p><img src="https://user-images.githubusercontent.com/51811652/236366380-33fe619b-07c6-4370-ab2d-00380a30e70d.png" alt="image"></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>本篇文章从 Git 的基本概念开始，介绍了 Git 的基本操作，包括 Git 命令 、Git 的 GUI 插件 GitLens、Git 的工作流 Git Flow 这些内容，这些命令和工具都是需要我们在日常开发中熟练掌握的，这样才能更好的使用 Git 来管理我们的项目。</p>
<p>另外，在本篇中也引入了团队的协作开发的概念，这些就不在本篇来讲解了，关于团队协作会再出一篇文章来讲解。</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="版本管理-git-基础" tabindex="-1">版本管理，Git 基础 <a class="header-anchor" href="#版本管理-git-基础" aria-label="Permalink to &quot;版本管理，Git 基础&quot;">&ZeroWidthSpace;</a></h1>
<p>在学习版本管理之前，我们先认识一下什么是版本管理。那么我们首先需要了解什么是版本吧。</p>
<p>顺着这个思路，我们首先要知道，怎么去定一个版本，以及版本的格式是什么样的，它是不是遵循某种规范等等。这些问题在下面都会有详细的说明。</p>
<p>首先我们要了解语义化版本：</p>
<h2 id="语义化版本" tabindex="-1">语义化版本 <a class="header-anchor" href="#语义化版本" aria-label="Permalink to &quot;语义化版本&quot;">&ZeroWidthSpace;</a></h2>
<p>语义化版本是一个版本号的规范，他由 npm 的创始人提出，目的是为了解决版本号的混乱问题。其规范我们在下面详细说明。</p>
<p>相信在不少开源项目中，你都会看到这样的版本号：</p>
<ul>
<li>2.6.0</li>
<li>2.6.0-beta.1</li>
<li>2.0.0-rc.8</li>
<li>2.0.0-alpha.8</li>
</ul>
<p>他们都是符合语义化版本格式规范的版本号。那么不同的版本号又代表了什么呢？我们在下面详细说明。</p>
<h3 id="理解版本格式" tabindex="-1">理解版本格式 <a class="header-anchor" href="#理解版本格式" aria-label="Permalink to &quot;理解版本格式&quot;">&ZeroWidthSpace;</a></h3>
<p>版本格式：主版本号.次版本号.修订号，版本号递增规则如下：</p>
<ul>
<li>主版本号：当你做了不兼容的 API 修改</li>
<li>次版本号：当你做了向下兼容的功能性新增</li>
<li>修订号：当你做了向下兼容的问题修正先行版本号及版本编译信息可以加到“主版本号.次版本号.修订号”的后面，作为延伸。</li>
</ul>
<p>对于加在后面的延伸信息，我介绍几个常见的，并且他们之间是有顺序的：</p>
<ul>
<li>1.alpha：内部测试版本，可能会存在很多 bug，除非内部测试人员，否则不要使用。</li>
<li>2.beta：公测版本，消除了严重的错误，但还是存在一些缺陷，需要测试人员进一步测试，如果反馈的问题比较多，就需要再次进行 beta 版本的发布，直到基本上不存在问题。</li>
<li>3.rc：发行候选版本，基本上不存在问题，除非是重大问题，否则不会对代码进行修改，这个版本就是最终发布的版本。</li>
<li>4.release</li>
</ul>
<h3 id="发布版本可能遇到的问题" tabindex="-1">发布版本可能遇到的问题 <a class="header-anchor" href="#发布版本可能遇到的问题" aria-label="Permalink to &quot;发布版本可能遇到的问题&quot;">&ZeroWidthSpace;</a></h3>
<p>以下问题及解答来自<a href="https://semver.org/lang/zh-CN/" target="_blank" rel="noreferrer">语义化官方</a>：</p>
<p><strong>在 0.y.z 初始开发阶段，我该如何进行版本控制？</strong></p>
<p>最简单的做法是以 0.1.0 作为你的初始化开发版本，并在后续的每次发行时递增次版本号。</p>
<p><strong>对于公共 API，若即使是最小但不向下兼容的改变都需要产生新的主版本号，岂不是很快就达到 42.0.0 版？</strong></p>
<p>这是开发的责任感和前瞻性的问题。不兼容的改变不应该轻易被加入到有许多依赖代码的软件中。升级所付出的代价可能是巨大的。要递增主版本号来发行不兼容的改版，意味着你必须为这些改变所带来的影响深思熟虑，并且评估所涉及的成本及效益比。</p>
<p><strong>如果我变更了公共 API 但无意中未遵循版本号的改动怎么办呢？（意即在修订等级的发布中，误将重大且不兼容的改变加到代码之中）</strong></p>
<p>自行做最佳的判断。如果你有庞大的使用者群在依照公共 API 的意图而变更行为后会大受影响，那么最好做一次主版本的发布，即使严格来说这个修复仅是修订等级的发布。记住， 语义化的版本控制就是透过版本号的改变来传达意义。若这些改变对你的使用者是重要的，那就透过版本号来向他们说明。</p>
<p><strong>我该如何处理即将弃用的功能？</strong></p>
<p>弃用现存的功能是软件开发中的家常便饭，也通常是向前发展所必须的。当你弃用部份公共 API 时，你应该做两件事：</p>
<p>（1）更新你的文档让使用者知道这个改变，</p>
<p>（2）在适当的时机将弃用的功能透过新的次版本号发布。</p>
<p>在新的主版本完全移除弃用功能前，至少要有一个次版本包含这个弃用信息，这样使用者才能平顺地转移到新版 API。</p>
<p><strong>“v1.2.3” 是一个语义化版本号吗？</strong></p>
<p>“v1.2.3” 并不是的一个语义化的版本号。但是，在语义化版本号之前增加前缀 “v” 是用来表示版本号的常用做法。在版本控制系统中，将 “version” 缩写为 “v” 是很常见的。比如：git tag v1.2.3 -m &quot;Release version 1.2.3&quot; 中，“v1.2.3” 表示标签名称，而 “1.2.3” 是语义化版本号。</p>
<h2 id="版本控制工具-git" tabindex="-1">版本控制工具 Git <a class="header-anchor" href="#版本控制工具-git" aria-label="Permalink to &quot;版本控制工具 Git&quot;">&ZeroWidthSpace;</a></h2>
<p>版本控制工具涉及到很多内容，我们分为三个部分来讲解：</p>
<p>1、首先要知道一些常用的 Git 平台：</p>
<p>giihub、gitlab、gitee、coding、bitbucket、gitea、gogs、gitcafe、git.oschina、git.</p>
<p>2.然后要了解一些 git 的基础命令等，这个是重点。</p>
<p>3.最后是 gitflow 工作流，管理分支的一种方式。</p>
<h2 id="git-基础" tabindex="-1">git 基础 <a class="header-anchor" href="#git-基础" aria-label="Permalink to &quot;git 基础&quot;">&ZeroWidthSpace;</a></h2>
<p>理解 Git 平台的工作使用流程，以 GitHub 为例:</p>
<p>我们使用 GitHub 创建一个仓库，<a href="https://github.com/new" target="_blank" rel="noreferrer">https://github.com/new</a> , 填写仓库名称，并编辑仓库的描述，选择公开或私有，然后点击创建仓库。我们会进到一个仓库的页面，默认是在 Code tab 下。</p>
<h3 id="code-tab" tabindex="-1">Code tab <a class="header-anchor" href="#code-tab" aria-label="Permalink to &quot;Code tab&quot;">&ZeroWidthSpace;</a></h3>
<p>初始时是没有任何 code 的，我们需要把本地的代码上传到这个仓库中。默认会提示你有两种方式：</p>
<ul>
<li>
<p>…or create a new repository on the command line：在命令行中创建一个新的仓库。</p>
</li>
<li>
<p>…or push an existing repository from the command line：从命令行中推送一个已经存在的仓库。注意：这个仓库是已经存在的，也就是说你本地已经有了这个仓库，只是还没有上传到远程仓库中。</p>
</li>
<li>
<p>…or import code from another repository：从其它仓库导入代码。这种方式是从其它仓库导入代码，例如从 gitlab 中导入代码。相对来说比较少用。</p>
</li>
</ul>
<p>创建提交之后，我们就可以在本地的命令行中使用 git 命令来操作这个仓库了。</p>
<h3 id="issues-tab" tabindex="-1">Issues tab <a class="header-anchor" href="#issues-tab" aria-label="Permalink to &quot;Issues tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Issues 是用来记录项目的问题的，可以用来记录 bug，或者是一些新的需求等。我们或者仓库中的其它成员都可以点击 New issue 来创建一个新的 issue，填写 issue 的标题和内容，然后点击 Submit new issue 来提交 issue。</p>
<h3 id="pull-requests-tab" tabindex="-1">Pull requests tab <a class="header-anchor" href="#pull-requests-tab" aria-label="Permalink to &quot;Pull requests tab&quot;">&ZeroWidthSpace;</a></h3>
<p>当设置了仓库权限，将分支保护设置为需要 review 时，我们在提交代码时，就需要先创建一个 pull request，然后再由仓库的管理员来 review 代码，如果代码没有问题，就可以合并到主分支中。</p>
<blockquote>
<p>在工作中我们经常将其称为 pr，即 pull request 的缩写。</p>
</blockquote>
<h3 id="projects-tab" tabindex="-1">Projects tab <a class="header-anchor" href="#projects-tab" aria-label="Permalink to &quot;Projects tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Projects 是用来管理项目的，可以创建多个项目，每个项目可以创建多个任务，每个任务可以设置任务的状态，例如 To do、In progress、Done 等。</p>
<h3 id="security-tab" tabindex="-1">Security tab <a class="header-anchor" href="#security-tab" aria-label="Permalink to &quot;Security tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Security 是用来管理项目的安全的，可以查看项目的安全警告，例如项目中使用的依赖有安全漏洞等。</p>
<h3 id="insights-tab" tabindex="-1">Insights tab <a class="header-anchor" href="#insights-tab" aria-label="Permalink to &quot;Insights tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Insights 是用来查看项目的统计信息的，例如项目的活跃程度、贡献者、流量等。</p>
<h3 id="settings-tab" tabindex="-1">Settings tab <a class="header-anchor" href="#settings-tab" aria-label="Permalink to &quot;Settings tab&quot;">&ZeroWidthSpace;</a></h3>
<p>Settings 是用来管理项目的设置的，例如项目的名称、描述、权限、分支保护、Webhooks 等。</p>
<p>这这个面板中，我们比较常关注的是 Setting 中的安全设置，可以设置仓库的访问权限，例如公开或私有，以及分支保护，例如是否需要 review，是否需要签名，是否需要强制检查等。如果不进行这些设置的话，仓库中的任何人都可以直接提交代码到主分支中，这样就会导致代码的质量无法保证。</p>
<p>1、设置仓库的访问权限：</p>
<p>如果仓库是公开的，任何人都可以访问，如果仓库是私有的，只有仓库的成员才能访问。那么怎么成为仓库的成员呢？我们可以在 Collaborations 里的 Manage access 中添加仓库的成员，添加成员时，可以设置成员的权限，例如只读或者是写入等。</p>
<p>2、设置分支保护：</p>
<p>可以在 General 里的 Pull requests 中的 Branch protection rules 中设置分支保护，例如设置主分支的保护，可以设置是否需要 review，是否需要签名，是否需要强制检查等。</p>
<h2 id="git-基础-1" tabindex="-1">git 基础 <a class="header-anchor" href="#git-基础-1" aria-label="Permalink to &quot;git 基础&quot;">&ZeroWidthSpace;</a></h2>
<p>这里我们要知道的是 git 的工作区、暂存区和版本库的概念，以及我们在使用一些命令时，要知道这些命令是对哪个区域进行操作的。</p>
<p><img src="https://www.runoob.com/wp-content/uploads/2015/02/git-command.jpg" alt=""></p>
<blockquote>
<p>图片来自，菜鸟教程网站</p>
</blockquote>
<p><strong>工作区</strong></p>
<p>我们在电脑上能看到的目录就是工作区，工作区里有一个隐藏目录 .git，这个不算工作区，而是 git 的版本库。</p>
<p><strong>版本库</strong></p>
<p>工作区有一个隐藏目录 .git，这个不算工作区，而是 git 的版本库。在版本库中主要包括 stage（或者叫 index）暂存区，还有 git 自动创建的第一个分支 master 目录树。</p>
<p>暂存区中的内容是通过 git add 命令添加的。并且会在我们使用 git commit 命令后提交到当前分支。</p>
<blockquote>
<p>注意我们提交后，记录的是快照（文件的变化），而不是整个文件，否则 git 仓库将会非常大</p>
</blockquote>
<h2 id="git-命令-常用" tabindex="-1">git 命令（常用） <a class="header-anchor" href="#git-命令-常用" aria-label="Permalink to &quot;git 命令（常用）&quot;">&ZeroWidthSpace;</a></h2>
<p>注意，这里我们只是概况的讲解一下 git 的常用命令，具体的使用我们会结合使用场景在后面一章讲到。</p>
<h3 id="git-clone" tabindex="-1">git clone <a class="header-anchor" href="#git-clone" aria-label="Permalink to &quot;git clone&quot;">&ZeroWidthSpace;</a></h3>
<p>克隆一个远程仓库到本地。需要注意的是 windows 下如果使用 git clone 命令，需要先安装 git 客户端，否则会报错。如果是使用的 ssh 方式，需要先配置好 ssh key。</p>
<blockquote>
<p>安装 git 客户端：<a href="https://git-scm.com/downloads" target="_blank" rel="noreferrer">https://git-scm.com/downloads</a></p>
</blockquote>
<blockquote>
<p>配置 ssh key：<a href="https://help.github.com/en/articles/connecting-to-github-with-ssh" target="_blank" rel="noreferrer">https://help.github.com/en/articles/connecting-to-github-with-ssh</a></p>
</blockquote>
<h3 id="git-init" tabindex="-1">git init <a class="header-anchor" href="#git-init" aria-label="Permalink to &quot;git init&quot;">&ZeroWidthSpace;</a></h3>
<p>初始化一个本地仓库，会在当前目录下生成一个 .git 的隐藏文件夹，这个文件夹是 git 用来跟踪管理版本的。一般只有在创建新仓库的时候才会使用这个命令。</p>
<h3 id="git-add" tabindex="-1">git add <a class="header-anchor" href="#git-add" aria-label="Permalink to &quot;git add&quot;">&ZeroWidthSpace;</a></h3>
<p>将文件添加到暂存区，可以使用 git add . 来添加当前目录下的所有文件，也可以使用 git add [file] 来添加指定的文件。如果你使用 VSCode 的话，可以在左侧的源代码管理中看到添加的文件。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">.</span></span>
<span class="line"><span style="color: #6A737D"># 或者</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">README.md</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">.</span></span>
<span class="line"><span style="color: #6A737D"># 或者</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">README.md</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><blockquote>
<p>使用 vscode 可以可视化的看到文件的状态，例如修改的文件、添加的文件、删除的文件等。并且我们也可以在这里提交代码，不需要使用命令行。这个我们会在下一章讲，前提是我们需要了解 git 的命令。</p>
</blockquote>
<h3 id="git-remote" tabindex="-1">git remote <a class="header-anchor" href="#git-remote" aria-label="Permalink to &quot;git remote&quot;">&ZeroWidthSpace;</a></h3>
<p>查看当前仓库的远程仓库信息，如果没有配置远程仓库，会显示为空。也可以使用 git remote add origin [url] 来添加远程仓库、git remote rm origin 删除远程仓库。详细可通过 git remote --help 查看。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">remote</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git@github.com:chovue/vue3-management-system.git</span></span>
<span class="line"><span style="color: #6A737D"># 或者删除</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">remote</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">rm</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">remote</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">git@github.com:chovue/vue3-management-system.git</span></span>
<span class="line"><span style="color: #6A737D"># 或者删除</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">remote</span><span style="color: #24292E"> </span><span style="color: #032F62">rm</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="git-status" tabindex="-1">git status <a class="header-anchor" href="#git-status" aria-label="Permalink to &quot;git status&quot;">&ZeroWidthSpace;</a></h3>
<p>查看当前仓库的状态，例如修改的文件、添加的文件、删除的文件等。</p>
<h3 id="git-commit" tabindex="-1">git commit <a class="header-anchor" href="#git-commit" aria-label="Permalink to &quot;git commit&quot;">&ZeroWidthSpace;</a></h3>
<p>提交代码，需要先 git add 添加文件到暂存区，然后再使用 git commit -m [message] 来提交代码。如果你使用 VSCode 的话，可以在左侧的源代码管理中看到提交的记录。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commit</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-m</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;first commit&quot;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">commit</span><span style="color: #24292E"> </span><span style="color: #005CC5">-m</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;first commit&quot;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="git-push" tabindex="-1">git push <a class="header-anchor" href="#git-push" aria-label="Permalink to &quot;git push&quot;">&ZeroWidthSpace;</a></h3>
<p>将本地仓库的代码推送到远程仓库，需要先 git add 添加文件到暂存区，然后再使用 git commit -m [message] 来提交代码，最后使用 git push origin [branch] 来推送代码到远程仓库。</p>
<blockquote>
<p>需要注意的是，如果是第一次推送代码，需要先 git push -u origin [branch]，这样才能将本地仓库的代码推送到远程仓库。</p>
</blockquote>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 第一次推送master分支,并关联本地和远程分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-u</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 之后可以直接推送master分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 强制推送,会覆盖远程分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-f</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送所有本地分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--all</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 同时推送标签</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--tags</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除远程dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-d</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 第一次推送master分支,并关联本地和远程分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-u</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 之后可以直接推送master分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 强制推送,会覆盖远程分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-f</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送所有本地分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">--all</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 同时推送标签</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">--tags</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除远程dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-d</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>上述列举的是相对常见的一些参数，这里一一解释一下：</p>
<ul>
<li>
<p><code>-u</code> 或 <code>--set-upstream</code> 参数， 是指将本地分支与远程分支关联起来，这样在下次推送代码时，就不需要指定分支了。</p>
</li>
<li>
<p><code>-f</code> 或 <code>--force</code> 参数，表示强制推送，一般不建议使用，因为这样会覆盖远程仓库的代码。</p>
</li>
<li>
<p><code>--all</code>: 推送所有本地分支到远程。</p>
</li>
<li>
<p><code>--tags</code> 参数，一并推送本地创建的标签。</p>
</li>
<li>
<p><code>-d</code> 或 <code>--delete</code>: 删除远程分支。</p>
</li>
</ul>
<h3 id="git-pull" tabindex="-1">git pull <a class="header-anchor" href="#git-pull" aria-label="Permalink to &quot;git pull&quot;">&ZeroWidthSpace;</a></h3>
<p>将远程仓库的代码拉取到本地,其实就是 git fetch 和 git merge 的组合。</p>
<p>pull 常用的参数有:</p>
<ul>
<li>-r 或 --rebase: rebase 当前分支到服务器上最新的 commit,与其他开发者的 commit 并发展开。这将会修改历史,并在 pull 之后要做 rebase 之前的 commit。</li>
<li>--autostash: 会在 rebase 期间自动暂存本地改动(stash),完成 rebase 后还原(stash pop),避免冲突。</li>
<li>--allow-unrelated-histories: 允许在没有任何共同提交的情况下,合并两个不同的提交历史。</li>
</ul>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master并rebase到本地</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-r</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 拉取远程master,且在rebase过程中自动stash和pop</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--rebase</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--autostash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 两个独立仓库,允许合并不同的提交历史</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--allow-unrelated-histories</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master并rebase到本地</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span><span style="color: #24292E"> </span><span style="color: #005CC5">-r</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 拉取远程master,且在rebase过程中自动stash和pop</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span><span style="color: #24292E"> </span><span style="color: #005CC5">--rebase</span><span style="color: #24292E"> </span><span style="color: #005CC5">--autostash</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 两个独立仓库,允许合并不同的提交历史</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span><span style="color: #24292E"> </span><span style="color: #005CC5">--allow-unrelated-histories</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="git-checkout" tabindex="-1">git checkout <a class="header-anchor" href="#git-checkout" aria-label="Permalink to &quot;git checkout&quot;">&ZeroWidthSpace;</a></h3>
<p>切换分支，可以使用 git checkout [branch] 来切换分支，也可以使用 git checkout -b [branch] 来创建并切换分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 创建并切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-b</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 创建并切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #005CC5">-b</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-brach" tabindex="-1">git brach <a class="header-anchor" href="#git-brach" aria-label="Permalink to &quot;git brach&quot;">&ZeroWidthSpace;</a></h3>
<p>查看当前仓库的分支信息，可以使用 git branch -a 来查看所有分支，也可以使用 git branch -r 来查看远程分支，使用 git branch -d [branch] 来删除分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看所有分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看远程分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-r</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-d</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看所有分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-a</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看远程分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-r</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-d</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="git-fetch" tabindex="-1">git fetch <a class="header-anchor" href="#git-fetch" aria-label="Permalink to &quot;git fetch&quot;">&ZeroWidthSpace;</a></h3>
<p>拉取远程仓库的代码，可以使用 git fetch [remote] [branch] 来拉取远程仓库的代码，例如 git fetch origin master 来拉取远程仓库的 master 分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">fetch</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 拉取远程master分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">fetch</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="git-merge" tabindex="-1">git merge <a class="header-anchor" href="#git-merge" aria-label="Permalink to &quot;git merge&quot;">&ZeroWidthSpace;</a></h3>
<p>合并分支，可以使用 git merge [branch] 来合并分支，例如合并 dev 分支到 master 分支，需要先切换到 master 分支，然后再使用 git merge dev 来合并分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到master分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">merge</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到master分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">merge</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-rebase" tabindex="-1">git rebase <a class="header-anchor" href="#git-rebase" aria-label="Permalink to &quot;git rebase&quot;">&ZeroWidthSpace;</a></h3>
<p>将本地的提交移到另一个分支上，可以使用 git rebase [branch] 来将当前分支的提交移到指定的分支上，例如将当前分支的提交移到 master 分支上，需要先切换到当前分支，然后再使用 git rebase master 来将当前分支的提交移到 master 分支上。</p>
<blockquote>
<p>注意：如果当前分支和 master 分支都有提交，那么当前分支的提交会移到 master 分支的最后面。并且使用 git rebase 之后，当前分支的提交记录会被修改。</p>
</blockquote>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将dev分支的提交移到master分支上</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">rebase</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将dev分支的提交移到master分支上</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">rebase</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-cherry-pick" tabindex="-1">git cherry-pick <a class="header-anchor" href="#git-cherry-pick" aria-label="Permalink to &quot;git cherry-pick&quot;">&ZeroWidthSpace;</a></h3>
<p>将指定的提交合并到当前分支，可以使用 git cherry-pick [commit] 来将指定的提交合并到当前分支，例如将 123456 这次提交合并到当前分支，需要先切换到当前分支，然后再使用 git cherry-pick 123456 来将 123456 这次提交合并到当前分支。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将123456这次提交合并到当前分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">cherry-pick</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">123456</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 切换到dev分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 将123456这次提交合并到当前分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">cherry-pick</span><span style="color: #24292E"> </span><span style="color: #005CC5">123456</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-log" tabindex="-1">git log <a class="header-anchor" href="#git-log" aria-label="Permalink to &quot;git log&quot;">&ZeroWidthSpace;</a></h3>
<p>查看提交记录，可以使用 git log 来查看所有的提交记录，也可以使用 git log --oneline 来查看简洁的提交记录。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看所有提交记录</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看简洁的提交记录</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">log</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--oneline</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看所有提交记录</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看简洁的提交记录</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">log</span><span style="color: #24292E"> </span><span style="color: #005CC5">--oneline</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-diff" tabindex="-1">git diff <a class="header-anchor" href="#git-diff" aria-label="Permalink to &quot;git diff&quot;">&ZeroWidthSpace;</a></h3>
<p>查看文件的差异，可以使用 git diff [file] 来查看指定文件的差异，也可以使用 git diff [branch1] [branch2] 来查看两个分支的差异。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark has-diff vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看指定文件的差异</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">diff</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">README.md</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看两个分支的差异</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">diff</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">dev</span></span></code></pre><pre v-pre class="shiki github-light has-diff vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看指定文件的差异</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">diff</span><span style="color: #24292E"> </span><span style="color: #032F62">README.md</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看两个分支的差异</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">diff</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span><span style="color: #24292E"> </span><span style="color: #032F62">dev</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-reset" tabindex="-1">git reset <a class="header-anchor" href="#git-reset" aria-label="Permalink to &quot;git reset&quot;">&ZeroWidthSpace;</a></h3>
<p>回退版本，可以使用 git reset --hard [commit] 来回退到指定的版本。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 回退到指定的版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">3628164</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上一个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">HEAD^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上上一个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">HEAD^^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到前100个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">HEAD~100</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 回退到指定的版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #005CC5">3628164</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上一个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #032F62">HEAD^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到上上一个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #032F62">HEAD^^</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到前100个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #032F62">HEAD~100</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="git-reflog" tabindex="-1">git reflog <a class="header-anchor" href="#git-reflog" aria-label="Permalink to &quot;git reflog&quot;">&ZeroWidthSpace;</a></h3>
<p>查看命令历史，可以使用 git reflog 来查看所有的命令历史，例如回退到指定的版本，但是又不知道版本号，可以通过 git reflog 来查看所有的命令历史，然后再使用 git reset --hard [commit] 来回退到指定的版本。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看所有的命令历史</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看所有的命令历史</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="git-tag" tabindex="-1">git tag <a class="header-anchor" href="#git-tag" aria-label="Permalink to &quot;git tag&quot;">&ZeroWidthSpace;</a></h3>
<p>打标签，可以使用 git tag [tag] 来打标签，例如 git tag v1.0.0 来打 v1.0.0 的标签，也可以使用 git tag -a [tag] -m [message] 来打带有说明的标签。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 打v1.0.0标签</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">tag</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">v1.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 打带有说明的标签</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">tag</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-a</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">v1.0.0</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-m</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;说明&quot;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 打v1.0.0标签</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">tag</span><span style="color: #24292E"> </span><span style="color: #032F62">v1.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 打带有说明的标签</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">tag</span><span style="color: #24292E"> </span><span style="color: #005CC5">-a</span><span style="color: #24292E"> </span><span style="color: #032F62">v1.0.0</span><span style="color: #24292E"> </span><span style="color: #005CC5">-m</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;说明&quot;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="git-show" tabindex="-1">git show <a class="header-anchor" href="#git-show" aria-label="Permalink to &quot;git show&quot;">&ZeroWidthSpace;</a></h3>
<p>查看标签信息，可以使用 git show [tag] 来查看标签的信息。</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看v1.0.0标签的信息</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">show</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">v1.0.0</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看v1.0.0标签的信息</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">show</span><span style="color: #24292E"> </span><span style="color: #032F62">v1.0.0</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="场景应用" tabindex="-1">场景应用 <a class="header-anchor" href="#场景应用" aria-label="Permalink to &quot;场景应用&quot;">&ZeroWidthSpace;</a></h2>
<h3 id="_1-修复-bug-时的分支管理" tabindex="-1">1. 修复 bug 时的分支管理 <a class="header-anchor" href="#_1-修复-bug-时的分支管理" aria-label="Permalink to &quot;1. 修复 bug 时的分支管理&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 创建bug分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-b</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 在bug分支上修复bug,并提交</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">.</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commit</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-m</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">&quot;fix bug xxx&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 提交修复bug后的代码到远程bug分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换到主分支（主分支受保护则提pr，不进行以下步骤）</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并bug分支到主分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">merge</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除bug分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-d</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">bug-xxx</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 创建bug分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #005CC5">-b</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 在bug分支上修复bug,并提交</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">.</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">commit</span><span style="color: #24292E"> </span><span style="color: #005CC5">-m</span><span style="color: #24292E"> </span><span style="color: #032F62">&quot;fix bug xxx&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 提交修复bug后的代码到远程bug分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换到主分支（主分支受保护则提pr，不进行以下步骤）</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并bug分支到主分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">merge</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除bug分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #005CC5">-d</span><span style="color: #24292E"> </span><span style="color: #032F62">bug-xxx</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_2-合并其他开发者的代码" tabindex="-1">2. 合并其他开发者的代码 <a class="header-anchor" href="#_2-合并其他开发者的代码" aria-label="Permalink to &quot;2. 合并其他开发者的代码&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 获取最新代码</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 解决合并冲突,然后提交</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">.</span><span style="color: #E1E4E8"> &amp;&amp; </span><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">commit</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送到远程仓库</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 获取最新代码</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">pull</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 解决合并冲突,然后提交</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">.</span><span style="color: #24292E"> &amp;&amp; </span><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">commit</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送到远程仓库</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_3-暂存未完成的工作" tabindex="-1">3. 暂存未完成的工作 <a class="header-anchor" href="#_3-暂存未完成的工作" aria-label="Permalink to &quot;3. 暂存未完成的工作&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 暂存当前文件</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">或</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">save</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 此时工作区清空,可以进行其他工作</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复暂存的工作</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">pop</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看暂存列表</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">list</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 详细查看某个暂存</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">show</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">stash@{n</span><span style="color: #E1E4E8">}</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除某个暂存</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">stash</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">drop</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">stash@{n</span><span style="color: #E1E4E8">}</span><span style="color: #F97583">&gt;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 暂存当前文件</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">或</span><span style="color: #24292E"> </span><span style="color: #032F62">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">save</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 此时工作区清空,可以进行其他工作</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复暂存的工作</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">pop</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 查看暂存列表</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">list</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 详细查看某个暂存</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">show</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">stash@{n</span><span style="color: #24292E">}</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 删除某个暂存</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">stash</span><span style="color: #24292E"> </span><span style="color: #032F62">drop</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">stash@{n</span><span style="color: #24292E">}</span><span style="color: #D73A49">&gt;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_4-添加已有仓库作为远程仓库" tabindex="-1">4. 添加已有仓库作为远程仓库 <a class="header-anchor" href="#_4-添加已有仓库作为远程仓库" aria-label="Permalink to &quot;4. 添加已有仓库作为远程仓库&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 进入已有本地仓库</span></span>
<span class="line"><span style="color: #79B8FF">cd</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">myproj</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 添加远程仓库</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">remote</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">add</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">UR</span><span style="color: #E1E4E8">L</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送主分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">push</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-u</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">origin</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">master</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 进入已有本地仓库</span></span>
<span class="line"><span style="color: #005CC5">cd</span><span style="color: #24292E"> </span><span style="color: #032F62">myproj</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 添加远程仓库</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">remote</span><span style="color: #24292E"> </span><span style="color: #032F62">add</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">UR</span><span style="color: #24292E">L</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 推送主分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">push</span><span style="color: #24292E"> </span><span style="color: #005CC5">-u</span><span style="color: #24292E"> </span><span style="color: #032F62">origin</span><span style="color: #24292E"> </span><span style="color: #032F62">master</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_5-回退操作" tabindex="-1">5. 回退操作 <a class="header-anchor" href="#_5-回退操作" aria-label="Permalink to &quot;5. 回退操作&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark has-diff vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 查看提交日志</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 比较修改</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">diff</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到某个版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reset</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">--hard</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复被回退的版本</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span></code></pre><pre v-pre class="shiki github-light has-diff vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 查看提交日志</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">log</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 切换版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 比较修改</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">diff</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 回退到某个版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reset</span><span style="color: #24292E"> </span><span style="color: #005CC5">--hard</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 恢复被回退的版本</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_6-其它意外情况" tabindex="-1">6.其它意外情况 <a class="header-anchor" href="#_6-其它意外情况" aria-label="Permalink to &quot;6.其它意外情况&quot;">&ZeroWidthSpace;</a></h3>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #6A737D"># 需要其它分支上的部分代码</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">cherry-pick</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删分支</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">branch</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">branch-nam</span><span style="color: #E1E4E8">e</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删文件</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">reflog</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">checkout</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">file-nam</span><span style="color: #E1E4E8">e</span><span style="color: #F97583">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并多次提交（git rebase - 变基一个分支上的提交到另一个分支。这会取出提交,然后将其重新放置在另一个分支顶部,从而创造一个直线的项目历史。）</span></span>
<span class="line"><span style="color: #B392F0">git</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">rebase</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">-i</span><span style="color: #E1E4E8"> </span><span style="color: #F97583">&lt;</span><span style="color: #9ECBFF">commit-i</span><span style="color: #E1E4E8">d</span><span style="color: #F97583">&gt;</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6A737D"># 需要其它分支上的部分代码</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">cherry-pick</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删分支</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">branch</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">branch-nam</span><span style="color: #24292E">e</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 误删文件</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">reflog</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">checkout</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">file-nam</span><span style="color: #24292E">e</span><span style="color: #D73A49">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #6A737D"># 合并多次提交（git rebase - 变基一个分支上的提交到另一个分支。这会取出提交,然后将其重新放置在另一个分支顶部,从而创造一个直线的项目历史。）</span></span>
<span class="line"><span style="color: #6F42C1">git</span><span style="color: #24292E"> </span><span style="color: #032F62">rebase</span><span style="color: #24292E"> </span><span style="color: #005CC5">-i</span><span style="color: #24292E"> </span><span style="color: #D73A49">&lt;</span><span style="color: #032F62">commit-i</span><span style="color: #24292E">d</span><span style="color: #D73A49">&gt;</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="使用-git-图形界面工具" tabindex="-1">使用 Git 图形界面工具 <a class="header-anchor" href="#使用-git-图形界面工具" aria-label="Permalink to &quot;使用 Git 图形界面工具&quot;">&ZeroWidthSpace;</a></h2>
<p>对于 git 基础基本掌握的同学来说，使用命令行操作 git 是最方便的，但是对于刚刚接触 git 的同学来说，命令行操作 git 是一件很痛苦的事情，这一章就来介绍 git 图形界面工具吧。</p>
<h3 id="vscode-源代码管理" tabindex="-1">VSCode 源代码管理 <a class="header-anchor" href="#vscode-源代码管理" aria-label="Permalink to &quot;VSCode 源代码管理&quot;">&ZeroWidthSpace;</a></h3>
<p>这是 VSCode 自带的源代码管理工具，可以在左侧的源代码管理面板中看到，也可以使用快捷键 Ctrl + Shift + G 来打开源代码管理面板。</p>
<blockquote>
<p>Git 图形界面工具可以在一定程度上代替 Git 命令行完成部分简单操作,但无法完全替代。</p>
</blockquote>
<p>在 VSCode 的 Git 图形界面中,有几个操作起来比命令行更简单易用:</p>
<ol>
<li>查看文件状态和变更</li>
</ol>
<p>在 VSCode 中可以很直观地看到工作区中的文件状态(新增、修改、删除),可以大致了解这次提交会被包含的更改内容。这比在命令行使用 git status 查看文件状态更加直观。</p>
<ol start="2">
<li>可视化地暂存和取消暂存文件</li>
</ol>
<p>可以在 VSCode 界面中直接勾选要暂存的文件,取消勾选即可取消暂存。这比在命令行使用 git add 和 git reset HEAD 要直观很多。</p>
<ol start="3">
<li>可视化地浏览提交日志</li>
</ol>
<p>在 VSCode 中可以以可视化的方式浏览提交历史,看提交摘要和具体的文件变化。这比在命令行使用 git log 查看日志要更加直观。</p>
<ol start="4">
<li>切换和创建分支</li>
</ol>
<p>在 VSCode 中可以很直观地看到本地分支和远程分支,可以直接在界面中创建、切换和删除分支。这比在命令行直接操作要更加容易上手。</p>
<ol start="5">
<li>快速推送和拉取</li>
</ol>
<p>可以直接在 VSCode 中一键完成推送(push)和拉取(pull)操作。无需输入任何 Git 命令,简单易用。</p>
<ol start="6">
<li>可视化地处理合并冲突</li>
</ol>
<p>在 VSCode 中可以直接在编辑器中看到合并冲突的文件,并可视化地编辑文件解决冲突。这比解决命令行的合并冲突文件要直观很多。所以,总体来说,VSCode 的 Git 图形界面在查看文件状态、操作暂存区、浏览提交日志、管理分支和快速推拉等方面使用起来更加简单易用。但是,像 rebase、stash 等较复杂的 Git 操作,在 VSCode 中实现起来就不会如此直观了。</p>
<h3 id="分支管理工具-gitlens" tabindex="-1">分支管理工具 GitLens <a class="header-anchor" href="#分支管理工具-gitlens" aria-label="Permalink to &quot;分支管理工具 GitLens&quot;">&ZeroWidthSpace;</a></h3>
<p>在 VSCode 上,一个广受好评的 Git 分支管理插件是 GitLens。下载安装之后，其现在不会默认显示在侧边栏，我们可以在侧边栏右键选择 gitlen 显示在侧边栏中。其默认在源代码管理侧栏上一起显示所有视图，包括：</p>
<ul>
<li>COMMITS：显示当前分支的提交历史</li>
<li>FILE HISTORY：显示当前文件的提交历史</li>
<li>BRANCHES：显示本地和远程分支</li>
<li>REMOTES：显示远程仓库</li>
<li>STASHES：显示暂存列表</li>
<li>TAGS：显示标签列表</li>
<li>CONTRIBUTORS：显示贡献者列表</li>
<li>SEARCH &amp; COMPARE：显示搜索和比较视图</li>
</ul>
<p>它可以实现:</p>
<ol>
<li>
<p>查看所有本地和远程分支,并直接在 VSCode 中创建、切换和删除分支。在 VSCode 的最下方的状态栏中,可以看到当前所在分支的信息。点击分支名称,即可查看分支信息和切换分支（有冲突则弹框报错）。</p>
</li>
<li>
<p>查看各个分支最后一次提交信息,方便比较不同分支的进展。点击下方状态栏的 gitlen 图标,可以查看分支的提交历史构成的图谱。点击某个提交,可以查看该提交的详细信息,包括作者、提交时间、提交摘要、变更文件等。点击某个提交的变更文件,可以查看该文件的具体变更内容。</p>
</li>
<li>
<p>查看文件在不同分支中的最新版本,快速比较不同分支的文件差异。在当前文件（注意需要是有多次提交改动的文件，新增文件无此按钮）右上方的带箭头的小圆球（Open Changes with Previous Revision），以将当前文件修订与先前的提交修订进行比较。</p>
</li>
<li>
<p>在文件中，我们也可以看到当前文件的提交历史，以及当前文件的作者信息。鼠标悬停在某一行代码上，可以看到该行代码的作者信息。</p>
</li>
</ol>
<p>除此之外，还有一些其它功能，这里就不一一介绍了，详细可以在插件的<a href="https://github.com/gitkraken/vscode-gitlens/tree/main" target="_blank" rel="noreferrer">官方文档</a>中查看。</p>
<h2 id="git-flow" tabindex="-1">git flow <a class="header-anchor" href="#git-flow" aria-label="Permalink to &quot;git flow&quot;">&ZeroWidthSpace;</a></h2>
<p>git flow 是一种 Git 分支管理工作流,它定义了一个围绕项目发布的严格分支模型,旨在帮助管理大型项目的开发和维护。git flow 的核心是围绕项目发布定义的一个严格的分支模型。它提供了一些高级命令,帮助我们完成分支的创建、合并等操作。</p>
<p>其意义在于：</p>
<ul>
<li>
<p>多人协作开发，权限控制</p>
</li>
<li>
<p>避免冲突</p>
</li>
<li>
<p>项目版本管理，方便溯源和回退</p>
</li>
</ul>
<h3 id="持续集成-flow" tabindex="-1">持续集成 flow <a class="header-anchor" href="#持续集成-flow" aria-label="Permalink to &quot;持续集成 flow&quot;">&ZeroWidthSpace;</a></h3>
<p>团队开发成员经常集成他们的工作,通常每个成员每天至少集成一次,也就是说每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译、发布、自动化测试）来验证,从而尽早地发现集成错误。许多团队发现这种方法可以显著减少集成问题并加快开发速度。</p>
<p><img src="https://user-images.githubusercontent.com/51811652/236365791-edd0e3d5-9ade-4856-a909-749d0cb72de2.png" alt="image"></p>
<p>优点：</p>
<ul>
<li>
<p>适用于持续集成多环境场景，版本相对比较稳定，而且需要小版本的更新迭代的场景。</p>
</li>
<li>
<p>上游分支向下游发展</p>
</li>
<li>
<p>Bug=&gt;New Feature=&gt;master=&gt;pre branch=&gt;target branch</p>
</li>
</ul>
<p>自动化流程工具 CI/CD，检测到代码变更，自动触发构建，自动化测试，自动化部署。</p>
<h3 id="版本控制-flow" tabindex="-1">版本控制 flow <a class="header-anchor" href="#版本控制-flow" aria-label="Permalink to &quot;版本控制 flow&quot;">&ZeroWidthSpace;</a></h3>
<p>Vue 和 React 都是采用的这种模型，这种模型适用于版本控制的场景，在 master 分支检出，bug 修复在分支：</p>
<p>master -&gt; Stable -&gt; new branch -&gt; bug fix -&gt; version</p>
<p><img src="https://user-images.githubusercontent.com/51811652/236366380-33fe619b-07c6-4370-ab2d-00380a30e70d.png" alt="image"></p>
<h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">&ZeroWidthSpace;</a></h2>
<p>本篇文章从 Git 的基本概念开始，介绍了 Git 的基本操作，包括 Git 命令 、Git 的 GUI 插件 GitLens、Git 的工作流 Git Flow 这些内容，这些命令和工具都是需要我们在日常开发中熟练掌握的，这样才能更好的使用 Git 来管理我们的项目。</p>
<p>另外，在本篇中也引入了团队的协作开发的概念，这些就不在本篇来讲解了，关于团队协作会再出一篇文章来讲解。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[如何正常访问 GitHub？ ]]></title>
            <link>https://mobius.cool/tool/github520.html</link>
            <guid>https://mobius.cool/tool/github520.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="如何正常访问-github" tabindex="-1">如何正常访问 GitHub？ <a class="header-anchor" href="#如何正常访问-github" aria-label="Permalink to &quot;如何正常访问 GitHub？&quot;">&ZeroWidthSpace;</a></h1>
<p>本文教你如何优雅地访问 GitHub，不需要任何费用，钱老板也可以给作者提供一定的赞助，参考地址如下：</p>
<blockquote>
<p><a href="https://github.com/521xueweihan/GitHub520" target="_blank" rel="noreferrer">https://github.com/521xueweihan/GitHub520</a></p>
</blockquote>
<p>不过个人在使用过程中还是会出现卡的情况，不是特别稳定，只做备用方案。</p>
<h2 id="安装工具" tabindex="-1">安装工具 <a class="header-anchor" href="#安装工具" aria-label="Permalink to &quot;安装工具&quot;">&ZeroWidthSpace;</a></h2>
<p>我们需要安装一个名为 <code>SwitchHosts</code> 的工具，可以直接从 GitHub 的 release 地址下载：</p>
<p><a href="https://github.com/oldj/SwitchHosts/releases" target="_blank" rel="noreferrer">SwitchHost Releases</a></p>
<p>大家可以根据自己电脑的机型来选择安装即可。</p>
<CloudinaryImg publicId='tool/switchhost-download_ilseh0' alt='switchhost-download'/><p>在这里贴两个地址吧：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_windows_installer_x64_4.1.2.6086.exe</span></span>
<span class="line"><span style="color: #B392F0">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_mac_arm64_4.1.2.6086.dmg</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_windows_installer_x64_4.1.2.6086.exe</span></span>
<span class="line"><span style="color: #6F42C1">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_mac_arm64_4.1.2.6086.dmg</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote>
<p>最好是以上述 releases 页面最新版本为主。</p>
</blockquote>
<h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">&ZeroWidthSpace;</a></h2>
<p>当我们安装好了工具之后，打开，左上角会有一个加号，我们填写如下信息：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">Hosts</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">类型：远程</span></span>
<span class="line"><span style="color: #B392F0">Hosts</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">标题：（自定义，比如</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">hellogithub）</span></span>
<span class="line"><span style="color: #B392F0">URL:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">https://raw.hellogithub.com/hosts</span></span>
<span class="line"><span style="color: #B392F0">自动刷新:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">最好选</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">hour</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">Hosts</span><span style="color: #24292E"> </span><span style="color: #032F62">类型：远程</span></span>
<span class="line"><span style="color: #6F42C1">Hosts</span><span style="color: #24292E"> </span><span style="color: #032F62">标题：（自定义，比如</span><span style="color: #24292E"> </span><span style="color: #032F62">hellogithub）</span></span>
<span class="line"><span style="color: #6F42C1">URL:</span><span style="color: #24292E"> </span><span style="color: #032F62">https://raw.hellogithub.com/hosts</span></span>
<span class="line"><span style="color: #6F42C1">自动刷新:</span><span style="color: #24292E"> </span><span style="color: #032F62">最好选</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #032F62">hour</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><CloudinaryImg publicId='tool/switchhost-config_qjhkuk' alt='switchhost-config'/><p>至此，我们就可以正常访问 GitHub 了，开启你的开源之旅吧。</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="如何正常访问-github" tabindex="-1">如何正常访问 GitHub？ <a class="header-anchor" href="#如何正常访问-github" aria-label="Permalink to &quot;如何正常访问 GitHub？&quot;">&ZeroWidthSpace;</a></h1>
<p>本文教你如何优雅地访问 GitHub，不需要任何费用，钱老板也可以给作者提供一定的赞助，参考地址如下：</p>
<blockquote>
<p><a href="https://github.com/521xueweihan/GitHub520" target="_blank" rel="noreferrer">https://github.com/521xueweihan/GitHub520</a></p>
</blockquote>
<p>不过个人在使用过程中还是会出现卡的情况，不是特别稳定，只做备用方案。</p>
<h2 id="安装工具" tabindex="-1">安装工具 <a class="header-anchor" href="#安装工具" aria-label="Permalink to &quot;安装工具&quot;">&ZeroWidthSpace;</a></h2>
<p>我们需要安装一个名为 <code>SwitchHosts</code> 的工具，可以直接从 GitHub 的 release 地址下载：</p>
<p><a href="https://github.com/oldj/SwitchHosts/releases" target="_blank" rel="noreferrer">SwitchHost Releases</a></p>
<p>大家可以根据自己电脑的机型来选择安装即可。</p>
<CloudinaryImg publicId='tool/switchhost-download_ilseh0' alt='switchhost-download'/><p>在这里贴两个地址吧：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_windows_installer_x64_4.1.2.6086.exe</span></span>
<span class="line"><span style="color: #B392F0">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_mac_arm64_4.1.2.6086.dmg</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_windows_installer_x64_4.1.2.6086.exe</span></span>
<span class="line"><span style="color: #6F42C1">https://github.com/oldj/SwitchHosts/releases/download/v4.1.2/SwitchHosts_mac_arm64_4.1.2.6086.dmg</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote>
<p>最好是以上述 releases 页面最新版本为主。</p>
</blockquote>
<h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">&ZeroWidthSpace;</a></h2>
<p>当我们安装好了工具之后，打开，左上角会有一个加号，我们填写如下信息：</p>
<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre v-pre class="shiki github-dark vp-code-dark" ><code><span class="line"><span style="color: #B392F0">Hosts</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">类型：远程</span></span>
<span class="line"><span style="color: #B392F0">Hosts</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">标题：（自定义，比如</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">hellogithub）</span></span>
<span class="line"><span style="color: #B392F0">URL:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">https://raw.hellogithub.com/hosts</span></span>
<span class="line"><span style="color: #B392F0">自动刷新:</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">最好选</span><span style="color: #E1E4E8"> </span><span style="color: #79B8FF">1</span><span style="color: #E1E4E8"> </span><span style="color: #9ECBFF">hour</span></span></code></pre><pre v-pre class="shiki github-light vp-code-light" ><code><span class="line"><span style="color: #6F42C1">Hosts</span><span style="color: #24292E"> </span><span style="color: #032F62">类型：远程</span></span>
<span class="line"><span style="color: #6F42C1">Hosts</span><span style="color: #24292E"> </span><span style="color: #032F62">标题：（自定义，比如</span><span style="color: #24292E"> </span><span style="color: #032F62">hellogithub）</span></span>
<span class="line"><span style="color: #6F42C1">URL:</span><span style="color: #24292E"> </span><span style="color: #032F62">https://raw.hellogithub.com/hosts</span></span>
<span class="line"><span style="color: #6F42C1">自动刷新:</span><span style="color: #24292E"> </span><span style="color: #032F62">最好选</span><span style="color: #24292E"> </span><span style="color: #005CC5">1</span><span style="color: #24292E"> </span><span style="color: #032F62">hour</span></span></code></pre>
<div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><CloudinaryImg publicId='tool/switchhost-config_qjhkuk' alt='switchhost-config'/><p>至此，我们就可以正常访问 GitHub 了，开启你的开源之旅吧。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[编程工具 ]]></title>
            <link>https://mobius.cool/tool/</link>
            <guid>https://mobius.cool/tool/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="编程工具" tabindex="-1">编程工具 <a class="header-anchor" href="#编程工具" aria-label="Permalink to &quot;编程工具&quot;">&ZeroWidthSpace;</a></h1>
<p>归纳一些编程相关工具与网站，提高效率。</p>
]]></description>
            <content:encoded><![CDATA[<h1 id="编程工具" tabindex="-1">编程工具 <a class="header-anchor" href="#编程工具" aria-label="Permalink to &quot;编程工具&quot;">&ZeroWidthSpace;</a></h1>
<p>归纳一些编程相关工具与网站，提高效率。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[什么时候下班？ ]]></title>
            <link>https://mobius.cool/tool/off-time/</link>
            <guid>https://mobius.cool/tool/off-time/</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="什么时候下班" tabindex="-1">什么时候下班？ <a class="header-anchor" href="#什么时候下班" aria-label="Permalink to &quot;什么时候下班？&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="加油-打工人" tabindex="-1">加油，打工人 <a class="header-anchor" href="#加油-打工人" aria-label="Permalink to &quot;加油，打工人&quot;">&ZeroWidthSpace;</a></h2>
<p>由于公司开始抓考勤了，至少保证 8h work，然而中午 12:00 - 1:30 吃饭与午休时间不计入工时，所以在公司时间需要加 9 小时 30 分钟。</p>
<blockquote>
<p>下方输入框请输入上班打卡的时间，将会自动计算下班的时间以及距离下班还有多久。</p>
</blockquote>
<DemoContainer pkg='tool/off-time' path='demo.vue'>
    <Demo/>
</DemoContainer>
<p>以上代码可做参考，应该还有很多优化的地方，欢迎 pr 提供你的想法。</p>
<blockquote>
<p>牢记下班要打卡！！！</p>
</blockquote>
]]></description>
            <content:encoded><![CDATA[<h1 id="什么时候下班" tabindex="-1">什么时候下班？ <a class="header-anchor" href="#什么时候下班" aria-label="Permalink to &quot;什么时候下班？&quot;">&ZeroWidthSpace;</a></h1>
<h2 id="加油-打工人" tabindex="-1">加油，打工人 <a class="header-anchor" href="#加油-打工人" aria-label="Permalink to &quot;加油，打工人&quot;">&ZeroWidthSpace;</a></h2>
<p>由于公司开始抓考勤了，至少保证 8h work，然而中午 12:00 - 1:30 吃饭与午休时间不计入工时，所以在公司时间需要加 9 小时 30 分钟。</p>
<blockquote>
<p>下方输入框请输入上班打卡的时间，将会自动计算下班的时间以及距离下班还有多久。</p>
</blockquote>
<DemoContainer pkg='tool/off-time' path='demo.vue'>
    <Demo/>
</DemoContainer>
<p>以上代码可做参考，应该还有很多优化的地方，欢迎 pr 提供你的想法。</p>
<blockquote>
<p>牢记下班要打卡！！！</p>
</blockquote>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[小狮子前端星球介绍 🍫 ]]></title>
            <link>https://mobius.cool/zsxq.html</link>
            <guid>https://mobius.cool/zsxq.html</guid>
            <pubDate>Thu, 01 Jul 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[<h1 id="小狮子前端星球介绍-🍫" tabindex="-1">小狮子前端星球介绍 🍫 <a class="header-anchor" href="#小狮子前端星球介绍-🍫" aria-label="Permalink to &quot;小狮子前端星球介绍 🍫&quot;">&ZeroWidthSpace;</a></h1>
<blockquote>
<p>by 一百个 Chocolate，做专业的前端星球，打造一个前端技术氛围的社群。</p>
</blockquote>
<h2 id="星球介绍" tabindex="-1">星球介绍 <a class="header-anchor" href="#星球介绍" aria-label="Permalink to &quot;星球介绍&quot;">&ZeroWidthSpace;</a></h2>
<p>星球由一百个 Chocolate 和 HearLing 两位主创，都是从事前端工作，由于各自兴趣点不同，相较于其他前端星球，我们能服务的用户群体更广，不管是<strong>零基础</strong>的小白，还是想要拓宽<strong>技术视野</strong>，提升<strong>前端技能</strong>水平，我们这里都有。
当然，我们星球<strong>不会限制于任何技术框架</strong>，不管是 React 还是 Vue 也好，我们都有！另外，前端工程化方面，Vite、Webpack 以及新出的 Turbopack 我们都会有研究！
不同于其他星球，咱们星球会专注于「<strong>前端</strong>」这个领域，打造一个前端技术氛围的社群。</p>
<h2 id="主创成员介绍" tabindex="-1">主创成员介绍 <a class="header-anchor" href="#主创成员介绍" aria-label="Permalink to &quot;主创成员介绍&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>Chocolate：</li>
</ul>
<p><a href="https://chocolate.blog.csdn.net/" target="_blank" rel="noreferrer">CSDN 博客专家</a>
<a href="https://juejin.cn/user/2981531267112520" target="_blank" rel="noreferrer">掘金 Lv5</a></p>
<p><a href="https://space.bilibili.com/351534170" target="_blank" rel="noreferrer">B 站 UP 主一百个 Chocolate</a></p>
<p>大厂前端开发。21 届本科毕业，有过 <a href="/green/ch.html">ACM</a> 比赛经历。</p>
<ul>
<li>Hearing：</li>
</ul>
<p><a href="https://space.bilibili.com/201738571" target="_blank" rel="noreferrer">B 站 程序员 UP 主 HearLing</a></p>
<p>在中小型公司都工作过，项目&amp;知识总结爱好者，在前端面试这块算是小有研究，大学阶段有过大型项目比赛经历，拿过国家级一等奖。</p>
<blockquote>
<p>虽然星球还没有邀请嘉宾入驻，但我们也很欢迎各位大佬们的加入，一起共建社区！</p>
</blockquote>
<h2 id="_23-年-6-月更新" tabindex="-1">23 年 6 月更新 <a class="header-anchor" href="#_23-年-6-月更新" aria-label="Permalink to &quot;23 年 6 月更新&quot;">&ZeroWidthSpace;</a></h2>
<p>下半年打算将星球降价了，老用户续费的话可以联系我额外领取优惠券，所以也不会亏，当然，才进来没多久（未到半年）想退也可以，仅支持退半年费用（手续费不退）</p>
<p>虽然说是知识付费，但大多数人会因为我个人而付费，但目前我做的方式也许达不到该有的价值，因此考虑降价，只要我还在做编程这个领域，这个社群就会还在，我也同样每周会和各位分享我的学习动态，每周完成打卡。</p>
<p>其次，在星球内也很高兴有球友拿到了 offer，也是比较活跃的几位，关于各位提的问题基本上都回答还算不错，下半年还需继续努力。</p>
<p>其他的，各位也许能理解其中原因，暂时就不列举了，到年底总结就再好好复盘一下吧。</p>
<blockquote>
<p>待更新...</p>
</blockquote>
<h2 id="加入方式" tabindex="-1">加入方式 <a class="header-anchor" href="#加入方式" aria-label="Permalink to &quot;加入方式&quot;">&ZeroWidthSpace;</a></h2>
<p>目前星球内已有 <strong>110+</strong> 朋友加入 🎉，加入可享有<strong>一年</strong>有效期。</p>
<blockquote>
<p>注意：星球价格会根据人数和星球内容的价值持续上涨，目前是<strong>￥ 59</strong>，已经是最低价了。</p>
</blockquote>
<details class="details custom-block"><summary>附：扫码加入</summary>
<p><img src="/img/join.png" alt=""></p>
</details>
<p>以下是我们今年星球的规划，提供了导图版（一图胜千言）和文字版，文字版本会更详细，内容也会是最新的，所以推荐看完导图之后也可阅读一下文字版本，如下：</p>
<blockquote>
<p>如果移动端思维导图打不开，建议 pc 端打开，另外如果你对于<strong>付费加入</strong>比较抵触，下文的内容就可以跳过了，节省时间。</p>
</blockquote>
<details class="details custom-block"><summary>思维导图描述</summary>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161901878.png?imageMogr2/format/webp" alt="星球规划"></p>
</details>
<details class="details custom-block"><summary>规划文字版（必读）</summary>
<p><strong>1、【学如逆水行舟】专栏，星球内部我们提供了专栏，内容目前主要分为以下几个板块：</strong></p>
<ul>
<li>编程 | 项目 | 工具：（一些编程经验以及好的开源项目推荐，同时还会分享实用的工具）</li>
<li>校招 | 租房 | 大学：（分享校招经历，租房注意事项，大学生活，比如 acm，参与项目比赛等）</li>
<li>阅读 | 小册 | 好文：（阅读的好书，小册读完后分享阅读体会以及好的文章推荐）</li>
<li>工作 | 职场 | 业务：（分享工作职场经验，也会分享一些业务上的事情）</li>
<li>随笔 | 手记 | 思考：（日常分享，无时无刻都在思考）</li>
</ul>
<p><strong>2、提供【简历评估】服务，分享我们自己的校招简历模版，并为你提供简历评估服务，通过提问的形式，我们会提供改进的建议。</strong></p>
<p><strong>3、提供【模拟面试】全流程服务，根据你的目标定制化提供面试内容，面试完后会在 b 站提供视频回放（会添加字幕），方便随时查看，详细的面试点评也仅会在星球内发布。</strong></p>
<p><strong>4、【活动规划】：</strong></p>
<ul>
<li>工作日日更系列：（工作日会保持日更，分享今日获取的信息流、阅读的一些优质文章、思考内容、趣事、星球产出动态汇报）</li>
<li>模拟面试活动：（每年的春招和秋招提前 1 个月左右开启，详情见<a href="/interview/interviewer/">模拟面试介绍</a>）</li>
<li>项目实战：（带你参与完整的开源项目，从零到一学会一个开源项目，包括代码提交规范，项目规范，流程规范，这些都是在公司内必须要求的，前期星球内成员是参与私有仓库一起开发，待项目快完成时我们会进行开源，然后会分配权限给到已经学会的伙伴继续拓展功能，预计 3 月份会有具体参与项目的文档介绍。）</li>
<li>算法集训：（由参与过 acm 的我们带你刷 leetcode，提供完整详细的刷题路线，不再畏惧算法！目前已提供了一版刷题路线，详情见<a href="/algorithm/guide/">算法刷题导读</a>）</li>
<li>其它：（规划中，可提出建议，我们会安排时间来准备）</li>
</ul>
<p><strong>5、【项目实战】：</strong></p>
<ul>
<li>能获得比较前沿的技术知识和实战经验。</li>
<li>【已开源】Vitepress + unocss + Vite 搭建个人文档网站 ChoDocs(<a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">https://github.com/chodocs/chodocs</a>)</li>
<li>【已开源】Next.js 13 + Tailwind CSS 搭建个人博客(<a href="https://github.com/Chocolate1999/nextjs-tailwind-blog" target="_blank" rel="noreferrer">https://github.com/Chocolate1999/nextjs-tailwind-blog</a>)</li>
<li>【已开源】使用 hexo 折腾个人博客(<a href="https://github.com/Chocolate1999/hexo-blog-lionkk" target="_blank" rel="noreferrer">https://github.com/Chocolate1999/hexo-blog-lionkk</a>)</li>
<li>【进行中】Vue3 + TS + Pinia 管理系统实战开发</li>
<li>【规划中】Next.js 13 实战开发</li>
<li>预计 3 月份会有详细文档介绍</li>
</ul>
<p><strong>4、【星球资源】：</strong></p>
<ul>
<li>一对一式提问服务，我们会解决你的疑问，如果有学习上的问题可以随时可出，有问必答，但也需要注意节约大家的时间，不要提需要我们猜测的问题，将问题的描述尽量详细一点，这样也能更方便我们写出更详细的回答，相互理解</li>
<li>一群志同道合的朋友，在这里你如果发表优质内容，我们会给你点赞，分享获得某项奖，我们会提供祝贺</li>
<li>每日文章推送，专栏更新（可参考上文）</li>
<li>开发工具共享、保持前沿技术学习</li>
<li>知识整理成思维导图，文件共享</li>
<li>前端信息流推送，掌握前沿动态</li>
<li>星球内部交流与招聘内推信息群（考虑中）</li>
</ul>
<p><strong>5、【建立背景与定位】：</strong></p>
<p>参考下文。</p>
</details>
<details class="details custom-block"><summary>建立背景与定位（短小精悍）</summary>
<p><strong>星球不是用来卖课的！不是卖课的！我们提供的是服务！</strong></p>
<p>我们过去也创立了一些几百人的微信群，要么聊着聊着没人说话了，要么一堆的群消息满天飞，而真正想要求问的问题一刷而过，况且微信群属于无门槛的，也是鱼龙混杂，随着人数加入，可能就变成水群大军了...</p>
<p>而在星球内我们会提供更用心的回答与咨询服务，我们定位也是一个专业的前端星球，来打造前端技术氛围的社群。</p>
</details>
<blockquote>
<p>如果对于上文内容有疑惑，或者需要添加好友，推荐关注下方微信公众号「<a href="/img/wx.jpeg">小狮子前端</a>」，在底部菜单栏可以添加星主「Chocolate」微信。</p>
</blockquote>
<details class="details custom-block"><summary>可扫码关注小狮子前端</summary>
<p><img src="/img/wx.jpeg" alt=""></p>
</details>
<p>如果你觉得 <a href="https://mobius.cool/" target="_blank" rel="noreferrer">ChoDocs</a> 内容不错的话，不妨加入我们的付费星球，里面还有更多的内容干货！</p>
<h2 id="在星球能收获什么" tabindex="-1">在星球能收获什么？ <a class="header-anchor" href="#在星球能收获什么" aria-label="Permalink to &quot;在星球能收获什么？&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>以下是星球的介绍：</p>
</blockquote>
<details class="details custom-block"><summary>星球介绍（推荐阅读）</summary>
<p>星球创建成员均是 21 届毕业生，大厂前端开发，B 站 UP 主，欢迎大家加入专注于前端领域的星球。</p>
<p>我们之前有微信群也有 qq 群，鱼龙混杂，管理不方便，消息也是一刷而过。在这个前端星球里，每个问题都会认真仔细回答，还有星球内部文档与你分享。</p>
<p>【加入】星球，你可以:</p>
<ol>
<li>获取为你整理好的学习专栏，前端老照片，Vue、React、Next.js 实战，前端算法，设计模式，学习路线等，可见下文「<strong>One more thing</strong>」。</li>
<li>提供 1 v 1 提问解答，解决学习工作上迷茫的事情。</li>
<li>阅读为你准备好的本星球【学如逆水行舟】专栏，不论是项目经历、刷题日记、打工生活、笔试面试、春秋招、编写简历等等都会有的。</li>
<li>参与春秋招期间的【模拟面试】活动以及提供【简历评估】。</li>
<li>成为 Chocolate 好朋友，不留私货的和你分享前端相关知识。</li>
<li>框架不限，不论 Vue 还是 React 我们都有，只要是你认为的前端，我们都分享。</li>
<li>参与前端开源项目从 0 到 1 开发，为自己 GitHub 增加小绿点，熟悉开发流程。</li>
<li>下文还有更多内容 ↓</li>
</ol>
<p>【初心】做前端界最好的活跃星球！</p>
</details>
<blockquote>
<p>以下是要不要加入的问题：</p>
</blockquote>
<details class="details custom-block"><summary>是否要加入（必读）</summary>
<ol>
<li>如果你只是想短时间内获得某项技能，这里可能要说一下星球内可能做不到，因为学习得到的回报不是短时间就能看到成果的。饭要一口一口吃，学如逆水行舟，不进则退，加入星球，我们是提供<strong>一年</strong>的服务，这一年内你能获得许多内容干货，而如果仅仅只想要了解基础知识，其实可以不必加入，我们的 ChoDocs 网站已经能够满足需求了，内容都是开源免费的，你随时可以翻一番搜索阅读等，详情可查看<a href="/chodocs.html">关于 ChoDocs</a>。</li>
<li>如果你只是需要模拟面试或者参与一些项目，你也可以不加入星球，我们也拥有开源精神，你可以选择参与免费的模拟面试，项目的话我们在星球内部做完之后也会完全开源，你依旧可以给我们提交 PR，通过源代码学习，我也相信你有这个能力去掌握这些知识。</li>
<li>如果你只是想进来看看，并没有打算提升自己的话，也不是太推荐加入，把钱留着吃点好吃的也许会更好一点，因为星球它不是一种卖课的形式，我们也希望各位能够主动参与进来，学习编程就是这样，你不主动去探索，不去自己动手实践，这些经验永远都只是别人的。</li>
<li>关于星球价格问题，可参考其他星球，目前 <strong>99</strong> 元已经是最低优惠了，之后随着内容质量的更新我们还会进行价格涨幅，毕竟这是提供一年的服务，关于付费的话，我想已经加入的同学是能够理解的，免费的自然是免费的，大家素未谋面，为什么我要花时间在你身上呢，而付费的话，你付费我来给你提供服务，况且，不满意，3 天内也是可以直接<strong>全款</strong>退的。</li>
<li>我们也希望真正需要能够保持学习、想要提升前端方面技能的同学加入，也许这是一份不错的投资，为知识付费这完全不亏！</li>
<li>如果此刻你还在犹豫星球的内容，可在上面了解一下添加星主微信，可提供<strong>免费的 3 天</strong>体验，先看看再考虑要不要加入。</li>
<li>担心我们的内容会更新没那么快以至于做不到？其实可以看看这个网站的动态，我们内容更新还是比较快的，我们自己也会保持学习，提供给大家学习的动力，看我们 GitHub 绿点就知道了：<a href="https://github.com/Chocolate1999" target="_blank" rel="noreferrer">Chocolate GitHub</a> 和 <a href="https://github.com/HearLing" target="_blank" rel="noreferrer">HearLing GitHub</a>。</li>
<li>一群人才能走的更远，不管你是否还在犹豫，等你想好了我们随时欢迎，加入之后立刻享有「<strong>1 年</strong>」服务时间，方便快捷。不过都说要做一个早鸟，星球也是，越早加入越优惠，早加入早享受，晚加入等折扣。</li>
<li>在当前环境下，保持学习的习惯受益终身，不管之后遇到怎样的就业环境变动，过去所掌握的知识不会欺骗于你，这是实实在在的「沉淀物」。</li>
<li>星球内精华内容我们暂时不展示了，我相信愿意加入的可能已经扫码在看了，不愿意加入的再怎么展示有多么好也没用，对于内容不太清楚或者想要了解详情的可以扫下方码或者添加星主微信交流也可以。</li>
</ol>
</details>
<details class="details custom-block"><summary>附：扫码加入</summary>
<p><img src="/img/join.png" alt=""></p>
</details>
<h2 id="one-more-thing" tabindex="-1">One more thing <a class="header-anchor" href="#one-more-thing" aria-label="Permalink to &quot;One more thing&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>加入星球可共享内部文档和学习动态</p>
</blockquote>
<details class="details custom-block"><summary>星球专属</summary>
<p>我们会将我们过去的一些内容进行整理，如下图所示，形成真正的「小册」，到时候会作为我们星球成员的内部文档共享！这些小册部分会在其他平台，比如 csdn 以付费专栏形式出版，但加入星球即可省去额外付费了，加入后可阅读所有未来会出的付费专栏！目前已出《小狮子前端老照片》有 10w+ 字左右。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161900285.png?imageMogr2/format/webp" alt="星球小册"></p>
<p>对于前端老照片小册以下就截取一部分，我们既然说了要做专业的前端领域星球，自然说到就要做到，对于星球用户我们一直都是非常热心肠的！</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161858202.png?imageMogr2/format/webp" alt="星球内部文档"></p>
<p>其它的会在上半年内陆续更新完，比如 Vue3 的管理系统，之前大家也有参与过，目前已经在编写相关文档了，而我接下来也会有 Next.js 的实战系列，感兴趣的也可以继续参与。</p>
<p>另外，3 月份开始我们会开启每周打卡活动，我们自己也会参与进来，大概形式会是以飞书多维表格样子，到时候也可以和大家共享我们的学习动态，不限于阅读的文章，使用的软件，看的一些优质视频，以及英语学习内容（很重要），这些内容不够好的我们也会直接过滤掉，不展示了，那么各位也可以分享打卡自己每周的学习内容，星球学习氛围也会越来越好，当然，也会给各位提供可参考的前端学习路线，这样大家只需要拷贝一下副本，完全可以根据上面来保持学习进度，这样每周周末就可以总结一下一周完成的事情，成就满满！</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161859799.png?imageMogr2/format/webp" alt="打卡活动示例"></p>
<p>为什么这么做？</p>
<p>第一点，因为在我们过去在学习前端的时候虽然能够知道某些平台能有一些不错的文章，但是因为知识掌握程度不够，不足以辨识内容的质量，所以会花费许多时间在一些查找资料当中，当时我就在想如果要是有个大佬告诉我该学什么就好了。</p>
<p>第二点，星球内也有一些已经工作的伙伴，之前我也问过一些，加入星球后希望找到自己兴趣方向，工作了之后有时候又不知道学什么，感觉工作完后并没有学习动力了，那么对于技能提升这块我们或许也有共同话题，在星球内也可以讨论讨论，行动起来。</p>
<p>第三点，我们星球提供更多的还是服务，因此如果仅仅靠我们单向输出，一年内也许很难出很多优质的内容，但是我们有的是一些编程经验，我们可以发现一些优秀的内容，筛选后再整合到一页，我们也应该多多向业界其它优秀人士继续学习。</p>
<p>第四点，如果你能跟着这份知识空间学习，或许我们今后还能有更多的合作，比如一起做一款产品出来，其实在过去学校参与项目比赛，我发现其实一个队伍有没有大佬并不重要，有大佬只是决定了这个比赛获奖的上限程度，但没有这个关键的凝聚力，也很难达到该有的成绩，比如组内成员做着做着就放弃了，前几周都还在交流，后几周都没人说话了，因此一个小分队的凝聚力挺重要的，有相同目标的小分队，哪怕就只有 5 个技术水平一般的人，在同样的准备时间内成绩不会太差的。</p>
<p>文档更新完后，会在星球内发布相关置顶的帖子，可以期待一下，继续努力！</p>
</details>
<details class="details custom-block"><summary>附：扫码加入</summary>
<p><img src="/img/join.png" alt=""></p>
</details>
]]></description>
            <content:encoded><![CDATA[<h1 id="小狮子前端星球介绍-🍫" tabindex="-1">小狮子前端星球介绍 🍫 <a class="header-anchor" href="#小狮子前端星球介绍-🍫" aria-label="Permalink to &quot;小狮子前端星球介绍 🍫&quot;">&ZeroWidthSpace;</a></h1>
<blockquote>
<p>by 一百个 Chocolate，做专业的前端星球，打造一个前端技术氛围的社群。</p>
</blockquote>
<h2 id="星球介绍" tabindex="-1">星球介绍 <a class="header-anchor" href="#星球介绍" aria-label="Permalink to &quot;星球介绍&quot;">&ZeroWidthSpace;</a></h2>
<p>星球由一百个 Chocolate 和 HearLing 两位主创，都是从事前端工作，由于各自兴趣点不同，相较于其他前端星球，我们能服务的用户群体更广，不管是<strong>零基础</strong>的小白，还是想要拓宽<strong>技术视野</strong>，提升<strong>前端技能</strong>水平，我们这里都有。
当然，我们星球<strong>不会限制于任何技术框架</strong>，不管是 React 还是 Vue 也好，我们都有！另外，前端工程化方面，Vite、Webpack 以及新出的 Turbopack 我们都会有研究！
不同于其他星球，咱们星球会专注于「<strong>前端</strong>」这个领域，打造一个前端技术氛围的社群。</p>
<h2 id="主创成员介绍" tabindex="-1">主创成员介绍 <a class="header-anchor" href="#主创成员介绍" aria-label="Permalink to &quot;主创成员介绍&quot;">&ZeroWidthSpace;</a></h2>
<ul>
<li>Chocolate：</li>
</ul>
<p><a href="https://chocolate.blog.csdn.net/" target="_blank" rel="noreferrer">CSDN 博客专家</a>
<a href="https://juejin.cn/user/2981531267112520" target="_blank" rel="noreferrer">掘金 Lv5</a></p>
<p><a href="https://space.bilibili.com/351534170" target="_blank" rel="noreferrer">B 站 UP 主一百个 Chocolate</a></p>
<p>大厂前端开发。21 届本科毕业，有过 <a href="/green/ch.html">ACM</a> 比赛经历。</p>
<ul>
<li>Hearing：</li>
</ul>
<p><a href="https://space.bilibili.com/201738571" target="_blank" rel="noreferrer">B 站 程序员 UP 主 HearLing</a></p>
<p>在中小型公司都工作过，项目&amp;知识总结爱好者，在前端面试这块算是小有研究，大学阶段有过大型项目比赛经历，拿过国家级一等奖。</p>
<blockquote>
<p>虽然星球还没有邀请嘉宾入驻，但我们也很欢迎各位大佬们的加入，一起共建社区！</p>
</blockquote>
<h2 id="_23-年-6-月更新" tabindex="-1">23 年 6 月更新 <a class="header-anchor" href="#_23-年-6-月更新" aria-label="Permalink to &quot;23 年 6 月更新&quot;">&ZeroWidthSpace;</a></h2>
<p>下半年打算将星球降价了，老用户续费的话可以联系我额外领取优惠券，所以也不会亏，当然，才进来没多久（未到半年）想退也可以，仅支持退半年费用（手续费不退）</p>
<p>虽然说是知识付费，但大多数人会因为我个人而付费，但目前我做的方式也许达不到该有的价值，因此考虑降价，只要我还在做编程这个领域，这个社群就会还在，我也同样每周会和各位分享我的学习动态，每周完成打卡。</p>
<p>其次，在星球内也很高兴有球友拿到了 offer，也是比较活跃的几位，关于各位提的问题基本上都回答还算不错，下半年还需继续努力。</p>
<p>其他的，各位也许能理解其中原因，暂时就不列举了，到年底总结就再好好复盘一下吧。</p>
<blockquote>
<p>待更新...</p>
</blockquote>
<h2 id="加入方式" tabindex="-1">加入方式 <a class="header-anchor" href="#加入方式" aria-label="Permalink to &quot;加入方式&quot;">&ZeroWidthSpace;</a></h2>
<p>目前星球内已有 <strong>110+</strong> 朋友加入 🎉，加入可享有<strong>一年</strong>有效期。</p>
<blockquote>
<p>注意：星球价格会根据人数和星球内容的价值持续上涨，目前是<strong>￥ 59</strong>，已经是最低价了。</p>
</blockquote>
<details class="details custom-block"><summary>附：扫码加入</summary>
<p><img src="/img/join.png" alt=""></p>
</details>
<p>以下是我们今年星球的规划，提供了导图版（一图胜千言）和文字版，文字版本会更详细，内容也会是最新的，所以推荐看完导图之后也可阅读一下文字版本，如下：</p>
<blockquote>
<p>如果移动端思维导图打不开，建议 pc 端打开，另外如果你对于<strong>付费加入</strong>比较抵触，下文的内容就可以跳过了，节省时间。</p>
</blockquote>
<details class="details custom-block"><summary>思维导图描述</summary>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161901878.png?imageMogr2/format/webp" alt="星球规划"></p>
</details>
<details class="details custom-block"><summary>规划文字版（必读）</summary>
<p><strong>1、【学如逆水行舟】专栏，星球内部我们提供了专栏，内容目前主要分为以下几个板块：</strong></p>
<ul>
<li>编程 | 项目 | 工具：（一些编程经验以及好的开源项目推荐，同时还会分享实用的工具）</li>
<li>校招 | 租房 | 大学：（分享校招经历，租房注意事项，大学生活，比如 acm，参与项目比赛等）</li>
<li>阅读 | 小册 | 好文：（阅读的好书，小册读完后分享阅读体会以及好的文章推荐）</li>
<li>工作 | 职场 | 业务：（分享工作职场经验，也会分享一些业务上的事情）</li>
<li>随笔 | 手记 | 思考：（日常分享，无时无刻都在思考）</li>
</ul>
<p><strong>2、提供【简历评估】服务，分享我们自己的校招简历模版，并为你提供简历评估服务，通过提问的形式，我们会提供改进的建议。</strong></p>
<p><strong>3、提供【模拟面试】全流程服务，根据你的目标定制化提供面试内容，面试完后会在 b 站提供视频回放（会添加字幕），方便随时查看，详细的面试点评也仅会在星球内发布。</strong></p>
<p><strong>4、【活动规划】：</strong></p>
<ul>
<li>工作日日更系列：（工作日会保持日更，分享今日获取的信息流、阅读的一些优质文章、思考内容、趣事、星球产出动态汇报）</li>
<li>模拟面试活动：（每年的春招和秋招提前 1 个月左右开启，详情见<a href="/interview/interviewer/">模拟面试介绍</a>）</li>
<li>项目实战：（带你参与完整的开源项目，从零到一学会一个开源项目，包括代码提交规范，项目规范，流程规范，这些都是在公司内必须要求的，前期星球内成员是参与私有仓库一起开发，待项目快完成时我们会进行开源，然后会分配权限给到已经学会的伙伴继续拓展功能，预计 3 月份会有具体参与项目的文档介绍。）</li>
<li>算法集训：（由参与过 acm 的我们带你刷 leetcode，提供完整详细的刷题路线，不再畏惧算法！目前已提供了一版刷题路线，详情见<a href="/algorithm/guide/">算法刷题导读</a>）</li>
<li>其它：（规划中，可提出建议，我们会安排时间来准备）</li>
</ul>
<p><strong>5、【项目实战】：</strong></p>
<ul>
<li>能获得比较前沿的技术知识和实战经验。</li>
<li>【已开源】Vitepress + unocss + Vite 搭建个人文档网站 ChoDocs(<a href="https://github.com/chodocs/chodocs" target="_blank" rel="noreferrer">https://github.com/chodocs/chodocs</a>)</li>
<li>【已开源】Next.js 13 + Tailwind CSS 搭建个人博客(<a href="https://github.com/Chocolate1999/nextjs-tailwind-blog" target="_blank" rel="noreferrer">https://github.com/Chocolate1999/nextjs-tailwind-blog</a>)</li>
<li>【已开源】使用 hexo 折腾个人博客(<a href="https://github.com/Chocolate1999/hexo-blog-lionkk" target="_blank" rel="noreferrer">https://github.com/Chocolate1999/hexo-blog-lionkk</a>)</li>
<li>【进行中】Vue3 + TS + Pinia 管理系统实战开发</li>
<li>【规划中】Next.js 13 实战开发</li>
<li>预计 3 月份会有详细文档介绍</li>
</ul>
<p><strong>4、【星球资源】：</strong></p>
<ul>
<li>一对一式提问服务，我们会解决你的疑问，如果有学习上的问题可以随时可出，有问必答，但也需要注意节约大家的时间，不要提需要我们猜测的问题，将问题的描述尽量详细一点，这样也能更方便我们写出更详细的回答，相互理解</li>
<li>一群志同道合的朋友，在这里你如果发表优质内容，我们会给你点赞，分享获得某项奖，我们会提供祝贺</li>
<li>每日文章推送，专栏更新（可参考上文）</li>
<li>开发工具共享、保持前沿技术学习</li>
<li>知识整理成思维导图，文件共享</li>
<li>前端信息流推送，掌握前沿动态</li>
<li>星球内部交流与招聘内推信息群（考虑中）</li>
</ul>
<p><strong>5、【建立背景与定位】：</strong></p>
<p>参考下文。</p>
</details>
<details class="details custom-block"><summary>建立背景与定位（短小精悍）</summary>
<p><strong>星球不是用来卖课的！不是卖课的！我们提供的是服务！</strong></p>
<p>我们过去也创立了一些几百人的微信群，要么聊着聊着没人说话了，要么一堆的群消息满天飞，而真正想要求问的问题一刷而过，况且微信群属于无门槛的，也是鱼龙混杂，随着人数加入，可能就变成水群大军了...</p>
<p>而在星球内我们会提供更用心的回答与咨询服务，我们定位也是一个专业的前端星球，来打造前端技术氛围的社群。</p>
</details>
<blockquote>
<p>如果对于上文内容有疑惑，或者需要添加好友，推荐关注下方微信公众号「<a href="/img/wx.jpeg">小狮子前端</a>」，在底部菜单栏可以添加星主「Chocolate」微信。</p>
</blockquote>
<details class="details custom-block"><summary>可扫码关注小狮子前端</summary>
<p><img src="/img/wx.jpeg" alt=""></p>
</details>
<p>如果你觉得 <a href="https://mobius.cool/" target="_blank" rel="noreferrer">ChoDocs</a> 内容不错的话，不妨加入我们的付费星球，里面还有更多的内容干货！</p>
<h2 id="在星球能收获什么" tabindex="-1">在星球能收获什么？ <a class="header-anchor" href="#在星球能收获什么" aria-label="Permalink to &quot;在星球能收获什么？&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>以下是星球的介绍：</p>
</blockquote>
<details class="details custom-block"><summary>星球介绍（推荐阅读）</summary>
<p>星球创建成员均是 21 届毕业生，大厂前端开发，B 站 UP 主，欢迎大家加入专注于前端领域的星球。</p>
<p>我们之前有微信群也有 qq 群，鱼龙混杂，管理不方便，消息也是一刷而过。在这个前端星球里，每个问题都会认真仔细回答，还有星球内部文档与你分享。</p>
<p>【加入】星球，你可以:</p>
<ol>
<li>获取为你整理好的学习专栏，前端老照片，Vue、React、Next.js 实战，前端算法，设计模式，学习路线等，可见下文「<strong>One more thing</strong>」。</li>
<li>提供 1 v 1 提问解答，解决学习工作上迷茫的事情。</li>
<li>阅读为你准备好的本星球【学如逆水行舟】专栏，不论是项目经历、刷题日记、打工生活、笔试面试、春秋招、编写简历等等都会有的。</li>
<li>参与春秋招期间的【模拟面试】活动以及提供【简历评估】。</li>
<li>成为 Chocolate 好朋友，不留私货的和你分享前端相关知识。</li>
<li>框架不限，不论 Vue 还是 React 我们都有，只要是你认为的前端，我们都分享。</li>
<li>参与前端开源项目从 0 到 1 开发，为自己 GitHub 增加小绿点，熟悉开发流程。</li>
<li>下文还有更多内容 ↓</li>
</ol>
<p>【初心】做前端界最好的活跃星球！</p>
</details>
<blockquote>
<p>以下是要不要加入的问题：</p>
</blockquote>
<details class="details custom-block"><summary>是否要加入（必读）</summary>
<ol>
<li>如果你只是想短时间内获得某项技能，这里可能要说一下星球内可能做不到，因为学习得到的回报不是短时间就能看到成果的。饭要一口一口吃，学如逆水行舟，不进则退，加入星球，我们是提供<strong>一年</strong>的服务，这一年内你能获得许多内容干货，而如果仅仅只想要了解基础知识，其实可以不必加入，我们的 ChoDocs 网站已经能够满足需求了，内容都是开源免费的，你随时可以翻一番搜索阅读等，详情可查看<a href="/chodocs.html">关于 ChoDocs</a>。</li>
<li>如果你只是需要模拟面试或者参与一些项目，你也可以不加入星球，我们也拥有开源精神，你可以选择参与免费的模拟面试，项目的话我们在星球内部做完之后也会完全开源，你依旧可以给我们提交 PR，通过源代码学习，我也相信你有这个能力去掌握这些知识。</li>
<li>如果你只是想进来看看，并没有打算提升自己的话，也不是太推荐加入，把钱留着吃点好吃的也许会更好一点，因为星球它不是一种卖课的形式，我们也希望各位能够主动参与进来，学习编程就是这样，你不主动去探索，不去自己动手实践，这些经验永远都只是别人的。</li>
<li>关于星球价格问题，可参考其他星球，目前 <strong>99</strong> 元已经是最低优惠了，之后随着内容质量的更新我们还会进行价格涨幅，毕竟这是提供一年的服务，关于付费的话，我想已经加入的同学是能够理解的，免费的自然是免费的，大家素未谋面，为什么我要花时间在你身上呢，而付费的话，你付费我来给你提供服务，况且，不满意，3 天内也是可以直接<strong>全款</strong>退的。</li>
<li>我们也希望真正需要能够保持学习、想要提升前端方面技能的同学加入，也许这是一份不错的投资，为知识付费这完全不亏！</li>
<li>如果此刻你还在犹豫星球的内容，可在上面了解一下添加星主微信，可提供<strong>免费的 3 天</strong>体验，先看看再考虑要不要加入。</li>
<li>担心我们的内容会更新没那么快以至于做不到？其实可以看看这个网站的动态，我们内容更新还是比较快的，我们自己也会保持学习，提供给大家学习的动力，看我们 GitHub 绿点就知道了：<a href="https://github.com/Chocolate1999" target="_blank" rel="noreferrer">Chocolate GitHub</a> 和 <a href="https://github.com/HearLing" target="_blank" rel="noreferrer">HearLing GitHub</a>。</li>
<li>一群人才能走的更远，不管你是否还在犹豫，等你想好了我们随时欢迎，加入之后立刻享有「<strong>1 年</strong>」服务时间，方便快捷。不过都说要做一个早鸟，星球也是，越早加入越优惠，早加入早享受，晚加入等折扣。</li>
<li>在当前环境下，保持学习的习惯受益终身，不管之后遇到怎样的就业环境变动，过去所掌握的知识不会欺骗于你，这是实实在在的「沉淀物」。</li>
<li>星球内精华内容我们暂时不展示了，我相信愿意加入的可能已经扫码在看了，不愿意加入的再怎么展示有多么好也没用，对于内容不太清楚或者想要了解详情的可以扫下方码或者添加星主微信交流也可以。</li>
</ol>
</details>
<details class="details custom-block"><summary>附：扫码加入</summary>
<p><img src="/img/join.png" alt=""></p>
</details>
<h2 id="one-more-thing" tabindex="-1">One more thing <a class="header-anchor" href="#one-more-thing" aria-label="Permalink to &quot;One more thing&quot;">&ZeroWidthSpace;</a></h2>
<blockquote>
<p>加入星球可共享内部文档和学习动态</p>
</blockquote>
<details class="details custom-block"><summary>星球专属</summary>
<p>我们会将我们过去的一些内容进行整理，如下图所示，形成真正的「小册」，到时候会作为我们星球成员的内部文档共享！这些小册部分会在其他平台，比如 csdn 以付费专栏形式出版，但加入星球即可省去额外付费了，加入后可阅读所有未来会出的付费专栏！目前已出《小狮子前端老照片》有 10w+ 字左右。</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161900285.png?imageMogr2/format/webp" alt="星球小册"></p>
<p>对于前端老照片小册以下就截取一部分，我们既然说了要做专业的前端领域星球，自然说到就要做到，对于星球用户我们一直都是非常热心肠的！</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161858202.png?imageMogr2/format/webp" alt="星球内部文档"></p>
<p>其它的会在上半年内陆续更新完，比如 Vue3 的管理系统，之前大家也有参与过，目前已经在编写相关文档了，而我接下来也会有 Next.js 的实战系列，感兴趣的也可以继续参与。</p>
<p>另外，3 月份开始我们会开启每周打卡活动，我们自己也会参与进来，大概形式会是以飞书多维表格样子，到时候也可以和大家共享我们的学习动态，不限于阅读的文章，使用的软件，看的一些优质视频，以及英语学习内容（很重要），这些内容不够好的我们也会直接过滤掉，不展示了，那么各位也可以分享打卡自己每周的学习内容，星球学习氛围也会越来越好，当然，也会给各位提供可参考的前端学习路线，这样大家只需要拷贝一下副本，完全可以根据上面来保持学习进度，这样每周周末就可以总结一下一周完成的事情，成就满满！</p>
<p><img src="https://chodocs-1301295644.cos.accelerate.myqcloud.com/img/202304161859799.png?imageMogr2/format/webp" alt="打卡活动示例"></p>
<p>为什么这么做？</p>
<p>第一点，因为在我们过去在学习前端的时候虽然能够知道某些平台能有一些不错的文章，但是因为知识掌握程度不够，不足以辨识内容的质量，所以会花费许多时间在一些查找资料当中，当时我就在想如果要是有个大佬告诉我该学什么就好了。</p>
<p>第二点，星球内也有一些已经工作的伙伴，之前我也问过一些，加入星球后希望找到自己兴趣方向，工作了之后有时候又不知道学什么，感觉工作完后并没有学习动力了，那么对于技能提升这块我们或许也有共同话题，在星球内也可以讨论讨论，行动起来。</p>
<p>第三点，我们星球提供更多的还是服务，因此如果仅仅靠我们单向输出，一年内也许很难出很多优质的内容，但是我们有的是一些编程经验，我们可以发现一些优秀的内容，筛选后再整合到一页，我们也应该多多向业界其它优秀人士继续学习。</p>
<p>第四点，如果你能跟着这份知识空间学习，或许我们今后还能有更多的合作，比如一起做一款产品出来，其实在过去学校参与项目比赛，我发现其实一个队伍有没有大佬并不重要，有大佬只是决定了这个比赛获奖的上限程度，但没有这个关键的凝聚力，也很难达到该有的成绩，比如组内成员做着做着就放弃了，前几周都还在交流，后几周都没人说话了，因此一个小分队的凝聚力挺重要的，有相同目标的小分队，哪怕就只有 5 个技术水平一般的人，在同样的准备时间内成绩不会太差的。</p>
<p>文档更新完后，会在星球内发布相关置顶的帖子，可以期待一下，继续努力！</p>
</details>
<details class="details custom-block"><summary>附：扫码加入</summary>
<p><img src="/img/join.png" alt=""></p>
</details>
]]></content:encoded>
        </item>
    </channel>
</rss>